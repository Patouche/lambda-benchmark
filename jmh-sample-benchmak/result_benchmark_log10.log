# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1)

# Run progress: 0,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: n = 5497, mean = 433 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 64, 165, 519, 8076, 1857536, 1857536 ns/op
# Warmup Iteration   2: n = 2861, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 55, 60, 61, 63, 201, 7040, 7040 ns/op
# Warmup Iteration   3: n = 2850, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 63, 65, 132, 138, 7336, 7336 ns/op
# Warmup Iteration   4: n = 2895, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 64, 65, 67, 114, 126, 126 ns/op
# Warmup Iteration   5: n = 2888, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 64, 66, 110, 126, 126 ns/op
# Warmup Iteration   6: n = 2858, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 62, 64, 88, 1125, 7176, 7176 ns/op
# Warmup Iteration   7: n = 2878, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 67, 86, 127, 127 ns/op
# Warmup Iteration   8: n = 2843, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 153, 7072, 7072 ns/op
Iteration   1: n = 2870, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 67, 108, 282, 282 ns/op
Iteration   2: n = 2818, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 73, 142, 200, 200 ns/op
Iteration   3: n = 2816, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 66, 68, 122, 133, 133 ns/op
Iteration   4: n = 2802, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 66, 67, 72, 84, 84 ns/op
Iteration   5: n = 2851, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 105, 158, 7096, 7096 ns/op
Iteration   6: n = 2789, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 68, 82, 199, 236, 236 ns/op
Iteration   7: n = 2866, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 63, 65, 78, 137, 142, 142 ns/op
Iteration   8: n = 2832, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 73, 76, 121, 147, 147 ns/op
Iteration   9: n = 2852, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 63, 64, 68, 117, 138, 138 ns/op
Iteration  10: n = 2800, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 98, 120, 171, 273, 301, 301 ns/op
Iteration  11: n = 1572, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 99, 123, 162, 488, 749, 749 ns/op
Iteration  12: n = 2658, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 99, 139, 265, 289, 289 ns/op
Iteration  13: n = 2845, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 63, 67, 69, 77, 82, 82 ns/op
Iteration  14: n = 2812, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 62, 63, 127, 162, 7176, 7176 ns/op
Iteration  15: n = 2872, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 63, 63, 66, 148, 7096, 7096 ns/op
Iteration  16: n = 2822, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 58, 63, 64, 105, 193, 275, 275 ns/op
Iteration  17: n = 2849, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 63, 63, 65, 127, 257, 257 ns/op
Iteration  18: n = 2840, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 63, 63, 100, 132, 2964, 2964 ns/op
Iteration  19: n = 2810, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 63, 64, 100, 183, 7088, 7088 ns/op
Iteration  20: n = 2854, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 62, 63, 65, 1125, 7096, 7096 ns/op


Result: 60,585 ±(99.9%) 1,052 ns/op [Average]
  Statistics: (min, avg, max) = (51,000, 60,585, 7176,000), stdev = 75,152
  Confidence interval (99.9%): [59,533, 61,638]
  Samples, N = 55230
        mean =     60,585 ±(99.9%) 1,052 ns/op
         min =     51,000 ns/op
  p( 0,0000) =     51,000 ns/op
  p(50,0000) =     59,000 ns/op
  p(90,0000) =     64,000 ns/op
  p(95,0000) =     65,000 ns/op
  p(99,0000) =    115,000 ns/op
  p(99,9000) =    180,000 ns/op
  p(99,9900) =   7067,076 ns/op
  p(99,9990) =   7176,000 ns/op
  p(99,9999) =   7176,000 ns/op
         max =   7176,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 10)

# Run progress: 5,56% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: n = 5454, mean = 432 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 57, 64, 128, 368, 7860, 1849344, 1849344 ns/op
# Warmup Iteration   2: n = 3039, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 57, 60, 63, 64, 107, 7136, 7136 ns/op
# Warmup Iteration   3: n = 2959, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 132, 138, 162, 162 ns/op
# Warmup Iteration   4: n = 2994, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 66, 76, 93, 93 ns/op
# Warmup Iteration   5: n = 2938, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 65, 134, 567, 7368, 7368 ns/op
# Warmup Iteration   6: n = 2963, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 64, 65, 67, 135, 7832, 7832 ns/op
# Warmup Iteration   7: n = 2888, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 86, 98, 124, 124 ns/op
# Warmup Iteration   8: n = 2933, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 66, 604, 7064, 7064 ns/op
Iteration   1: n = 2881, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 134, 135, 139, 139 ns/op
Iteration   2: n = 2881, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 64, 65, 134, 135, 149, 149 ns/op
Iteration   3: n = 2872, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 135, 137, 215, 215 ns/op
Iteration   4: n = 2944, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 68, 102, 167, 167 ns/op
Iteration   5: n = 2934, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 68, 133, 158, 158 ns/op
Iteration   6: n = 2888, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 134, 178, 232, 232 ns/op
Iteration   7: n = 2873, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 103, 356, 8928, 8928 ns/op
Iteration   8: n = 2852, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 68, 1151, 7184, 7184 ns/op
Iteration   9: n = 2829, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 135, 145, 189, 189 ns/op
Iteration  10: n = 2797, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 64, 66, 98, 135, 195, 272, 272 ns/op
Iteration  11: n = 2824, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 130, 260, 311, 311 ns/op
Iteration  12: n = 2829, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 66, 67, 116, 204, 242, 242 ns/op
Iteration  13: n = 2807, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 66, 67, 80, 137, 7352, 7352 ns/op
Iteration  14: n = 2838, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 67, 134, 137, 155, 155 ns/op
Iteration  15: n = 2847, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 134, 138, 158, 158 ns/op
Iteration  16: n = 2866, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 72, 93, 93 ns/op
Iteration  17: n = 2698, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 67, 67, 135, 155, 7248, 7248 ns/op
Iteration  18: n = 2753, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 99, 129, 133, 133 ns/op
Iteration  19: n = 2813, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 98, 157, 182, 182 ns/op
Iteration  20: n = 2686, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 103, 174, 284, 284 ns/op


Result: 62,561 ±(99.9%) 0,990 ns/op [Average]
  Statistics: (min, avg, max) = (53,000, 62,561, 8928,000), stdev = 71,638
  Confidence interval (99.9%): [61,571, 63,551]
  Samples, N = 56712
        mean =     62,561 ±(99.9%) 0,990 ns/op
         min =     53,000 ns/op
  p( 0,0000) =     53,000 ns/op
  p(50,0000) =     60,000 ns/op
  p(90,0000) =     66,000 ns/op
  p(95,0000) =     67,000 ns/op
  p(99,0000) =    132,000 ns/op
  p(99,9000) =    153,287 ns/op
  p(99,9900) =   3419,008 ns/op
  p(99,9990) =   8928,000 ns/op
  p(99,9999) =   8928,000 ns/op
         max =   8928,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 100)

# Run progress: 11,11% complete, ETA 00:01:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 5161, mean = 657 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 137, 401, 7777, 2883584, 2883584 ns/op
# Warmup Iteration   2: n = 2826, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 59, 64, 65, 94, 297, 332, 332 ns/op
# Warmup Iteration   3: n = 2774, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 105, 155, 286, 286 ns/op
# Warmup Iteration   4: n = 2883, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 109, 133, 181, 181 ns/op
# Warmup Iteration   5: n = 2743, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 66, 67, 119, 241, 319, 319 ns/op
# Warmup Iteration   6: n = 2791, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 102, 132, 7312, 7312 ns/op
# Warmup Iteration   7: n = 2804, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 96, 122, 140, 140 ns/op
# Warmup Iteration   8: n = 2780, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 102, 1745, 7352, 7352 ns/op
Iteration   1: n = 2821, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 116, 332, 7272, 7272 ns/op
Iteration   2: n = 2756, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 118, 225, 7248, 7248 ns/op
Iteration   3: n = 2795, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 106, 235, 316, 316 ns/op
Iteration   4: n = 2794, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 67, 120, 236, 4816, 4816 ns/op
Iteration   5: n = 2792, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 115, 194, 7360, 7360 ns/op
Iteration   6: n = 2731, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 119, 212, 277, 277 ns/op
Iteration   7: n = 2809, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 66, 67, 105, 134, 157, 157 ns/op
Iteration   8: n = 2758, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 100, 131, 246, 352, 352 ns/op
Iteration   9: n = 2518, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 66, 67, 107, 140, 7352, 7352 ns/op
Iteration  10: n = 2779, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 73, 118, 121, 121 ns/op
Iteration  11: n = 2834, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 106, 166, 226, 226 ns/op
Iteration  12: n = 2898, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 148, 287, 287 ns/op
Iteration  13: n = 2836, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 66, 111, 162, 263, 263 ns/op
Iteration  14: n = 2958, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 66, 67, 102, 138, 176, 176 ns/op
Iteration  15: n = 2817, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 102, 157, 296, 296 ns/op
Iteration  16: n = 2821, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 112, 234, 299, 299 ns/op
Iteration  17: n = 2885, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 124, 7224, 7224 ns/op
Iteration  18: n = 2783, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 134, 141, 147, 147 ns/op
Iteration  19: n = 2834, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 65, 66, 72, 137, 7416, 7416 ns/op
Iteration  20: n = 2811, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 66, 67, 134, 138, 7240, 7240 ns/op


Result: 63,692 ±(99.9%) 1,167 ns/op [Average]
  Statistics: (min, avg, max) = (53,000, 63,692, 7416,000), stdev = 83,944
  Confidence interval (99.9%): [62,525, 64,859]
  Samples, N = 56030
        mean =     63,692 ±(99.9%) 1,167 ns/op
         min =     53,000 ns/op
  p( 0,0000) =     53,000 ns/op
  p(50,0000) =     62,000 ns/op
  p(90,0000) =     66,000 ns/op
  p(95,0000) =     67,000 ns/op
  p(99,0000) =    113,000 ns/op
  p(99,9000) =    168,969 ns/op
  p(99,9900) =   7243,175 ns/op
  p(99,9990) =   7416,000 ns/op
  p(99,9999) =   7416,000 ns/op
         max =   7416,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000)

# Run progress: 16,67% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: n = 5921, mean = 511 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 61, 153, 602, 7450, 2490368, 2490368 ns/op
# Warmup Iteration   2: n = 3333, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 61, 74, 161, 379, 379 ns/op
# Warmup Iteration   3: n = 3164, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 63, 104, 223, 289, 289 ns/op
# Warmup Iteration   4: n = 3138, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 62, 64, 149, 7304, 7304 ns/op
# Warmup Iteration   5: n = 3170, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 62, 63, 116, 11056, 11056 ns/op
# Warmup Iteration   6: n = 3220, mean = 75 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 63, 99, 7245, 26208, 26208 ns/op
# Warmup Iteration   7: n = 3263, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 56, 62, 62, 63, 147, 7312, 7312 ns/op
# Warmup Iteration   8: n = 3175, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 63, 114, 181, 7232, 7232 ns/op
Iteration   1: n = 3239, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 62, 63, 88, 188, 7184, 7184 ns/op
Iteration   2: n = 3137, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 59, 62, 63, 81, 229, 282, 282 ns/op
Iteration   3: n = 3190, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 58, 62, 63, 125, 130, 195, 195 ns/op
Iteration   4: n = 3168, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 64, 127, 234, 405, 405 ns/op
Iteration   5: n = 3217, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 60, 61, 95, 198, 7416, 7416 ns/op
Iteration   6: n = 3320, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 56, 60, 62, 63, 131, 300, 300 ns/op
Iteration   7: n = 3231, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 59, 62, 63, 74, 131, 7304, 7304 ns/op
Iteration   8: n = 3276, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 58, 62, 62, 63, 117, 8144, 8144 ns/op
Iteration   9: n = 3213, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 63, 64, 129, 199, 199 ns/op
Iteration  10: n = 3164, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 76, 79, 128, 159, 159 ns/op
Iteration  11: n = 3123, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 62, 106, 153, 7368, 7368 ns/op
Iteration  12: n = 3205, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 57, 62, 62, 63, 169, 34624, 34624 ns/op
Iteration  13: n = 3172, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 63, 80, 173, 10304, 10304 ns/op
Iteration  14: n = 3195, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 63, 102, 120, 134, 134 ns/op
Iteration  15: n = 3221, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 58, 62, 63, 105, 132, 174, 174 ns/op
Iteration  16: n = 3177, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 63, 109, 164, 192, 192 ns/op
Iteration  17: n = 3211, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51, 59, 62, 62, 63, 119, 149, 149 ns/op
Iteration  18: n = 3221, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 62, 63, 104, 207, 9920, 9920 ns/op
Iteration  19: n = 3198, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 57, 62, 63, 98, 122, 159, 159 ns/op
Iteration  20: n = 3225, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 57, 62, 63, 98, 150, 174, 174 ns/op


Result: 59,997 ±(99.9%) 2,136 ns/op [Average]
  Statistics: (min, avg, max) = (50,000, 59,997, 34624,000), stdev = 164,342
  Confidence interval (99.9%): [57,861, 62,133]
  Samples, N = 64103
        mean =     59,997 ±(99.9%) 2,136 ns/op
         min =     50,000 ns/op
  p( 0,0000) =     50,000 ns/op
  p(50,0000) =     59,000 ns/op
  p(90,0000) =     62,000 ns/op
  p(95,0000) =     63,000 ns/op
  p(99,0000) =    101,000 ns/op
  p(99,9000) =    148,896 ns/op
  p(99,9900) =   7396,301 ns/op
  p(99,9990) =  34624,000 ns/op
  p(99,9999) =  34624,000 ns/op
         max =  34624,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000000)

# Run progress: 22,22% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 5125, mean = 648 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 80, 152, 416, 20379, 2682880, 2682880 ns/op
# Warmup Iteration   2: n = 2931, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 64, 65, 68, 237, 3604, 3604 ns/op
# Warmup Iteration   3: n = 2722, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 67, 112, 211, 269, 269 ns/op
# Warmup Iteration   4: n = 2850, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 102, 151, 228, 228 ns/op
# Warmup Iteration   5: n = 2677, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 67, 106, 209, 365, 365 ns/op
# Warmup Iteration   6: n = 2850, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 67, 75, 119, 282, 282 ns/op
# Warmup Iteration   7: n = 2848, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 67, 107, 209, 361, 361 ns/op
# Warmup Iteration   8: n = 2750, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 79, 135, 194, 215, 215 ns/op
Iteration   1: n = 2851, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 111, 359, 7480, 7480 ns/op
Iteration   2: n = 2858, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 70, 139, 159, 159 ns/op
Iteration   3: n = 2792, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 66, 67, 135, 152, 5400, 5400 ns/op
Iteration   4: n = 2859, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 65, 66, 82, 167, 314, 314 ns/op
Iteration   5: n = 2846, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 134, 135, 174, 174 ns/op
Iteration   6: n = 2954, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 67, 7132, 8992, 8992 ns/op
Iteration   7: n = 2841, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 135, 1175, 7000, 7000 ns/op
Iteration   8: n = 2901, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 132, 163, 205, 205 ns/op
Iteration   9: n = 2824, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 60, 66, 67, 135, 191, 248, 248 ns/op
Iteration  10: n = 2855, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 60, 66, 66, 116, 235, 578, 578 ns/op
Iteration  11: n = 2872, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 73, 169, 354, 354 ns/op
Iteration  12: n = 2816, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 68, 142, 277, 277 ns/op
Iteration  13: n = 2894, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 926, 7232, 7232 ns/op
Iteration  14: n = 2924, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 67, 70, 80, 120, 120 ns/op
Iteration  15: n = 2924, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 66, 70, 96, 96 ns/op
Iteration  16: n = 2910, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 67, 68, 74, 252, 252 ns/op
Iteration  17: n = 2905, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 67, 68, 117, 119, 119 ns/op
Iteration  18: n = 2918, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 65, 66, 656, 7320, 7320 ns/op
Iteration  19: n = 2923, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 67, 68, 76, 130, 130 ns/op
Iteration  20: n = 2852, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 135, 147, 152, 152 ns/op


Result: 62,558 ±(99.9%) 1,354 ns/op [Average]
  Statistics: (min, avg, max) = (53,000, 62,558, 8992,000), stdev = 98,658
  Confidence interval (99.9%): [61,204, 63,912]
  Samples, N = 57519
        mean =     62,558 ±(99.9%) 1,354 ns/op
         min =     53,000 ns/op
  p( 0,0000) =     53,000 ns/op
  p(50,0000) =     60,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     66,000 ns/op
  p(99,0000) =    107,000 ns/op
  p(99,9000) =    152,000 ns/op
  p(99,9900) =   7211,968 ns/op
  p(99,9990) =   8992,000 ns/op
  p(99,9999) =   8992,000 ns/op
         max =   8992,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000000000)

# Run progress: 27,78% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: n = 5514, mean = 392 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 57, 63, 81, 354, 7431, 1708032, 1708032 ns/op
# Warmup Iteration   2: n = 2853, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 63, 63, 65, 110, 7368, 7368 ns/op
# Warmup Iteration   3: n = 2975, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 66, 108, 7064, 7064 ns/op
# Warmup Iteration   4: n = 2895, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 81, 134, 135, 135 ns/op
# Warmup Iteration   5: n = 2888, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 69, 74, 871, 7248, 7248 ns/op
# Warmup Iteration   6: n = 2896, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 68, 133, 167, 167 ns/op
# Warmup Iteration   7: n = 2898, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 67, 135, 175, 175 ns/op
# Warmup Iteration   8: n = 2914, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 66, 134, 162, 162 ns/op
Iteration   1: n = 2837, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 133, 153, 216, 216 ns/op
Iteration   2: n = 2916, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 64, 66, 132, 135, 135 ns/op
Iteration   3: n = 2842, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 1217, 7728, 7728 ns/op
Iteration   4: n = 2903, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 71, 91, 3936, 3936 ns/op
Iteration   5: n = 2916, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 66, 98, 120, 120 ns/op
Iteration   6: n = 2869, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 136, 147, 147 ns/op
Iteration   7: n = 2928, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 62, 64, 66, 73, 124, 124 ns/op
Iteration   8: n = 2901, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 68, 71, 154, 7096, 7096 ns/op
Iteration   9: n = 3000, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 59, 64, 65, 67, 69, 106, 106 ns/op
Iteration  10: n = 2895, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 67, 70, 74, 81, 81 ns/op
Iteration  11: n = 2845, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 61, 67, 68, 112, 176, 224, 224 ns/op
Iteration  12: n = 2891, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 67, 68, 116, 169, 217, 217 ns/op
Iteration  13: n = 2918, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 95, 161, 7392, 7392 ns/op
Iteration  14: n = 2936, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 68, 82, 108, 108 ns/op
Iteration  15: n = 2944, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 65, 67, 154, 285, 285 ns/op
Iteration  16: n = 2933, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 65, 67, 97, 119, 119 ns/op
Iteration  17: n = 2888, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 135, 159, 7288, 7288 ns/op
Iteration  18: n = 2885, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 133, 163, 7232, 7232 ns/op
Iteration  19: n = 2866, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 134, 152, 7120, 7120 ns/op
Iteration  20: n = 2900, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 70, 121, 123, 123 ns/op


Result: 61,231 ±(99.9%) 1,109 ns/op [Average]
  Statistics: (min, avg, max) = (53,000, 61,231, 7728,000), stdev = 81,165
  Confidence interval (99.9%): [60,122, 62,340]
  Samples, N = 58013
        mean =     61,231 ±(99.9%) 1,109 ns/op
         min =     53,000 ns/op
  p( 0,0000) =     53,000 ns/op
  p(50,0000) =     59,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     66,000 ns/op
  p(99,0000) =     98,000 ns/op
  p(99,9000) =    139,000 ns/op
  p(99,9900) =   7100,766 ns/op
  p(99,9990) =   7728,000 ns/op
  p(99,9999) =   7728,000 ns/op
         max =   7728,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 1)

# Run progress: 33,33% complete, ETA 00:01:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 4834, mean = 513 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 31, 39, 194, 775, 1051, 10020, 1787904, 1787904 ns/op
# Warmup Iteration   2: n = 2501, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 31, 39, 41, 42, 48, 749, 7176, 7176 ns/op
# Warmup Iteration   3: n = 2275, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 53, 64, 66, 66 ns/op
# Warmup Iteration   4: n = 2338, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 41, 96, 102, 102 ns/op
# Warmup Iteration   5: n = 2340, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 57, 94, 102, 102 ns/op
# Warmup Iteration   6: n = 2321, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 82, 92, 92 ns/op
# Warmup Iteration   7: n = 2359, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 39, 94, 131, 131 ns/op
# Warmup Iteration   8: n = 2269, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 88, 92, 92 ns/op
Iteration   1: n = 2307, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 40, 79, 90, 90 ns/op
Iteration   2: n = 2274, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 80, 92, 108, 108 ns/op
Iteration   3: n = 2321, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 42, 45, 75, 82, 82 ns/op
Iteration   4: n = 2218, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 82, 100, 152, 152 ns/op
Iteration   5: n = 2303, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 40, 79, 154, 154 ns/op
Iteration   6: n = 2268, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 41, 65, 184, 229, 229 ns/op
Iteration   7: n = 2302, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 82, 84, 219, 219 ns/op
Iteration   8: n = 2305, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 53, 60, 100, 100 ns/op
Iteration   9: n = 2302, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 37, 38, 79, 105, 150, 150 ns/op
Iteration  10: n = 2253, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 40, 101, 265, 390, 390 ns/op
Iteration  11: n = 2255, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 81, 164, 7184, 7184 ns/op
Iteration  12: n = 2273, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 80, 95, 121, 121 ns/op
Iteration  13: n = 2306, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 82, 82, 82 ns/op
Iteration  14: n = 2320, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 39, 66, 92, 92 ns/op
Iteration  15: n = 2294, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 67, 92, 92 ns/op
Iteration  16: n = 2280, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 42, 5137, 8064, 8064 ns/op
Iteration  17: n = 2292, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 68, 7920, 7920 ns/op
Iteration  18: n = 2293, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 86, 102, 102 ns/op
Iteration  19: n = 2298, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 41, 65, 95, 95 ns/op
Iteration  20: n = 2285, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 78, 128, 7480, 7480 ns/op


Result: 37,309 ±(99.9%) 1,214 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 37,309, 8064,000), stdev = 78,912
  Confidence interval (99.9%): [36,095, 38,523]
  Samples, N = 45749
        mean =     37,309 ±(99.9%) 1,214 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     36,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     77,000 ns/op
  p(99,9000) =    103,000 ns/op
  p(99,9900) =   7138,000 ns/op
  p(99,9990) =   8064,000 ns/op
  p(99,9999) =   8064,000 ns/op
         max =   8064,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 10)

# Run progress: 38,89% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: n = 4796, mean = 534 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 33, 137, 742, 1150, 8436, 1992704, 1992704 ns/op
# Warmup Iteration   2: n = 2570, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 33, 36, 36, 37, 93, 2632, 2632 ns/op
# Warmup Iteration   3: n = 2283, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 37, 38, 80, 97, 7112, 7112 ns/op
# Warmup Iteration   4: n = 2313, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 77, 122, 137, 137 ns/op
# Warmup Iteration   5: n = 2349, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 39, 84, 232, 232 ns/op
# Warmup Iteration   6: n = 2287, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 92, 102, 102 ns/op
# Warmup Iteration   7: n = 2298, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 37, 38, 79, 88, 97, 97 ns/op
# Warmup Iteration   8: n = 2310, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 92, 100, 100 ns/op
Iteration   1: n = 2282, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 84, 98, 98 ns/op
Iteration   2: n = 2300, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 42, 44, 83, 7200, 7200 ns/op
Iteration   3: n = 2302, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 42, 44, 59, 68, 68 ns/op
Iteration   4: n = 2324, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 46, 60, 60 ns/op
Iteration   5: n = 2240, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 109, 118, 118 ns/op
Iteration   6: n = 2319, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 42, 176, 7200, 7200 ns/op
Iteration   7: n = 2319, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 85, 228, 355, 355 ns/op
Iteration   8: n = 2116, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 43, 52, 100, 108, 108 ns/op
Iteration   9: n = 2161, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 38, 39, 40, 85, 106, 106 ns/op
Iteration  10: n = 2082, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 39, 40, 84, 118, 162, 226, 226 ns/op
Iteration  11: n = 2109, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 45, 112, 217, 235, 235 ns/op
Iteration  12: n = 2175, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 38, 39, 40, 58, 62, 62 ns/op
Iteration  13: n = 2143, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 42, 44, 50, 54, 54 ns/op
Iteration  14: n = 2118, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 40, 42, 87, 89, 89 ns/op
Iteration  15: n = 2114, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 42, 45, 110, 7112, 7112 ns/op
Iteration  16: n = 2082, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 40, 42, 225, 7344, 7344 ns/op
Iteration  17: n = 2093, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 39, 85, 108, 118, 118 ns/op
Iteration  18: n = 2162, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 39, 41, 48, 62, 62 ns/op
Iteration  19: n = 2144, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 40, 41, 109, 137, 137 ns/op
Iteration  20: n = 2059, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 40, 84, 355, 7304, 7304 ns/op


Result: 38,409 ±(99.9%) 1,218 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 38,409, 7344,000), stdev = 77,348
  Confidence interval (99.9%): [37,191, 39,628]
  Samples, N = 43644
        mean =     38,409 ±(99.9%) 1,218 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     37,000 ns/op
  p(90,0000) =     39,000 ns/op
  p(95,0000) =     40,000 ns/op
  p(99,0000) =     79,000 ns/op
  p(99,9000) =    125,065 ns/op
  p(99,9900) =   7167,924 ns/op
  p(99,9990) =   7344,000 ns/op
  p(99,9999) =   7344,000 ns/op
         max =   7344,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 100)

# Run progress: 44,44% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 4817, mean = 891 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 31, 40, 548, 1306, 1993, 14174, 3137536, 3137536 ns/op
# Warmup Iteration   2: n = 2412, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 31, 40, 42, 45, 57, 152, 7144, 7144 ns/op
# Warmup Iteration   3: n = 2313, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 39, 77, 85, 85 ns/op
# Warmup Iteration   4: n = 2233, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 84, 176, 235, 235 ns/op
# Warmup Iteration   5: n = 2266, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 54, 113, 120, 120 ns/op
# Warmup Iteration   6: n = 2266, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 97, 127, 127 ns/op
# Warmup Iteration   7: n = 2243, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 80, 104, 112, 112 ns/op
# Warmup Iteration   8: n = 2208, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 84, 227, 7144, 7144 ns/op
Iteration   1: n = 2304, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 4923, 7360, 7360 ns/op
Iteration   2: n = 2191, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 46, 55, 167, 227, 227 ns/op
Iteration   3: n = 2248, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 80, 83, 83, 83 ns/op
Iteration   4: n = 2213, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 45, 82, 126, 192, 192 ns/op
Iteration   5: n = 2253, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 56, 134, 168, 168 ns/op
Iteration   6: n = 2221, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 82, 184, 201, 201 ns/op
Iteration   7: n = 2303, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 37, 38, 61, 104, 6992, 6992 ns/op
Iteration   8: n = 2235, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 46, 85, 140, 198, 198 ns/op
Iteration   9: n = 2217, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 85, 149, 180, 180 ns/op
Iteration  10: n = 2238, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 40, 5485, 7200, 7200 ns/op
Iteration  11: n = 2228, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 42, 108, 143, 143 ns/op
Iteration  12: n = 2257, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 113, 125, 125 ns/op
Iteration  13: n = 2267, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 40, 42, 102, 309, 309 ns/op
Iteration  14: n = 2232, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 40, 109, 152, 152 ns/op
Iteration  15: n = 2261, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 80, 87, 97, 97 ns/op
Iteration  16: n = 2328, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 57, 110, 152, 152 ns/op
Iteration  17: n = 2224, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 82, 215, 7216, 7216 ns/op
Iteration  18: n = 2289, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 40, 142, 208, 208 ns/op
Iteration  19: n = 2218, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 82, 199, 261, 261 ns/op
Iteration  20: n = 2279, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 52, 94, 99, 99 ns/op


Result: 38,065 ±(99.9%) 1,281 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 38,065, 7360,000), stdev = 82,604
  Confidence interval (99.9%): [36,784, 39,347]
  Samples, N = 45006
        mean =     38,065 ±(99.9%) 1,281 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     37,000 ns/op
  p(90,0000) =     39,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     80,000 ns/op
  p(99,9000) =    119,993 ns/op
  p(99,9900) =   7111,910 ns/op
  p(99,9990) =   7360,000 ns/op
  p(99,9999) =   7360,000 ns/op
         max =   7360,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 1000)

# Run progress: 50,00% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: n = 4814, mean = 490 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 348, 668, 1023, 7728, 1720320, 1720320 ns/op
# Warmup Iteration   2: n = 2450, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 52, 207, 398, 398 ns/op
# Warmup Iteration   3: n = 2270, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 82, 184, 282, 282 ns/op
# Warmup Iteration   4: n = 2292, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 39, 45, 106, 152, 152 ns/op
# Warmup Iteration   5: n = 2342, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 39, 102, 7200, 7200 ns/op
# Warmup Iteration   6: n = 2338, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 43, 100, 134, 134 ns/op
# Warmup Iteration   7: n = 2276, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 96, 112, 112 ns/op
# Warmup Iteration   8: n = 2212, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 41, 85, 147, 164, 164 ns/op
Iteration   1: n = 2295, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 39, 82, 208, 7224, 7224 ns/op
Iteration   2: n = 2279, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 70, 253, 309, 309 ns/op
Iteration   3: n = 2282, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 80, 214, 240, 240 ns/op
Iteration   4: n = 2349, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 45, 51, 130, 137, 137 ns/op
Iteration   5: n = 2301, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 41, 44, 152, 7240, 7240 ns/op
Iteration   6: n = 2362, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 39, 97, 101, 101 ns/op
Iteration   7: n = 2273, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 92, 296, 372, 372 ns/op
Iteration   8: n = 2308, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 54, 151, 7072, 7072 ns/op
Iteration   9: n = 2223, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 30, 39, 40, 40, 96, 210, 257, 257 ns/op
Iteration  10: n = 2281, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 40, 40, 42, 109, 397, 397 ns/op
Iteration  11: n = 2295, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 39, 39, 47, 86, 97, 97 ns/op
Iteration  12: n = 2315, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 39, 39, 40, 85, 162, 162 ns/op
Iteration  13: n = 2281, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 39, 39, 85, 99, 112, 112 ns/op
Iteration  14: n = 2324, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 38, 39, 39, 42, 98, 264, 264 ns/op
Iteration  15: n = 2353, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 39, 40, 42, 186, 1380, 1380 ns/op
Iteration  16: n = 2366, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 38, 39, 192, 7144, 7144 ns/op
Iteration  17: n = 2353, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 99, 107, 107 ns/op
Iteration  18: n = 2366, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 59, 83, 164, 164 ns/op
Iteration  19: n = 2359, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 46, 83, 90, 90 ns/op
Iteration  20: n = 2327, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 40, 41, 91, 101, 101 ns/op


Result: 38,058 ±(99.9%) 1,025 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 38,058, 7240,000), stdev = 67,005
  Confidence interval (99.9%): [37,033, 39,083]
  Samples, N = 46292
        mean =     38,058 ±(99.9%) 1,025 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     37,000 ns/op
  p(90,0000) =     39,000 ns/op
  p(95,0000) =     40,000 ns/op
  p(99,0000) =     53,000 ns/op
  p(99,9000) =    134,707 ns/op
  p(99,9900) =   3490,024 ns/op
  p(99,9990) =   7240,000 ns/op
  p(99,9999) =   7240,000 ns/op
         max =   7240,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 1000000)

# Run progress: 55,56% complete, ETA 00:00:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 5270, mean = 688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 33, 169, 1245, 2003, 11205, 2695168, 2695168 ns/op
# Warmup Iteration   2: n = 2742, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 33, 35, 35, 37, 160, 7112, 7112 ns/op
# Warmup Iteration   3: n = 2234, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 44, 79, 162, 300, 300 ns/op
# Warmup Iteration   4: n = 2275, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 49, 189, 245, 245 ns/op
# Warmup Iteration   5: n = 2226, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 80, 110, 222, 222 ns/op
# Warmup Iteration   6: n = 2268, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 46, 99, 118, 118 ns/op
# Warmup Iteration   7: n = 2202, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 80, 161, 176, 176 ns/op
# Warmup Iteration   8: n = 2222, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 54, 171, 181, 181 ns/op
Iteration   1: n = 2241, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 40, 48, 111, 117, 117 ns/op
Iteration   2: n = 2283, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 44, 99, 107, 107 ns/op
Iteration   3: n = 2310, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 42, 91, 94, 94 ns/op
Iteration   4: n = 2299, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 41, 43, 79, 96, 96 ns/op
Iteration   5: n = 2269, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 46, 99, 135, 135 ns/op
Iteration   6: n = 2316, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 37, 38, 42, 81, 104, 104 ns/op
Iteration   7: n = 2308, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 43, 79, 109, 109 ns/op
Iteration   8: n = 2287, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 38, 39, 44, 84, 222, 222 ns/op
Iteration   9: n = 2211, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 88, 131, 135, 135 ns/op
Iteration  10: n = 2227, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 93, 199, 230, 230 ns/op
Iteration  11: n = 2295, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 41, 89, 231, 231 ns/op
Iteration  12: n = 2268, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 96, 105, 105 ns/op
Iteration  13: n = 2296, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 42, 94, 234, 234 ns/op
Iteration  14: n = 2291, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 43, 226, 264, 264 ns/op
Iteration  15: n = 2265, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 43, 90, 95, 95 ns/op
Iteration  16: n = 2260, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 104, 6432, 6432 ns/op
Iteration  17: n = 2252, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 42, 44, 81, 110, 110 ns/op
Iteration  18: n = 2176, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 82, 100, 117, 117 ns/op
Iteration  19: n = 2260, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 42, 77, 88, 88 ns/op
Iteration  20: n = 2261, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 39, 41, 368, 7128, 7128 ns/op


Result: 36,822 ±(99.9%) 0,698 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 36,822, 7128,000), stdev = 45,212
  Confidence interval (99.9%): [36,124, 37,521]
  Samples, N = 45375
        mean =     36,822 ±(99.9%) 0,698 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     36,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     46,000 ns/op
  p(99,9000) =    104,000 ns/op
  p(99,9900) =    260,774 ns/op
  p(99,9990) =   7128,000 ns/op
  p(99,9999) =   7128,000 ns/op
         max =   7128,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmGuava
# Parameters: (x = 1000000000)

# Run progress: 61,11% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: n = 4817, mean = 579 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 353, 784, 1360, 15262, 1988608, 1988608 ns/op
# Warmup Iteration   2: n = 2468, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 47, 85, 95, 95 ns/op
# Warmup Iteration   3: n = 2341, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 85, 95, 95 ns/op
# Warmup Iteration   4: n = 2316, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 45, 100, 112, 112 ns/op
# Warmup Iteration   5: n = 2278, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 80, 103, 232, 232 ns/op
# Warmup Iteration   6: n = 2320, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 58, 85, 85 ns/op
# Warmup Iteration   7: n = 2316, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 38, 45, 76, 7184, 7184 ns/op
# Warmup Iteration   8: n = 2316, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 38, 44, 82, 100, 100 ns/op
Iteration   1: n = 2327, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 40, 98, 147, 147 ns/op
Iteration   2: n = 2305, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 47, 86, 104, 104 ns/op
Iteration   3: n = 2242, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 39, 43, 97, 139, 139 ns/op
Iteration   4: n = 2253, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 84, 162, 240, 240 ns/op
Iteration   5: n = 2324, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 64, 91, 91 ns/op
Iteration   6: n = 2188, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 40, 82, 152, 171, 171 ns/op
Iteration   7: n = 2280, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 79, 132, 7472, 7472 ns/op
Iteration   8: n = 2202, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 37, 39, 50, 86, 193, 223, 223 ns/op
Iteration   9: n = 2225, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 85, 193, 326, 326 ns/op
Iteration  10: n = 2295, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 40, 200, 235, 235 ns/op
Iteration  11: n = 2324, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 40, 56, 70, 70 ns/op
Iteration  12: n = 2309, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 40, 78, 102, 102 ns/op
Iteration  13: n = 2312, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 55, 90, 90 ns/op
Iteration  14: n = 2308, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 52, 55, 55 ns/op
Iteration  15: n = 2299, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 40, 41, 62, 72, 72 ns/op
Iteration  16: n = 2300, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 41, 106, 120, 120 ns/op
Iteration  17: n = 2303, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 42, 44, 56, 85, 85 ns/op
Iteration  18: n = 2333, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 37, 38, 79, 84, 99, 99 ns/op
Iteration  19: n = 2281, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 38, 44, 83, 152, 152 ns/op
Iteration  20: n = 2301, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 36, 38, 39, 40, 75, 85, 85 ns/op


Result: 36,736 ±(99.9%) 0,542 ns/op [Average]
  Statistics: (min, avg, max) = (28,000, 36,736, 7472,000), stdev = 35,227
  Confidence interval (99.9%): [36,194, 37,278]
  Samples, N = 45711
        mean =     36,736 ±(99.9%) 0,542 ns/op
         min =     28,000 ns/op
  p( 0,0000) =     28,000 ns/op
  p(50,0000) =     36,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     49,000 ns/op
  p(99,9000) =    101,000 ns/op
  p(99,9900) =    228,146 ns/op
  p(99,9990) =   7472,000 ns/op
  p(99,9999) =   7472,000 ns/op
         max =   7472,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1)

# Run progress: 66,67% complete, ETA 00:00:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 5506, mean = 79 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 78, 263, 7448, 24000, 24000 ns/op
# Warmup Iteration   2: n = 3003, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 69, 313, 7448, 7448 ns/op
# Warmup Iteration   3: n = 2908, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 104, 7160, 7160 ns/op
# Warmup Iteration   4: n = 2763, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 68, 135, 139, 139 ns/op
# Warmup Iteration   5: n = 2824, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 65, 66, 132, 289, 366, 366 ns/op
# Warmup Iteration   6: n = 2879, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 74, 134, 137, 7208, 7208 ns/op
# Warmup Iteration   7: n = 2890, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 89, 359, 7176, 7176 ns/op
# Warmup Iteration   8: n = 2929, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 67, 111, 7272, 7272 ns/op
Iteration   1: n = 2893, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 66, 67, 68, 114, 7328, 7328 ns/op
Iteration   2: n = 2815, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 89, 230, 263, 263 ns/op
Iteration   3: n = 2911, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 67, 73, 221, 455, 455 ns/op
Iteration   4: n = 2770, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 62, 67, 67, 135, 541, 8096, 8096 ns/op
Iteration   5: n = 2898, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 114, 202, 307, 307 ns/op
Iteration   6: n = 2735, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 67, 135, 1049, 7296, 7296 ns/op
Iteration   7: n = 2794, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 70, 118, 247, 377, 377 ns/op
Iteration   8: n = 2735, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 104, 442, 7384, 7384 ns/op
Iteration   9: n = 2701, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 109, 349, 3228, 3228 ns/op
Iteration  10: n = 2795, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 121, 218, 337, 337 ns/op
Iteration  11: n = 2771, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 106, 172, 365, 365 ns/op
Iteration  12: n = 2936, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 66, 71, 117, 117 ns/op
Iteration  13: n = 2953, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 66, 70, 75, 75 ns/op
Iteration  14: n = 2755, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 62, 66, 67, 135, 203, 298, 298 ns/op
Iteration  15: n = 2737, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 94, 189, 259, 259 ns/op
Iteration  16: n = 2939, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 66, 80, 90, 90 ns/op
Iteration  17: n = 2857, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 66, 67, 68, 1404, 11328, 11328 ns/op
Iteration  18: n = 2850, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 62, 66, 67, 70, 159, 277, 277 ns/op
Iteration  19: n = 2798, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 75, 127, 204, 204 ns/op
Iteration  20: n = 2901, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 67, 117, 7216, 7216 ns/op


Result: 62,818 ±(99.9%) 1,277 ns/op [Average]
  Statistics: (min, avg, max) = (53,000, 62,818, 11328,000), stdev = 92,311
  Confidence interval (99.9%): [61,540, 64,095]
  Samples, N = 56544
        mean =     62,818 ±(99.9%) 1,277 ns/op
         min =     53,000 ns/op
  p( 0,0000) =     53,000 ns/op
  p(50,0000) =     61,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     67,000 ns/op
  p(99,0000) =    102,000 ns/op
  p(99,9000) =    195,455 ns/op
  p(99,9900) =   7307,056 ns/op
  p(99,9990) =  11328,000 ns/op
  p(99,9999) =  11328,000 ns/op
         max =  11328,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 10)

# Run progress: 72,22% complete, ETA 00:00:30
# Fork: 1 of 1
# Warmup Iteration   1: n = 6732, mean = 76 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 60, 287, 7402, 24096, 24096 ns/op
# Warmup Iteration   2: n = 3510, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 58, 60, 101, 309, 309 ns/op
# Warmup Iteration   3: n = 3540, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 65, 122, 287, 287 ns/op
# Warmup Iteration   4: n = 3472, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 60, 67, 476, 7288, 7288 ns/op
# Warmup Iteration   5: n = 3443, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 60, 91, 307, 431, 431 ns/op
# Warmup Iteration   6: n = 3425, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 56, 60, 60, 89, 210, 9568, 9568 ns/op
# Warmup Iteration   7: n = 3484, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 211, 248, 248 ns/op
# Warmup Iteration   8: n = 3468, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 135, 280, 280 ns/op
Iteration   1: n = 3435, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 60, 104, 362, 7432, 7432 ns/op
Iteration   2: n = 3453, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 61, 104, 225, 356, 356 ns/op
Iteration   3: n = 3420, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 58, 59, 108, 243, 308, 308 ns/op
Iteration   4: n = 3450, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 60, 89, 218, 7432, 7432 ns/op
Iteration   5: n = 3435, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 186, 262, 262 ns/op
Iteration   6: n = 3529, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 109, 2496, 7416, 7416 ns/op
Iteration   7: n = 3497, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 67, 125, 7592, 7592 ns/op
Iteration   8: n = 3571, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 74, 75, 76, 76 ns/op
Iteration   9: n = 3408, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 61, 121, 251, 297, 297 ns/op
Iteration  10: n = 3379, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 60, 89, 123, 135, 135 ns/op
Iteration  11: n = 3511, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 201, 1128, 1128 ns/op
Iteration  12: n = 3489, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 78, 129, 7240, 7240 ns/op
Iteration  13: n = 3552, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 120, 149, 175, 175 ns/op
Iteration  14: n = 3526, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 168, 7376, 7376 ns/op
Iteration  15: n = 3418, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 60, 60, 102, 195, 219, 219 ns/op
Iteration  16: n = 3500, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 58, 60, 64, 152, 7416, 7416 ns/op
Iteration  17: n = 3542, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 109, 7080, 7080 ns/op
Iteration  18: n = 3570, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 61, 120, 7240, 7240 ns/op
Iteration  19: n = 3567, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 122, 132, 132 ns/op
Iteration  20: n = 3526, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 115, 233, 233 ns/op


Result: 56,360 ±(99.9%) 1,115 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 56,360, 7592,000), stdev = 89,466
  Confidence interval (99.9%): [55,245, 57,474]
  Samples, N = 69778
        mean =     56,360 ±(99.9%) 1,115 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     54,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =     93,000 ns/op
  p(99,9000) =    166,442 ns/op
  p(99,9900) =   7376,707 ns/op
  p(99,9990) =   7592,000 ns/op
  p(99,9999) =   7592,000 ns/op
         max =   7592,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 100)

# Run progress: 77,78% complete, ETA 00:00:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 6665, mean = 85 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 139, 522, 7400, 19328, 19328 ns/op
# Warmup Iteration   2: n = 3575, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 55, 58, 114, 129, 269, 269 ns/op
# Warmup Iteration   3: n = 3604, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 59, 60, 80, 185, 185 ns/op
# Warmup Iteration   4: n = 3659, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 59, 60, 123, 7040, 7040 ns/op
# Warmup Iteration   5: n = 3610, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 56, 59, 117, 128, 7416, 7416 ns/op
# Warmup Iteration   6: n = 3587, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 59, 114, 208, 7136, 7136 ns/op
# Warmup Iteration   7: n = 3618, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 56, 58, 61, 159, 7192, 7192 ns/op
# Warmup Iteration   8: n = 3463, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 56, 59, 60, 103, 215, 7312, 7312 ns/op
Iteration   1: n = 3641, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 59, 60, 138, 7224, 7224 ns/op
Iteration   2: n = 3462, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 70, 74, 215, 7232, 7232 ns/op
Iteration   3: n = 3420, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 119, 133, 7472, 7472 ns/op
Iteration   4: n = 3558, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 91, 123, 163, 163 ns/op
Iteration   5: n = 3378, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 117, 337, 7368, 7368 ns/op
Iteration   6: n = 3598, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 56, 59, 115, 120, 124, 124 ns/op
Iteration   7: n = 3577, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 56, 59, 117, 123, 130, 130 ns/op
Iteration   8: n = 3605, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 59, 60, 67, 82, 7080, 7080 ns/op
Iteration   9: n = 3554, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 52, 59, 60, 99, 141, 7384, 7384 ns/op
Iteration  10: n = 3552, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 52, 59, 60, 106, 168, 213, 213 ns/op
Iteration  11: n = 3636, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 56, 58, 61, 160, 7176, 7176 ns/op
Iteration  12: n = 3539, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 59, 60, 391, 7264, 7264 ns/op
Iteration  13: n = 3587, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 59, 60, 114, 7344, 7344 ns/op
Iteration  14: n = 3534, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 59, 60, 104, 160, 689, 689 ns/op
Iteration  15: n = 3589, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 59, 60, 101, 7288, 7288 ns/op
Iteration  16: n = 3552, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 59, 60, 185, 571, 571 ns/op
Iteration  17: n = 3631, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 59, 60, 65, 7392, 7392 ns/op
Iteration  18: n = 3625, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 58, 59, 60, 77, 7192, 7192 ns/op
Iteration  19: n = 3577, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 59, 60, 103, 115, 115 ns/op
Iteration  20: n = 3616, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 59, 60, 131, 166, 166 ns/op


Result: 54,890 ±(99.9%) 1,215 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 54,890, 7472,000), stdev = 98,521
  Confidence interval (99.9%): [53,676, 56,105]
  Samples, N = 71231
        mean =     54,890 ±(99.9%) 1,215 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     52,000 ns/op
  p(90,0000) =     59,000 ns/op
  p(95,0000) =     59,000 ns/op
  p(99,0000) =     80,000 ns/op
  p(99,9000) =    131,536 ns/op
  p(99,9900) =   7260,058 ns/op
  p(99,9990) =   7472,000 ns/op
  p(99,9999) =   7472,000 ns/op
         max =   7472,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000)

# Run progress: 83,33% complete, ETA 00:00:18
# Fork: 1 of 1
# Warmup Iteration   1: n = 7806, mean = 77 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 47, 53, 57, 314, 7530, 19264, 19264 ns/op
# Warmup Iteration   2: n = 3975, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 48, 54, 55, 57, 222, 7240, 7240 ns/op
# Warmup Iteration   3: n = 2100, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 53, 57, 68, 6497, 7232, 7232 ns/op
# Warmup Iteration   4: n = 2095, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 49, 56, 57, 65, 124, 368, 368 ns/op
# Warmup Iteration   5: n = 2105, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 53, 56, 58, 139, 7216, 7216 ns/op
# Warmup Iteration   6: n = 2097, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 58, 60, 234, 264, 264 ns/op
# Warmup Iteration   7: n = 2058, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 58, 92, 150, 7368, 7368 ns/op
# Warmup Iteration   8: n = 2075, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 94, 181, 188, 188 ns/op
Iteration   1: n = 2018, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 56, 57, 111, 278, 294, 294 ns/op
Iteration   2: n = 2098, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 53, 56, 110, 140, 144, 144 ns/op
Iteration   3: n = 2052, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 78, 1646, 7008, 7008 ns/op
Iteration   4: n = 2113, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 59, 90, 108, 108 ns/op
Iteration   5: n = 2072, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 58, 77, 246, 7256, 7256 ns/op
Iteration   6: n = 2083, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 49, 56, 57, 109, 145, 150, 150 ns/op
Iteration   7: n = 2124, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 54, 58, 60, 97, 99, 99 ns/op
Iteration   8: n = 2087, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 56, 57, 144, 256, 256 ns/op
Iteration   9: n = 2118, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 57, 59, 87, 99, 99 ns/op
Iteration  10: n = 2093, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 56, 57, 90, 91, 91 ns/op
Iteration  11: n = 2132, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 56, 57, 92, 119, 7224, 7224 ns/op
Iteration  12: n = 2104, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 57, 60, 6393, 7176, 7176 ns/op
Iteration  13: n = 2087, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 110, 115, 117, 117 ns/op
Iteration  14: n = 2126, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 53, 56, 57, 87, 2508, 2508 ns/op
Iteration  15: n = 2087, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 56, 56, 57, 87, 89, 89 ns/op
Iteration  16: n = 2090, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 58, 172, 252, 252 ns/op
Iteration  17: n = 2040, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 95, 6998, 7416, 7416 ns/op
Iteration  18: n = 2087, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 57, 131, 7136, 7136 ns/op
Iteration  19: n = 2073, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 55, 56, 100, 238, 260, 260 ns/op
Iteration  20: n = 2086, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 78, 202, 7344, 7344 ns/op


Result: 52,035 ±(99.9%) 1,715 ns/op [Average]
  Statistics: (min, avg, max) = (44,000, 52,035, 7416,000), stdev = 106,487
  Confidence interval (99.9%): [50,320, 53,749]
  Samples, N = 41770
        mean =     52,035 ±(99.9%) 1,715 ns/op
         min =     44,000 ns/op
  p( 0,0000) =     44,000 ns/op
  p(50,0000) =     49,000 ns/op
  p(90,0000) =     56,000 ns/op
  p(95,0000) =     57,000 ns/op
  p(99,0000) =     87,000 ns/op
  p(99,9000) =    156,229 ns/op
  p(99,9900) =   7250,333 ns/op
  p(99,9990) =   7416,000 ns/op
  p(99,9999) =   7416,000 ns/op
         max =   7416,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000000)

# Run progress: 88,89% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 6733, mean = 410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 130, 504, 10058, 1300480, 1300480 ns/op
# Warmup Iteration   2: n = 3563, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 58, 58, 59, 88, 7344, 7344 ns/op
# Warmup Iteration   3: n = 3596, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 105, 121, 121 ns/op
# Warmup Iteration   4: n = 3530, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 104, 118, 118 ns/op
# Warmup Iteration   5: n = 3482, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 90, 209, 310, 310 ns/op
# Warmup Iteration   6: n = 3613, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 61, 88, 121, 121 ns/op
# Warmup Iteration   7: n = 3502, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 120, 135, 177, 177 ns/op
# Warmup Iteration   8: n = 3508, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 82, 133, 240, 240 ns/op
Iteration   1: n = 3557, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 75, 121, 123, 123 ns/op
Iteration   2: n = 3599, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 65, 83, 7320, 7320 ns/op
Iteration   3: n = 3535, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 118, 122, 7144, 7144 ns/op
Iteration   4: n = 3537, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 120, 125, 7136, 7136 ns/op
Iteration   5: n = 3575, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 64, 133, 194, 194 ns/op
Iteration   6: n = 3600, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 61, 122, 122, 122 ns/op
Iteration   7: n = 3599, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 61, 120, 120, 120 ns/op
Iteration   8: n = 3539, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 124, 128, 17376, 17376 ns/op
Iteration   9: n = 3533, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 62, 125, 3430, 8512, 8512 ns/op
Iteration  10: n = 3542, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 58, 62, 95, 120, 218, 306, 306 ns/op
Iteration  11: n = 3484, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 56, 62, 62, 116, 266, 271, 271 ns/op
Iteration  12: n = 3590, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 62, 62, 227, 7224, 7224 ns/op
Iteration  13: n = 3603, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 59, 62, 62, 65, 71, 71 ns/op
Iteration  14: n = 3535, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 56, 62, 62, 63, 68, 262, 262 ns/op
Iteration  15: n = 3597, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 62, 62, 72, 87, 87 ns/op
Iteration  16: n = 3593, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 62, 100, 6976, 6976 ns/op
Iteration  17: n = 3583, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 62, 62, 63, 86, 166, 166 ns/op
Iteration  18: n = 3600, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 63, 65, 98, 98 ns/op
Iteration  19: n = 3590, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 62, 62, 63, 179, 7256, 7256 ns/op
Iteration  20: n = 3628, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 59, 61, 62, 65, 7960, 7960 ns/op


Result: 56,789 ±(99.9%) 1,418 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 56,789, 17376,000), stdev = 115,140
  Confidence interval (99.9%): [55,371, 58,207]
  Samples, N = 71419
        mean =     56,789 ±(99.9%) 1,418 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     54,000 ns/op
  p(90,0000) =     61,000 ns/op
  p(95,0000) =     62,000 ns/op
  p(99,0000) =     76,000 ns/op
  p(99,9000) =    135,580 ns/op
  p(99,9900) =   7237,728 ns/op
  p(99,9990) =  17376,000 ns/op
  p(99,9999) =  17376,000 ns/op
         max =  17376,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000000000)

# Run progress: 94,44% complete, ETA 00:00:06
# Fork: 1 of 1
# Warmup Iteration   1: n = 6773, mean = 74 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 59, 216, 7348, 25056, 25056 ns/op
# Warmup Iteration   2: n = 3550, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 58, 63, 71, 92, 62976, 62976 ns/op
# Warmup Iteration   3: n = 3609, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 60, 61, 79, 79 ns/op
# Warmup Iteration   4: n = 3673, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 59, 60, 68, 113, 113 ns/op
# Warmup Iteration   5: n = 3522, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 120, 142, 246, 246 ns/op
# Warmup Iteration   6: n = 3588, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 63, 66, 82, 82 ns/op
# Warmup Iteration   7: n = 3584, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 90, 7064, 7064 ns/op
# Warmup Iteration   8: n = 3509, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 120, 123, 143, 143 ns/op
Iteration   1: n = 3546, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 63, 119, 123, 7112, 7112 ns/op
Iteration   2: n = 3547, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 119, 125, 7280, 7280 ns/op
Iteration   3: n = 3580, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 56, 59, 118, 135, 7264, 7264 ns/op
Iteration   4: n = 3570, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 61, 3251, 7360, 7360 ns/op
Iteration   5: n = 3506, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 58, 60, 120, 137, 7208, 7208 ns/op
Iteration   6: n = 3485, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 120, 157, 7096, 7096 ns/op
Iteration   7: n = 3587, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 88, 206, 238, 238 ns/op
Iteration   8: n = 3551, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 58, 62, 124, 125, 127, 127 ns/op
Iteration   9: n = 3575, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 62, 120, 125, 7368, 7368 ns/op
Iteration  10: n = 3526, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 55, 61, 62, 62, 3551, 7408, 7408 ns/op
Iteration  11: n = 3468, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 56, 62, 62, 124, 248, 7376, 7376 ns/op
Iteration  12: n = 3494, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 61, 62, 96, 246, 392, 392 ns/op
Iteration  13: n = 3598, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 61, 62, 98, 7232, 7232 ns/op
Iteration  14: n = 3494, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 56, 62, 62, 96, 197, 7328, 7328 ns/op
Iteration  15: n = 3551, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 61, 62, 175, 237, 237 ns/op
Iteration  16: n = 3607, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 58, 60, 62, 82, 254, 254 ns/op
Iteration  17: n = 3390, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 125, 125, 140, 140 ns/op
Iteration  18: n = 3497, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 58, 61, 125, 125, 142, 142 ns/op
Iteration  19: n = 3428, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 125, 196, 480, 480 ns/op
Iteration  20: n = 3474, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 62, 125, 143, 7176, 7176 ns/op


Result: 57,508 ±(99.9%) 1,356 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 57,508, 7408,000), stdev = 109,362
  Confidence interval (99.9%): [56,152, 58,863]
  Samples, N = 70474
        mean =     57,508 ±(99.9%) 1,356 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     54,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     62,000 ns/op
  p(99,0000) =    120,000 ns/op
  p(99,9000) =    140,000 ns/op
  p(99,9900) =   7326,860 ns/op
  p(99,9990) =   7408,000 ns/op
  p(99,9999) =   7408,000 ns/op
         max =   7408,000 ns/op


# Run complete. Total time: 00:01:48

Benchmark                                          (x)    Mode    Cnt   Score   Error  Units
MyBenchmark.benchmarkLogarithmApacheCommon           1  sample  55230  60,585 ± 1,052  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon          10  sample  56712  62,561 ± 0,990  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon         100  sample  56030  63,692 ± 1,167  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon        1000  sample  64103  59,997 ± 2,136  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon     1000000  sample  57519  62,558 ± 1,354  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon  1000000000  sample  58013  61,231 ± 1,109  ns/op
MyBenchmark.benchmarkLogarithmGuava                  1  sample  45749  37,309 ± 1,214  ns/op
MyBenchmark.benchmarkLogarithmGuava                 10  sample  43644  38,409 ± 1,218  ns/op
MyBenchmark.benchmarkLogarithmGuava                100  sample  45006  38,065 ± 1,281  ns/op
MyBenchmark.benchmarkLogarithmGuava               1000  sample  46292  38,058 ± 1,025  ns/op
MyBenchmark.benchmarkLogarithmGuava            1000000  sample  45375  36,822 ± 0,698  ns/op
MyBenchmark.benchmarkLogarithmGuava         1000000000  sample  45711  36,736 ± 0,542  ns/op
MyBenchmark.benchmarkLogarithmJdk                    1  sample  56544  62,818 ± 1,277  ns/op
MyBenchmark.benchmarkLogarithmJdk                   10  sample  69778  56,360 ± 1,115  ns/op
MyBenchmark.benchmarkLogarithmJdk                  100  sample  71231  54,890 ± 1,215  ns/op
MyBenchmark.benchmarkLogarithmJdk                 1000  sample  41770  52,035 ± 1,715  ns/op
MyBenchmark.benchmarkLogarithmJdk              1000000  sample  71419  56,789 ± 1,418  ns/op
MyBenchmark.benchmarkLogarithmJdk           1000000000  sample  70474  57,508 ± 1,356  ns/op
