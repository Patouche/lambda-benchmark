# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 0.000000000001)

# Run progress: 0,00% complete, ETA 00:04:28
# Fork: 1 of 1
# Warmup Iteration   1: n = 6065, mean = 1759 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 71, 941, 1388, 10095, 9486336, 9486336 ns/op
# Warmup Iteration   2: n = 3288, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 68, 68, 69, 97, 104, 104 ns/op
# Warmup Iteration   3: n = 3274, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 100, 114, 114 ns/op
# Warmup Iteration   4: n = 3237, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 69, 70, 106, 119, 119 ns/op
# Warmup Iteration   5: n = 3319, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 99, 7232, 7232 ns/op
# Warmup Iteration   6: n = 3220, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 69, 139, 171, 246, 246 ns/op
# Warmup Iteration   7: n = 3272, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 103, 7256, 7256 ns/op
# Warmup Iteration   8: n = 3300, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 69, 108, 7176, 7176 ns/op
Iteration   1: n = 3211, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 69, 137, 154, 8368, 8368 ns/op
Iteration   2: n = 3236, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 137, 156, 2084, 2084 ns/op
Iteration   3: n = 3241, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 114, 181, 7288, 7288 ns/op
Iteration   4: n = 3244, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 72, 75, 105, 112, 112 ns/op
Iteration   5: n = 3305, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 137, 140, 152, 152 ns/op
Iteration   6: n = 3291, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 69, 101, 117, 117 ns/op
Iteration   7: n = 3245, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 112, 7240, 7240 ns/op
Iteration   8: n = 3204, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 91, 106, 7064, 7064 ns/op
Iteration   9: n = 3169, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 68, 70, 71, 121, 267, 317, 317 ns/op
Iteration  10: n = 2350, mean = 73 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 83, 115, 165, 269, 285, 285 ns/op
Iteration  11: n = 3191, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 102, 133, 258, 395, 395 ns/op
Iteration  12: n = 3232, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 142, 145, 157, 157 ns/op
Iteration  13: n = 3222, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 70, 72, 173, 197, 197 ns/op
Iteration  14: n = 3183, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 59, 66, 70, 71, 112, 186, 219, 219 ns/op
Iteration  15: n = 3217, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 65, 70, 70, 96, 228, 304, 304 ns/op
Iteration  16: n = 3214, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 70, 101, 140, 254, 254 ns/op
Iteration  17: n = 3201, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 102, 138, 187, 187 ns/op
Iteration  18: n = 3216, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 71, 110, 119, 119 ns/op
Iteration  19: n = 3164, mean = 76 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 71, 142, 7111, 7776, 7776 ns/op
Iteration  20: n = 3263, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 71, 72, 102, 2184, 2184 ns/op


Result: 66,590 ±(99.9%) 1,210 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 66,590, 8368,000), stdev = 92,707
  Confidence interval (99.9%): [65,380, 67,799]
  Samples, N = 63599
        mean =     66,590 ±(99.9%) 1,210 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     65,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     70,000 ns/op
  p(99,0000) =    113,000 ns/op
  p(99,9000) =    177,200 ns/op
  p(99,9900) =   7168,960 ns/op
  p(99,9990) =   8368,000 ns/op
  p(99,9999) =   8368,000 ns/op
         max =   8368,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 0.000000001)

# Run progress: 2,08% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: n = 6070, mean = 2031 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 68, 253, 1377, 8703, 11239424, 11239424 ns/op
# Warmup Iteration   2: n = 3506, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 66, 67, 69, 245, 7440, 7440 ns/op
# Warmup Iteration   3: n = 3243, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 69, 93, 149, 7136, 7136 ns/op
# Warmup Iteration   4: n = 3386, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 69, 101, 115, 115 ns/op
# Warmup Iteration   5: n = 3280, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 63, 67, 69, 70, 209, 11376, 11376 ns/op
# Warmup Iteration   6: n = 3278, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 82, 143, 7216, 7216 ns/op
# Warmup Iteration   7: n = 3208, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 139, 140, 264, 264 ns/op
# Warmup Iteration   8: n = 3173, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 69, 140, 153, 7384, 7384 ns/op
Iteration   1: n = 3305, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 69, 104, 7104, 7104 ns/op
Iteration   2: n = 3250, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 71, 82, 132, 7424, 7424 ns/op
Iteration   3: n = 3291, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 141, 262, 262 ns/op
Iteration   4: n = 3323, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 97, 107, 124, 124 ns/op
Iteration   5: n = 3233, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 137, 142, 203, 203 ns/op
Iteration   6: n = 3244, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 137, 140, 145, 145 ns/op
Iteration   7: n = 3261, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 137, 166, 7256, 7256 ns/op
Iteration   8: n = 3232, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 70, 103, 178, 7208, 7208 ns/op
Iteration   9: n = 3192, mean = 79 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 71, 117, 7310, 7408, 7408 ns/op
Iteration  10: n = 3193, mean = 72 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 71, 120, 332, 7448, 7448 ns/op
Iteration  11: n = 3256, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 97, 162, 264, 264 ns/op
Iteration  12: n = 3218, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 100, 242, 7232, 7232 ns/op
Iteration  13: n = 3258, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 71, 103, 7760, 7760 ns/op
Iteration  14: n = 3213, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 71, 79, 173, 7360, 7360 ns/op
Iteration  15: n = 3195, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 70, 76, 98, 145, 145, 145 ns/op
Iteration  16: n = 3177, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 70, 142, 145, 7920, 7920 ns/op
Iteration  17: n = 3229, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 71, 74, 176, 7408, 7408 ns/op
Iteration  18: n = 3256, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 71, 102, 111, 111 ns/op
Iteration  19: n = 3274, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 71, 102, 108, 108 ns/op
Iteration  20: n = 3211, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 73, 178, 438, 438 ns/op


Result: 66,391 ±(99.9%) 1,535 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 66,391, 7920,000), stdev = 118,776
  Confidence interval (99.9%): [64,856, 67,926]
  Samples, N = 64811
        mean =     66,391 ±(99.9%) 1,535 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     64,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     70,000 ns/op
  p(99,0000) =     97,000 ns/op
  p(99,9000) =    145,000 ns/op
  p(99,9900) =   7384,902 ns/op
  p(99,9990) =   7920,000 ns/op
  p(99,9999) =   7920,000 ns/op
         max =   7920,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 0.000001)

# Run progress: 4,17% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 6303, mean = 1662 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 69, 898, 1316, 9958, 9338880, 9338880 ns/op
# Warmup Iteration   2: n = 3394, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 69, 77, 4422, 9616, 9616 ns/op
# Warmup Iteration   3: n = 3308, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 68, 70, 119, 7960, 7960 ns/op
# Warmup Iteration   4: n = 3281, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 68, 69, 71, 142, 241, 241 ns/op
# Warmup Iteration   5: n = 3250, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 68, 70, 123, 7440, 7440 ns/op
# Warmup Iteration   6: n = 3237, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 95, 142, 149, 149 ns/op
# Warmup Iteration   7: n = 3267, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 68, 70, 109, 118, 118 ns/op
# Warmup Iteration   8: n = 3223, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 139, 278, 375, 375 ns/op
Iteration   1: n = 3306, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 68, 70, 95, 113, 113 ns/op
Iteration   2: n = 3301, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 70, 71, 106, 121, 121 ns/op
Iteration   3: n = 3261, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 74, 1019, 7192, 7192 ns/op
Iteration   4: n = 3264, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 68, 140, 143, 157, 157 ns/op
Iteration   5: n = 3223, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 68, 125, 167, 7568, 7568 ns/op
Iteration   6: n = 3289, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 68, 70, 151, 7256, 7256 ns/op
Iteration   7: n = 3151, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 71, 142, 159, 221, 221 ns/op
Iteration   8: n = 3155, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 71, 72, 144, 148, 251, 251 ns/op
Iteration   9: n = 3201, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 67, 71, 72, 130, 199, 262, 262 ns/op
Iteration  10: n = 3167, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 73, 114, 194, 7336, 7336 ns/op
Iteration  11: n = 3148, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 59, 66, 71, 97, 138, 201, 253, 253 ns/op
Iteration  12: n = 3131, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 66, 71, 71, 120, 246, 7632, 7632 ns/op
Iteration  13: n = 3251, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 71, 72, 74, 79, 79 ns/op
Iteration  14: n = 3234, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 71, 250, 7216, 7216 ns/op
Iteration  15: n = 3270, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 71, 154, 7336, 7336 ns/op
Iteration  16: n = 3262, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 72, 75, 2723, 7128, 7128 ns/op
Iteration  17: n = 3296, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 71, 145, 7400, 7400 ns/op
Iteration  18: n = 3265, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 71, 157, 7376, 7376 ns/op
Iteration  19: n = 3191, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 70, 144, 154, 179, 179 ns/op
Iteration  20: n = 3208, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 144, 154, 169, 169 ns/op


Result: 66,993 ±(99.9%) 1,350 ns/op [Average]
  Statistics: (min, avg, max) = (56,000, 66,993, 7632,000), stdev = 104,244
  Confidence interval (99.9%): [65,643, 68,343]
  Samples, N = 64574
        mean =     66,993 ±(99.9%) 1,350 ns/op
         min =     56,000 ns/op
  p( 0,0000) =     56,000 ns/op
  p(50,0000) =     65,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     70,000 ns/op
  p(99,0000) =    120,000 ns/op
  p(99,9000) =    164,425 ns/op
  p(99,9900) =   7336,000 ns/op
  p(99,9990) =   7632,000 ns/op
  p(99,9999) =   7632,000 ns/op
         max =   7632,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 0.001)

# Run progress: 6,25% complete, ETA 00:04:32
# Fork: 1 of 1
# Warmup Iteration   1: n = 6130, mean = 1719 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 68, 197, 1247, 9768, 9519104, 9519104 ns/op
# Warmup Iteration   2: n = 3349, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 70, 259, 7296, 7296 ns/op
# Warmup Iteration   3: n = 3223, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 64, 68, 69, 108, 194, 7536, 7536 ns/op
# Warmup Iteration   4: n = 3258, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 99, 147, 237, 237 ns/op
# Warmup Iteration   5: n = 3240, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 99, 116, 163, 163 ns/op
# Warmup Iteration   6: n = 3232, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 139, 154, 7208, 7208 ns/op
# Warmup Iteration   7: n = 3288, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 96, 101, 104, 104 ns/op
# Warmup Iteration   8: n = 3292, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 69, 109, 172, 172 ns/op
Iteration   1: n = 3289, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 101, 140, 7232, 7232 ns/op
Iteration   2: n = 3213, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 81, 137, 144, 149, 149 ns/op
Iteration   3: n = 3275, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 73, 75, 98, 105, 105 ns/op
Iteration   4: n = 3264, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 70, 236, 7144, 7144 ns/op
Iteration   5: n = 3253, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 79, 5275, 7472, 7472 ns/op
Iteration   6: n = 3279, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 73, 106, 258, 258 ns/op
Iteration   7: n = 3226, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 91, 137, 142, 147, 147 ns/op
Iteration   8: n = 3272, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 68, 140, 144, 7400, 7400 ns/op
Iteration   9: n = 3071, mean = 74 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 70, 71, 117, 6844, 7400, 7400 ns/op
Iteration  10: n = 3062, mean = 71 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 59, 67, 71, 72, 122, 254, 7392, 7392 ns/op
Iteration  11: n = 3090, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 71, 118, 257, 257 ns/op
Iteration  12: n = 3090, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 69, 71, 101, 130, 130 ns/op
Iteration  13: n = 3085, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 71, 73, 104, 152, 152 ns/op
Iteration  14: n = 3105, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 71, 73, 125, 7176, 7176 ns/op
Iteration  15: n = 3223, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 70, 71, 98, 101, 101 ns/op
Iteration  16: n = 3202, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 65, 70, 72, 73, 101, 120, 120 ns/op
Iteration  17: n = 3209, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 71, 96, 175, 7280, 7280 ns/op
Iteration  18: n = 3177, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 66, 71, 72, 74, 140, 7240, 7240 ns/op
Iteration  19: n = 3220, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 72, 74, 139, 268, 268 ns/op
Iteration  20: n = 3207, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 71, 84, 104, 7400, 7400 ns/op


Result: 66,640 ±(99.9%) 1,535 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 66,640, 7472,000), stdev = 117,833
  Confidence interval (99.9%): [65,105, 68,175]
  Samples, N = 63812
        mean =     66,640 ±(99.9%) 1,535 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     64,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     71,000 ns/op
  p(99,0000) =     94,000 ns/op
  p(99,9000) =    144,000 ns/op
  p(99,9900) =   7371,798 ns/op
  p(99,9990) =   7472,000 ns/op
  p(99,9999) =   7472,000 ns/op
         max =   7472,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 0.1)

# Run progress: 8,33% complete, ETA 00:04:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 6203, mean = 1544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 67, 179, 1228, 8872, 8585216, 8585216 ns/op
# Warmup Iteration   2: n = 3528, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 68, 129, 296, 296 ns/op
# Warmup Iteration   3: n = 3282, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 69, 102, 156, 190, 190 ns/op
# Warmup Iteration   4: n = 3260, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 84, 114, 4096, 4096 ns/op
# Warmup Iteration   5: n = 3214, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 103, 176, 209, 209 ns/op
# Warmup Iteration   6: n = 3251, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 138, 146, 7712, 7712 ns/op
# Warmup Iteration   7: n = 3269, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 137, 141, 7168, 7168 ns/op
# Warmup Iteration   8: n = 3212, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 76, 139, 140, 7368, 7368 ns/op
Iteration   1: n = 3264, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 71, 139, 7536, 7536 ns/op
Iteration   2: n = 3270, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 90, 140, 154, 154 ns/op
Iteration   3: n = 3266, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 72, 75, 107, 241, 241 ns/op
Iteration   4: n = 3328, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 70, 139, 145, 145 ns/op
Iteration   5: n = 3289, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 70, 73, 118, 10464, 10464 ns/op
Iteration   6: n = 3248, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 69, 137, 152, 7280, 7280 ns/op
Iteration   7: n = 3226, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 139, 142, 152, 152 ns/op
Iteration   8: n = 3187, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 71, 139, 144, 145, 145 ns/op
Iteration   9: n = 3142, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 70, 142, 149, 168, 168 ns/op
Iteration  10: n = 3175, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 65, 70, 71, 120, 209, 212, 212 ns/op
Iteration  11: n = 3241, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 70, 109, 158, 7496, 7496 ns/op
Iteration  12: n = 3275, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 70, 80, 109, 7232, 7232 ns/op
Iteration  13: n = 3194, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 65, 70, 74, 101, 143, 255, 255 ns/op
Iteration  14: n = 3222, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 70, 105, 236, 7192, 7192 ns/op
Iteration  15: n = 3242, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 70, 71, 113, 217, 217 ns/op
Iteration  16: n = 3178, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 71, 101, 118, 7392, 7392 ns/op
Iteration  17: n = 3224, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 68, 69, 102, 142, 7224, 7224 ns/op
Iteration  18: n = 3277, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 71, 72, 103, 6992, 6992 ns/op
Iteration  19: n = 3286, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 70, 98, 114, 114 ns/op
Iteration  20: n = 3295, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 70, 112, 209, 209 ns/op


Result: 65,529 ±(99.9%) 1,170 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 65,529, 10464,000), stdev = 90,555
  Confidence interval (99.9%): [64,359, 66,700]
  Samples, N = 64829
        mean =     65,529 ±(99.9%) 1,170 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     64,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     70,000 ns/op
  p(99,0000) =     98,000 ns/op
  p(99,9000) =    144,000 ns/op
  p(99,9900) =   7228,136 ns/op
  p(99,9990) =  10464,000 ns/op
  p(99,9999) =  10464,000 ns/op
         max =  10464,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1)

# Run progress: 10,42% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: n = 4595, mean = 1078 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 101, 114, 125, 324, 2728, 13840, 3624960, 3624960 ns/op
# Warmup Iteration   2: n = 2413, mean = 113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 101, 113, 117, 118, 157, 219, 356, 356 ns/op
# Warmup Iteration   3: n = 2438, mean = 112 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 116, 118, 124, 182, 327, 327 ns/op
# Warmup Iteration   4: n = 2422, mean = 114 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 117, 118, 118, 152, 7408, 7408 ns/op
# Warmup Iteration   5: n = 2462, mean = 112 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 115, 116, 118, 250, 254, 254 ns/op
# Warmup Iteration   6: n = 2466, mean = 115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 115, 116, 120, 429, 7296, 7296 ns/op
# Warmup Iteration   7: n = 2414, mean = 116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 115, 116, 247, 250, 7064, 7064 ns/op
# Warmup Iteration   8: n = 2453, mean = 111 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 115, 117, 118, 126, 143, 143 ns/op
Iteration   1: n = 2406, mean = 114 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 115, 116, 249, 252, 363, 363 ns/op
Iteration   2: n = 2446, mean = 113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 117, 118, 249, 250, 254, 254 ns/op
Iteration   3: n = 2454, mean = 111 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 110, 115, 116, 118, 249, 329, 329 ns/op
Iteration   4: n = 2435, mean = 115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 115, 131, 134, 163, 7136, 7136 ns/op
Iteration   5: n = 2431, mean = 115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 115, 123, 125, 145, 7176, 7176 ns/op
Iteration   6: n = 2401, mean = 118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 115, 117, 249, 256, 7296, 7296 ns/op
Iteration   7: n = 2421, mean = 118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 116, 127, 130, 4237, 7480, 7480 ns/op
Iteration   8: n = 2400, mean = 113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 112, 116, 119, 135, 148, 244, 244 ns/op
Iteration   9: n = 2358, mean = 119 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 116, 118, 251, 255, 7264, 7264 ns/op
Iteration  10: n = 2394, mean = 122 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 106, 116, 124, 163, 213, 316, 338, 338 ns/op
Iteration  11: n = 2387, mean = 209 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 115, 119, 147, 175, 4672, 213760, 213760 ns/op
Iteration  12: n = 2419, mean = 113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 112, 118, 119, 119, 177, 186, 186 ns/op
Iteration  13: n = 2323, mean = 115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 115, 119, 119, 152, 208, 245, 245 ns/op
Iteration  14: n = 2366, mean = 118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 116, 119, 251, 378, 7320, 7320 ns/op
Iteration  15: n = 2389, mean = 114 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 112, 118, 118, 126, 252, 312, 312 ns/op
Iteration  16: n = 2404, mean = 118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 115, 116, 124, 126, 2585, 7312, 7312 ns/op
Iteration  17: n = 2417, mean = 115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 111, 116, 121, 122, 180, 7224, 7224 ns/op
Iteration  18: n = 2414, mean = 113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 112, 118, 124, 126, 168, 178, 178 ns/op
Iteration  19: n = 2324, mean = 120 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 103, 115, 118, 119, 250, 297, 7296, 7296 ns/op
Iteration  20: n = 2398, mean = 114 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 102, 115, 118, 124, 126, 250, 252, 252 ns/op


Result: 120,315 ±(99.9%) 14,745 ns/op [Average]
  Statistics: (min, avg, max) = (102,000, 120,315, 213760,000), stdev = 981,581
  Confidence interval (99.9%): [105,569, 135,060]
  Samples, N = 47987
        mean =    120,315 ±(99.9%) 14,745 ns/op
         min =    102,000 ns/op
  p( 0,0000) =    102,000 ns/op
  p(50,0000) =    112,000 ns/op
  p(90,0000) =    118,000 ns/op
  p(95,0000) =    119,000 ns/op
  p(99,0000) =    173,000 ns/op
  p(99,9000) =    252,000 ns/op
  p(99,9900) =   7313,610 ns/op
  p(99,9990) = 213760,000 ns/op
  p(99,9999) = 213760,000 ns/op
         max = 213760,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 10)

# Run progress: 12,50% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 6504, mean = 1524 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 64, 257, 1584, 8792, 8699904, 8699904 ns/op
# Warmup Iteration   2: n = 3691, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 58, 64, 65, 89, 139, 7384, 7384 ns/op
# Warmup Iteration   3: n = 3620, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 85, 114, 114 ns/op
# Warmup Iteration   4: n = 3549, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 65, 66, 103, 135, 248, 248 ns/op
# Warmup Iteration   5: n = 3543, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 101, 165, 8192, 8192 ns/op
# Warmup Iteration   6: n = 3539, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 103, 136, 167, 167 ns/op
# Warmup Iteration   7: n = 3608, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 132, 279, 11328, 11328 ns/op
# Warmup Iteration   8: n = 3514, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 133, 135, 144, 144 ns/op
Iteration   1: n = 3531, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 132, 256, 7032, 7032 ns/op
Iteration   2: n = 3531, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 69, 72, 175, 7320, 7320 ns/op
Iteration   3: n = 3547, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 59, 65, 65, 89, 116, 119, 119 ns/op
Iteration   4: n = 3557, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 76, 135, 6968, 6968 ns/op
Iteration   5: n = 3584, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 66, 69, 105, 105 ns/op
Iteration   6: n = 3480, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 65, 66, 108, 176, 7056, 7056 ns/op
Iteration   7: n = 3465, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 65, 74, 132, 144, 7400, 7400 ns/op
Iteration   8: n = 3487, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 66, 78, 102, 201, 273, 273 ns/op
Iteration   9: n = 3452, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 119, 220, 335, 335 ns/op
Iteration  10: n = 3535, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 65, 66, 104, 167, 270, 270 ns/op
Iteration  11: n = 3074, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 62, 66, 67, 119, 258, 19232, 19232 ns/op
Iteration  12: n = 3465, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 66, 67, 105, 201, 7352, 7352 ns/op
Iteration  13: n = 3481, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 62, 65, 67, 105, 155, 245, 245 ns/op
Iteration  14: n = 3459, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 132, 137, 150, 150 ns/op
Iteration  15: n = 3548, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 65, 67, 114, 175, 175 ns/op
Iteration  16: n = 3564, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 67, 112, 175, 175 ns/op
Iteration  17: n = 3516, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 65, 66, 104, 147, 2616, 2616 ns/op
Iteration  18: n = 3595, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 67, 107, 139, 139 ns/op
Iteration  19: n = 3499, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 66, 132, 147, 170, 170 ns/op
Iteration  20: n = 3528, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 59, 65, 66, 132, 135, 7320, 7320 ns/op


Result: 62,285 ±(99.9%) 1,321 ns/op [Average]
  Statistics: (min, avg, max) = (52,000, 62,285, 19232,000), stdev = 106,152
  Confidence interval (99.9%): [60,963, 63,606]
  Samples, N = 69898
        mean =     62,285 ±(99.9%) 1,321 ns/op
         min =     52,000 ns/op
  p( 0,0000) =     52,000 ns/op
  p(50,0000) =     60,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     66,000 ns/op
  p(99,0000) =    106,000 ns/op
  p(99,9000) =    146,101 ns/op
  p(99,9900) =   7056,889 ns/op
  p(99,9990) =  19232,000 ns/op
  p(99,9999) =  19232,000 ns/op
         max =  19232,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 100)

# Run progress: 14,58% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: n = 6664, mean = 1592 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 64, 153, 1395, 7502, 9617408, 9617408 ns/op
# Warmup Iteration   2: n = 3721, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 64, 64, 72, 105, 289, 289 ns/op
# Warmup Iteration   3: n = 3605, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 58, 64, 65, 66, 132, 137, 137 ns/op
# Warmup Iteration   4: n = 3167, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 66, 68, 115, 147, 147 ns/op
# Warmup Iteration   5: n = 3637, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 65, 92, 7600, 7600 ns/op
# Warmup Iteration   6: n = 3571, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 58, 64, 64, 65, 132, 155, 155 ns/op
# Warmup Iteration   7: n = 3519, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 65, 94, 166, 190, 190 ns/op
# Warmup Iteration   8: n = 3499, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 65, 96, 130, 161, 161 ns/op
Iteration   1: n = 3511, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 92, 135, 183, 183 ns/op
Iteration   2: n = 3486, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 58, 64, 65, 130, 143, 7112, 7112 ns/op
Iteration   3: n = 3448, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 133, 135, 135 ns/op
Iteration   4: n = 3445, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 66, 68, 71, 164, 7360, 7360 ns/op
Iteration   5: n = 3563, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 64, 65, 69, 7221, 10128, 10128 ns/op
Iteration   6: n = 3542, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 58, 64, 64, 65, 102, 2644, 2644 ns/op
Iteration   7: n = 3453, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 66, 132, 132, 265, 265 ns/op
Iteration   8: n = 3360, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 65, 67, 99, 7400, 7400 ns/op
Iteration   9: n = 3475, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 67, 113, 146, 222, 222 ns/op
Iteration  10: n = 2997, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 103, 141, 212, 237, 237 ns/op
Iteration  11: n = 3407, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 63, 67, 68, 129, 203, 259, 259 ns/op
Iteration  12: n = 3571, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 66, 66, 67, 108, 7192, 7192 ns/op
Iteration  13: n = 3532, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 66, 68, 71, 77, 2984, 2984 ns/op
Iteration  14: n = 3521, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 66, 66, 68, 135, 169, 169 ns/op
Iteration  15: n = 3552, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 173, 7176, 7176 ns/op
Iteration  16: n = 3505, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 95, 194, 7248, 7248 ns/op
Iteration  17: n = 3555, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 65, 66, 74, 105, 105 ns/op
Iteration  18: n = 3467, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 96, 132, 182, 182 ns/op
Iteration  19: n = 3521, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 65, 66, 66, 76, 148, 148 ns/op
Iteration  20: n = 3445, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 136, 4920, 4920 ns/op


Result: 62,359 ±(99.9%) 1,229 ns/op [Average]
  Statistics: (min, avg, max) = (52,000, 62,359, 10128,000), stdev = 98,350
  Confidence interval (99.9%): [61,130, 63,588]
  Samples, N = 69356
        mean =     62,359 ±(99.9%) 1,229 ns/op
         min =     52,000 ns/op
  p( 0,0000) =     52,000 ns/op
  p(50,0000) =     60,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     66,000 ns/op
  p(99,0000) =    105,000 ns/op
  p(99,9000) =    158,286 ns/op
  p(99,9900) =   7248,000 ns/op
  p(99,9990) =  10128,000 ns/op
  p(99,9999) =  10128,000 ns/op
         max =  10128,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000)

# Run progress: 16,67% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 6621, mean = 2151 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 65, 771, 1306, 8642, 13025280, 13025280 ns/op
# Warmup Iteration   2: n = 3681, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 58, 64, 65, 66, 87, 309, 309 ns/op
# Warmup Iteration   3: n = 3536, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 89, 95, 95 ns/op
# Warmup Iteration   4: n = 3528, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 132, 7016, 7016 ns/op
# Warmup Iteration   5: n = 3535, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 66, 97, 237, 237 ns/op
# Warmup Iteration   6: n = 3464, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 133, 133, 133 ns/op
# Warmup Iteration   7: n = 3491, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 149, 7424, 7424 ns/op
# Warmup Iteration   8: n = 3480, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 130, 133, 135, 135 ns/op
Iteration   1: n = 3560, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 64, 65, 100, 7360, 7360 ns/op
Iteration   2: n = 3515, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 130, 199, 7480, 7480 ns/op
Iteration   3: n = 3516, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 124, 132, 139, 139 ns/op
Iteration   4: n = 3473, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 61, 64, 66, 106, 133, 186, 186 ns/op
Iteration   5: n = 3604, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 65, 100, 7120, 7120 ns/op
Iteration   6: n = 3588, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 74, 94, 7216, 7216 ns/op
Iteration   7: n = 3503, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 66, 97, 110, 110 ns/op
Iteration   8: n = 3548, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 65, 68, 71, 133, 7344, 7344 ns/op
Iteration   9: n = 3489, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 65, 66, 105, 203, 1312, 1312 ns/op
Iteration  10: n = 3558, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 67, 147, 20480, 20480 ns/op
Iteration  11: n = 3588, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 65, 82, 5040, 5040 ns/op
Iteration  12: n = 3589, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 66, 90, 109, 109 ns/op
Iteration  13: n = 3598, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 66, 67, 95, 7344, 7344 ns/op
Iteration  14: n = 3540, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 65, 65, 66, 79, 99, 99 ns/op
Iteration  15: n = 3573, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 65, 91, 7224, 7224 ns/op
Iteration  16: n = 3558, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 111, 235, 235 ns/op
Iteration  17: n = 3466, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 154, 7240, 7240 ns/op
Iteration  18: n = 3479, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 132, 138, 7000, 7000 ns/op
Iteration  19: n = 3480, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 59, 64, 65, 132, 133, 7224, 7224 ns/op
Iteration  20: n = 3605, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 65, 92, 7224, 7224 ns/op


Result: 61,544 ±(99.9%) 1,589 ns/op [Average]
  Statistics: (min, avg, max) = (52,000, 61,544, 20480,000), stdev = 128,506
  Confidence interval (99.9%): [59,955, 63,133]
  Samples, N = 70830
        mean =     61,544 ±(99.9%) 1,589 ns/op
         min =     52,000 ns/op
  p( 0,0000) =     52,000 ns/op
  p(50,0000) =     59,000 ns/op
  p(90,0000) =     64,000 ns/op
  p(95,0000) =     65,000 ns/op
  p(99,0000) =     72,000 ns/op
  p(99,9000) =    133,000 ns/op
  p(99,9900) =   7231,335 ns/op
  p(99,9990) =  20480,000 ns/op
  p(99,9999) =  20480,000 ns/op
         max =  20480,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000000)

# Run progress: 18,75% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: n = 6170, mean = 1659 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 67, 152, 1315, 6015, 9371648, 9371648 ns/op
# Warmup Iteration   2: n = 3322, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 66, 67, 83, 253, 7224, 7224 ns/op
# Warmup Iteration   3: n = 3360, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 69, 99, 4024, 4024 ns/op
# Warmup Iteration   4: n = 3294, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 98, 140, 7352, 7352 ns/op
# Warmup Iteration   5: n = 3307, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 70, 73, 169, 7040, 7040 ns/op
# Warmup Iteration   6: n = 3286, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 139, 144, 7296, 7296 ns/op
# Warmup Iteration   7: n = 3197, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 86, 139, 174, 267, 267 ns/op
# Warmup Iteration   8: n = 3211, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 69, 114, 193, 7224, 7224 ns/op
Iteration   1: n = 3275, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 95, 127, 162, 162 ns/op
Iteration   2: n = 3152, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 139, 229, 249, 249 ns/op
Iteration   3: n = 3272, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 70, 140, 282, 282 ns/op
Iteration   4: n = 3280, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 72, 75, 101, 149, 149 ns/op
Iteration   5: n = 3250, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 124, 141, 3344, 3344 ns/op
Iteration   6: n = 3274, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 69, 140, 152, 152 ns/op
Iteration   7: n = 3240, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 69, 95, 130, 130 ns/op
Iteration   8: n = 3235, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 139, 142, 7424, 7424 ns/op
Iteration   9: n = 3271, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 118, 173, 173 ns/op
Iteration  10: n = 3190, mean = 72 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 139, 5807, 7288, 7288 ns/op
Iteration  11: n = 3289, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 70, 73, 103, 257, 257 ns/op
Iteration  12: n = 3304, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 69, 231, 18560, 18560 ns/op
Iteration  13: n = 3238, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 139, 140, 7208, 7208 ns/op
Iteration  14: n = 3258, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 69, 101, 7240, 7240 ns/op
Iteration  15: n = 3288, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 133, 7344, 7344 ns/op
Iteration  16: n = 3262, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 70, 111, 7168, 7168 ns/op
Iteration  17: n = 3282, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 69, 146, 7120, 7120 ns/op
Iteration  18: n = 3278, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 68, 69, 70, 98, 100, 100 ns/op
Iteration  19: n = 3284, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 70, 108, 3292, 3292 ns/op
Iteration  20: n = 3263, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 143, 7560, 7560 ns/op


Result: 65,067 ±(99.9%) 1,637 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 65,067, 18560,000), stdev = 127,035
  Confidence interval (99.9%): [63,429, 66,704]
  Samples, N = 65185
        mean =     65,067 ±(99.9%) 1,637 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     63,000 ns/op
  p(90,0000) =     67,000 ns/op
  p(95,0000) =     69,000 ns/op
  p(99,0000) =     75,000 ns/op
  p(99,9000) =    140,000 ns/op
  p(99,9900) =   7275,554 ns/op
  p(99,9990) =  18560,000 ns/op
  p(99,9999) =  18560,000 ns/op
         max =  18560,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000000000)

# Run progress: 20,83% complete, ETA 00:03:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 5997, mean = 1692 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 61, 67, 195, 1294, 8913, 9125888, 9125888 ns/op
# Warmup Iteration   2: n = 3428, mean = 71 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 72, 7118, 10704, 10704 ns/op
# Warmup Iteration   3: n = 3288, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 69, 102, 113, 113 ns/op
# Warmup Iteration   4: n = 3292, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 69, 147, 7104, 7104 ns/op
# Warmup Iteration   5: n = 3364, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 69, 103, 1942, 1942 ns/op
# Warmup Iteration   6: n = 3303, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 137, 176, 7288, 7288 ns/op
# Warmup Iteration   7: n = 3335, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 69, 130, 7480, 7480 ns/op
# Warmup Iteration   8: n = 3295, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 69, 166, 7296, 7296 ns/op
Iteration   1: n = 3295, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 69, 100, 1382, 1382 ns/op
Iteration   2: n = 3235, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 73, 75, 182, 259, 259 ns/op
Iteration   3: n = 3245, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 71, 115, 209, 209 ns/op
Iteration   4: n = 3255, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 100, 118, 126, 126 ns/op
Iteration   5: n = 3267, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 70, 227, 300, 300 ns/op
Iteration   6: n = 3238, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 129, 142, 170, 170 ns/op
Iteration   7: n = 3347, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 69, 102, 7320, 7320 ns/op
Iteration   8: n = 3248, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 67, 96, 103, 270, 270 ns/op
Iteration   9: n = 3232, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 71, 74, 112, 7240, 7240 ns/op
Iteration  10: n = 3195, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 67, 70, 103, 134, 226, 278, 278 ns/op
Iteration  11: n = 3184, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 69, 70, 117, 237, 263, 263 ns/op
Iteration  12: n = 3261, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 70, 91, 102, 102 ns/op
Iteration  13: n = 3259, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 68, 70, 112, 140, 140 ns/op
Iteration  14: n = 3261, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 70, 71, 112, 7792, 7792 ns/op
Iteration  15: n = 3266, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 69, 70, 100, 7376, 7376 ns/op
Iteration  16: n = 3265, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 69, 70, 100, 8672, 8672 ns/op
Iteration  17: n = 3277, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 70, 96, 102, 102 ns/op
Iteration  18: n = 3280, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 69, 82, 7288, 7288 ns/op
Iteration  19: n = 3274, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 67, 68, 69, 97, 102, 102 ns/op
Iteration  20: n = 3224, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 79, 153, 7664, 7664 ns/op


Result: 64,872 ±(99.9%) 1,196 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 64,872, 8672,000), stdev = 92,758
  Confidence interval (99.9%): [63,676, 66,068]
  Samples, N = 65108
        mean =     64,872 ±(99.9%) 1,196 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     63,000 ns/op
  p(90,0000) =     68,000 ns/op
  p(95,0000) =     69,000 ns/op
  p(99,0000) =     93,000 ns/op
  p(99,9000) =    143,891 ns/op
  p(99,9900) =   7267,564 ns/op
  p(99,9990) =   8672,000 ns/op
  p(99,9999) =   8672,000 ns/op
         max =   8672,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmApacheCommon
# Parameters: (x = 1000000000000)

# Run progress: 22,92% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: n = 6069, mean = 2018 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 68, 192, 1649, 12687, 11108352, 11108352 ns/op
# Warmup Iteration   2: n = 3399, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 61, 67, 67, 68, 80, 302, 302 ns/op
# Warmup Iteration   3: n = 3203, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 73, 76, 140, 220, 220 ns/op
# Warmup Iteration   4: n = 3305, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 86, 117, 165, 165 ns/op
# Warmup Iteration   5: n = 3217, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 69, 140, 239, 239 ns/op
# Warmup Iteration   6: n = 3255, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 69, 175, 429, 429 ns/op
# Warmup Iteration   7: n = 3313, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 69, 107, 7208, 7208 ns/op
# Warmup Iteration   8: n = 3211, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 63, 68, 69, 78, 140, 7152, 7152 ns/op
Iteration   1: n = 3205, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 68, 138, 144, 7344, 7344 ns/op
Iteration   2: n = 3209, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 67, 69, 77, 150, 180, 180 ns/op
Iteration   3: n = 3208, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 139, 144, 7112, 7112 ns/op
Iteration   4: n = 3254, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 63, 68, 72, 75, 100, 7944, 7944 ns/op
Iteration   5: n = 3220, mean = 75 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 62, 67, 68, 137, 143, 38272, 38272 ns/op
Iteration   6: n = 3229, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 68, 122, 157, 7392, 7392 ns/op
Iteration   7: n = 3242, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55, 62, 67, 67, 69, 205, 7256, 7256 ns/op
Iteration   8: n = 3193, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 71, 101, 105, 127, 127 ns/op
Iteration   9: n = 3270, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 64, 69, 70, 71, 75, 1350, 1350 ns/op
Iteration  10: n = 3176, mean = 70 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58, 67, 71, 108, 141, 246, 316, 316 ns/op
Iteration  11: n = 3196, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 66, 70, 71, 126, 274, 313, 313 ns/op
Iteration  12: n = 3188, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 69, 70, 142, 145, 299, 299 ns/op
Iteration  13: n = 3233, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 65, 70, 72, 75, 114, 120, 120 ns/op
Iteration  14: n = 3227, mean = 67 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 142, 145, 7152, 7152 ns/op
Iteration  15: n = 3235, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 142, 150, 7216, 7216 ns/op
Iteration  16: n = 3294, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 68, 69, 70, 113, 117, 117 ns/op
Iteration  17: n = 3297, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 71, 72, 111, 7360, 7360 ns/op
Iteration  18: n = 3296, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 70, 72, 92, 107, 107 ns/op
Iteration  19: n = 3235, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56, 64, 69, 69, 142, 156, 243, 243 ns/op
Iteration  20: n = 3220, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 57, 65, 70, 71, 73, 119, 209, 209 ns/op


Result: 66,602 ±(99.9%) 2,330 ns/op [Average]
  Statistics: (min, avg, max) = (55,000, 66,602, 38272,000), stdev = 180,002
  Confidence interval (99.9%): [64,272, 68,932]
  Samples, N = 64627
        mean =     66,602 ±(99.9%) 2,330 ns/op
         min =     55,000 ns/op
  p( 0,0000) =     55,000 ns/op
  p(50,0000) =     64,000 ns/op
  p(90,0000) =     69,000 ns/op
  p(95,0000) =     70,000 ns/op
  p(99,0000) =    112,000 ns/op
  p(99,9000) =    154,744 ns/op
  p(99,9900) =   7303,274 ns/op
  p(99,9990) =  38272,000 ns/op
  p(99,9999) =  38272,000 ns/op
         max =  38272,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 0.000000000001)

# Run progress: 25,00% complete, ETA 00:03:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 441450496 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496 ns/op
# Warmup Iteration   2: n = 6753, mean = 130 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 49, 125, 735, 8044, 272384, 272384 ns/op
# Warmup Iteration   3: n = 3706, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 48, 52, 99, 7192, 7192 ns/op
# Warmup Iteration   4: n = 3454, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 54, 63, 113, 197, 197 ns/op
# Warmup Iteration   5: n = 3428, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 54, 56, 65, 177, 7272, 7272 ns/op
# Warmup Iteration   6: n = 3469, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 54, 55, 125, 7256, 7256 ns/op
# Warmup Iteration   7: n = 3430, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 54, 55, 114, 7136, 7136 ns/op
# Warmup Iteration   8: n = 3406, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 102, 105, 115, 115 ns/op
Iteration   1: n = 3483, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 55, 75, 110, 110 ns/op
Iteration   2: n = 3407, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 54, 103, 4335, 10160, 10160 ns/op
Iteration   3: n = 3437, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 75, 147, 217, 217 ns/op
Iteration   4: n = 3457, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 55, 143, 183, 183 ns/op
Iteration   5: n = 3413, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 102, 164, 6032, 6032 ns/op
Iteration   6: n = 3440, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 52, 55, 106, 7232, 7232 ns/op
Iteration   7: n = 3398, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 53, 102, 109, 125, 125 ns/op
Iteration   8: n = 3452, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 56, 95, 7120, 7120 ns/op
Iteration   9: n = 3419, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 71, 151, 265, 265 ns/op
Iteration  10: n = 3376, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 52, 89, 117, 256, 302, 302 ns/op
Iteration  11: n = 3403, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 53, 106, 187, 304, 304 ns/op
Iteration  12: n = 3398, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 51, 53, 104, 119, 119 ns/op
Iteration  13: n = 3381, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 159, 269, 269 ns/op
Iteration  14: n = 3455, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 87, 103, 103 ns/op
Iteration  15: n = 3382, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 106, 202, 202 ns/op
Iteration  16: n = 3359, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 52, 99, 106, 7072, 7072 ns/op
Iteration  17: n = 3421, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 97, 118, 7216, 7216 ns/op
Iteration  18: n = 3371, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 52, 53, 97, 7228, 7792, 7792 ns/op
Iteration  19: n = 3452, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 52, 58, 2672, 2672 ns/op
Iteration  20: n = 3461, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 95, 1766, 1766 ns/op


Result: 47,537 ±(99.9%) 1,249 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 47,537, 10160,000), stdev = 99,277
  Confidence interval (99.9%): [46,287, 48,786]
  Samples, N = 68365
        mean =     47,537 ±(99.9%) 1,249 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     45,000 ns/op
  p(90,0000) =     51,000 ns/op
  p(95,0000) =     53,000 ns/op
  p(99,0000) =     97,000 ns/op
  p(99,9000) =    142,634 ns/op
  p(99,9900) =   7232,000 ns/op
  p(99,9990) =  10160,000 ns/op
  p(99,9999) =  10160,000 ns/op
         max =  10160,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 0.000000001)

# Run progress: 27,08% complete, ETA 00:03:32
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 438304768 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768 ns/op
# Warmup Iteration   2: n = 6854, mean = 119 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 49, 149, 756, 7311, 248064, 248064 ns/op
# Warmup Iteration   3: n = 3580, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 43, 48, 51, 52, 110, 323, 323 ns/op
# Warmup Iteration   4: n = 3441, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 64, 96, 162, 162 ns/op
# Warmup Iteration   5: n = 3413, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 69, 100, 7184, 7184 ns/op
# Warmup Iteration   6: n = 3377, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 53, 70, 74, 114, 114 ns/op
# Warmup Iteration   7: n = 3406, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 97, 100, 140, 140 ns/op
# Warmup Iteration   8: n = 3439, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 52, 95, 813, 7760, 7760 ns/op
Iteration   1: n = 3400, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 51, 52, 97, 110, 7104, 7104 ns/op
Iteration   2: n = 3429, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 53, 60, 7120, 7120 ns/op
Iteration   3: n = 3391, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 97, 101, 104, 104 ns/op
Iteration   4: n = 3470, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 87, 120, 158, 158 ns/op
Iteration   5: n = 3443, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 89, 121, 11456, 11456 ns/op
Iteration   6: n = 3433, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 126, 252, 252 ns/op
Iteration   7: n = 3309, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 97, 114, 7280, 7280 ns/op
Iteration   8: n = 3333, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 99, 112, 160, 160 ns/op
Iteration   9: n = 3355, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 100, 353, 7248, 7248 ns/op
Iteration  10: n = 3435, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 89, 153, 234, 234 ns/op
Iteration  11: n = 3465, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 144, 171, 171 ns/op
Iteration  12: n = 3426, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 97, 100, 109, 109 ns/op
Iteration  13: n = 3373, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 137, 152, 152 ns/op
Iteration  14: n = 3478, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 92, 100, 100 ns/op
Iteration  15: n = 3474, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 51, 53, 85, 94, 94 ns/op
Iteration  16: n = 3423, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 100, 7256, 7256 ns/op
Iteration  17: n = 3367, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 111, 7000, 7000 ns/op
Iteration  18: n = 3447, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 51, 97, 101, 107, 107 ns/op
Iteration  19: n = 3480, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 50, 52, 63, 97, 97 ns/op
Iteration  20: n = 3456, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 52, 61, 7200, 7200 ns/op


Result: 46,047 ±(99.9%) 1,152 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,047, 11456,000), stdev = 91,522
  Confidence interval (99.9%): [44,895, 47,199]
  Samples, N = 68387
        mean =     46,047 ±(99.9%) 1,152 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     51,000 ns/op
  p(99,0000) =     90,000 ns/op
  p(99,9000) =    105,000 ns/op
  p(99,9900) =   7132,896 ns/op
  p(99,9990) =  11456,000 ns/op
  p(99,9999) =  11456,000 ns/op
         max =  11456,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 0.000001)

# Run progress: 29,17% complete, ETA 00:03:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 436731904 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 436731904, 436731904, 436731904, 436731904, 436731904, 436731904, 436731904, 436731904 ns/op
# Warmup Iteration   2: n = 6585, mean = 134 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 74, 740, 8034, 273920, 273920 ns/op
# Warmup Iteration   3: n = 3623, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 48, 51, 64, 140, 140 ns/op
# Warmup Iteration   4: n = 3499, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 50, 52, 100, 130, 130 ns/op
# Warmup Iteration   5: n = 3441, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 49, 52, 60, 98, 98 ns/op
# Warmup Iteration   6: n = 3409, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 52, 97, 100, 100, 100 ns/op
# Warmup Iteration   7: n = 3467, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 53, 101, 102, 102 ns/op
# Warmup Iteration   8: n = 3363, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 97, 106, 152, 152 ns/op
Iteration   1: n = 3454, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 52, 116, 202, 202 ns/op
Iteration   2: n = 3409, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 52, 57, 97, 98, 98 ns/op
Iteration   3: n = 3407, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 110, 119, 119 ns/op
Iteration   4: n = 3465, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 52, 61, 87, 87 ns/op
Iteration   5: n = 3433, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 52, 104, 361, 361 ns/op
Iteration   6: n = 3456, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 49, 52, 67, 98, 98 ns/op
Iteration   7: n = 3489, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 52, 55, 119, 150, 150 ns/op
Iteration   8: n = 3455, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 105, 122, 122 ns/op
Iteration   9: n = 3468, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 52, 98, 7240, 7240 ns/op
Iteration  10: n = 3360, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 102, 249, 249 ns/op
Iteration  11: n = 3387, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 44, 53, 98, 145, 253, 316, 316 ns/op
Iteration  12: n = 3404, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 53, 117, 231, 277, 277 ns/op
Iteration  13: n = 3431, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 53, 68, 99, 99 ns/op
Iteration  14: n = 3377, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 103, 110, 110 ns/op
Iteration  15: n = 3444, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 51, 61, 93, 97, 97 ns/op
Iteration  16: n = 3440, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 49, 52, 68, 7392, 7392 ns/op
Iteration  17: n = 3455, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 50, 52, 150, 201, 201 ns/op
Iteration  18: n = 3351, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 52, 97, 111, 7200, 7200 ns/op
Iteration  19: n = 3458, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 49, 52, 54, 75, 75 ns/op
Iteration  20: n = 3430, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 51, 97, 115, 7176, 7176 ns/op


Result: 45,233 ±(99.9%) 0,855 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 45,233, 7392,000), stdev = 68,001
  Confidence interval (99.9%): [44,378, 46,087]
  Samples, N = 68573
        mean =     45,233 ±(99.9%) 0,855 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     43,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     51,000 ns/op
  p(99,0000) =     95,000 ns/op
  p(99,9000) =    144,426 ns/op
  p(99,9900) =   1332,819 ns/op
  p(99,9990) =   7392,000 ns/op
  p(99,9999) =   7392,000 ns/op
         max =   7392,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 0.001)

# Run progress: 31,25% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 440926208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 440926208, 440926208, 440926208, 440926208, 440926208, 440926208, 440926208, 440926208 ns/op
# Warmup Iteration   2: n = 6595, mean = 142 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 166, 996, 11634, 247552, 247552 ns/op
# Warmup Iteration   3: n = 3616, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 47, 51, 87, 132, 132 ns/op
# Warmup Iteration   4: n = 3403, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 49, 52, 69, 138, 138 ns/op
# Warmup Iteration   5: n = 3467, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 51, 97, 106, 119, 119 ns/op
# Warmup Iteration   6: n = 3464, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 49, 52, 115, 1448, 1448 ns/op
# Warmup Iteration   7: n = 3502, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 49, 52, 99, 134, 134 ns/op
# Warmup Iteration   8: n = 3412, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 95, 100, 142, 142 ns/op
Iteration   1: n = 3445, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 49, 52, 98, 7120, 7120 ns/op
Iteration   2: n = 3474, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 52, 103, 7344, 7344 ns/op
Iteration   3: n = 3472, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 135, 175, 175 ns/op
Iteration   4: n = 3391, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 150, 261, 261 ns/op
Iteration   5: n = 3343, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 98, 178, 268, 268 ns/op
Iteration   6: n = 3458, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 53, 121, 2552, 2552 ns/op
Iteration   7: n = 3417, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 49, 53, 250, 379, 379 ns/op
Iteration   8: n = 3438, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 52, 69, 83, 103, 103 ns/op
Iteration   9: n = 3375, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 105, 7280, 7280 ns/op
Iteration  10: n = 3379, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 44, 52, 90, 121, 181, 229, 229 ns/op
Iteration  11: n = 3402, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 108, 241, 7192, 7192 ns/op
Iteration  12: n = 3448, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 50, 52, 100, 7112, 7112 ns/op
Iteration  13: n = 3358, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 108, 137, 137 ns/op
Iteration  14: n = 3457, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 49, 52, 94, 7200, 7200 ns/op
Iteration  15: n = 3003, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 100, 107, 123, 123 ns/op
Iteration  16: n = 3070, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 53, 67, 150, 150 ns/op
Iteration  17: n = 3078, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 49, 52, 53, 105, 7360, 7360 ns/op
Iteration  18: n = 3065, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 53, 83, 111, 111 ns/op
Iteration  19: n = 3078, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 54, 94, 102, 102 ns/op
Iteration  20: n = 3090, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 53, 54, 63, 105, 105 ns/op


Result: 46,043 ±(99.9%) 1,085 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,043, 7360,000), stdev = 84,878
  Confidence interval (99.9%): [44,958, 47,128]
  Samples, N = 66241
        mean =     46,043 ±(99.9%) 1,085 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     95,000 ns/op
  p(99,9000) =    134,758 ns/op
  p(99,9900) =   7147,058 ns/op
  p(99,9990) =   7360,000 ns/op
  p(99,9999) =   7360,000 ns/op
         max =   7360,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 0.1)

# Run progress: 33,33% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 435159040 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 435159040, 435159040, 435159040, 435159040, 435159040, 435159040, 435159040, 435159040 ns/op
# Warmup Iteration   2: n = 6875, mean = 133 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 49, 341, 873, 8238, 231424, 231424 ns/op
# Warmup Iteration   3: n = 3663, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 48, 51, 129, 1762, 1762 ns/op
# Warmup Iteration   4: n = 3482, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 50, 53, 101, 2038, 2038 ns/op
# Warmup Iteration   5: n = 3434, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 53, 59, 71, 71 ns/op
# Warmup Iteration   6: n = 3479, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 57, 7256, 7256 ns/op
# Warmup Iteration   7: n = 3439, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 97, 102, 7144, 7144 ns/op
# Warmup Iteration   8: n = 3360, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 99, 4665, 7464, 7464 ns/op
Iteration   1: n = 3395, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 98, 104, 7152, 7152 ns/op
Iteration   2: n = 3358, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 152, 7368, 7368 ns/op
Iteration   3: n = 3417, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 52, 54, 55, 80, 80 ns/op
Iteration   4: n = 3439, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 96, 127, 10464, 10464 ns/op
Iteration   5: n = 3459, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 97, 134, 233, 233 ns/op
Iteration   6: n = 3369, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 182, 280, 280 ns/op
Iteration   7: n = 3401, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 52, 97, 102, 115, 115 ns/op
Iteration   8: n = 3419, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 54, 55, 7032, 7032 ns/op
Iteration   9: n = 3424, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 51, 53, 100, 109, 7120, 7120 ns/op
Iteration  10: n = 3338, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 56, 103, 173, 7288, 7288 ns/op
Iteration  11: n = 3430, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 51, 53, 91, 134, 242, 242 ns/op
Iteration  12: n = 3461, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 50, 53, 54, 81, 101, 101 ns/op
Iteration  13: n = 3368, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 51, 53, 93, 291, 377, 377 ns/op
Iteration  14: n = 3459, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 51, 53, 57, 137, 188, 188 ns/op
Iteration  15: n = 3467, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 78, 7136, 7136 ns/op
Iteration  16: n = 3393, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 48, 51, 97, 117, 212, 212 ns/op
Iteration  17: n = 3432, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 52, 54, 72, 72 ns/op
Iteration  18: n = 3405, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 97, 100, 107, 107 ns/op
Iteration  19: n = 3460, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 59, 80, 80 ns/op
Iteration  20: n = 3447, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 53, 100, 112, 112 ns/op


Result: 46,401 ±(99.9%) 1,043 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,401, 10464,000), stdev = 82,871
  Confidence interval (99.9%): [45,358, 47,444]
  Samples, N = 68341
        mean =     46,401 ±(99.9%) 1,043 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     50,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     91,000 ns/op
  p(99,9000) =    117,658 ns/op
  p(99,9900) =   7122,653 ns/op
  p(99,9990) =  10464,000 ns/op
  p(99,9999) =  10464,000 ns/op
         max =  10464,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 1)

# Run progress: 35,42% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 439353344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 439353344, 439353344, 439353344, 439353344, 439353344, 439353344, 439353344, 439353344 ns/op
# Warmup Iteration   2: n = 7038, mean = 79 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 52, 116, 482, 7336, 25600, 25600 ns/op
# Warmup Iteration   3: n = 3766, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 53, 70, 92, 92 ns/op
# Warmup Iteration   4: n = 3546, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 53, 55, 70, 98, 7344, 7344 ns/op
# Warmup Iteration   5: n = 3490, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 55, 105, 106, 109, 109 ns/op
# Warmup Iteration   6: n = 3518, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 104, 146, 7104, 7104 ns/op
# Warmup Iteration   7: n = 3526, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 96, 107, 117, 117 ns/op
# Warmup Iteration   8: n = 3557, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 55, 56, 62, 102, 102 ns/op
Iteration   1: n = 3536, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 55, 124, 197, 197 ns/op
Iteration   2: n = 3461, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 55, 74, 270, 330, 330 ns/op
Iteration   3: n = 3571, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 54, 55, 107, 7128, 7128 ns/op
Iteration   4: n = 3457, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 47, 54, 55, 103, 163, 259, 259 ns/op
Iteration   5: n = 3474, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 55, 105, 108, 149, 149 ns/op
Iteration   6: n = 3571, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 55, 122, 239, 239 ns/op
Iteration   7: n = 3463, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 54, 55, 105, 106, 107, 107 ns/op
Iteration   8: n = 3526, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 95, 106, 7408, 7408 ns/op
Iteration   9: n = 3548, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 48, 55, 56, 57, 101, 7224, 7224 ns/op
Iteration  10: n = 3437, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 55, 57, 110, 239, 7232, 7232 ns/op
Iteration  11: n = 3481, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 48, 55, 56, 112, 265, 350, 350 ns/op
Iteration  12: n = 3513, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 48, 55, 56, 99, 143, 7328, 7328 ns/op
Iteration  13: n = 3426, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 48, 55, 56, 110, 136, 349, 349 ns/op
Iteration  14: n = 3502, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 48, 55, 56, 63, 111, 445, 445 ns/op
Iteration  15: n = 3546, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 53, 54, 93, 183, 267, 267 ns/op
Iteration  16: n = 3538, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 55, 95, 114, 114 ns/op
Iteration  17: n = 3558, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 46, 52, 54, 55, 107, 149, 149 ns/op
Iteration  18: n = 3474, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 47, 52, 54, 105, 106, 118, 118 ns/op
Iteration  19: n = 3412, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 55, 105, 155, 199, 199 ns/op
Iteration  20: n = 3496, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 105, 166, 7224, 7224 ns/op


Result: 49,435 ±(99.9%) 0,858 ns/op [Average]
  Statistics: (min, avg, max) = (42,000, 49,435, 7408,000), stdev = 68,965
  Confidence interval (99.9%): [48,577, 50,293]
  Samples, N = 69990
        mean =     49,435 ±(99.9%) 0,858 ns/op
         min =     42,000 ns/op
  p( 0,0000) =     42,000 ns/op
  p(50,0000) =     47,000 ns/op
  p(90,0000) =     54,000 ns/op
  p(95,0000) =     55,000 ns/op
  p(99,0000) =    104,000 ns/op
  p(99,9000) =    132,009 ns/op
  p(99,9900) =   3391,366 ns/op
  p(99,9990) =   7408,000 ns/op
  p(99,9999) =   7408,000 ns/op
         max =   7408,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 10)

# Run progress: 37,50% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 439877632 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 439877632, 439877632, 439877632, 439877632, 439877632, 439877632, 439877632, 439877632 ns/op
# Warmup Iteration   2: n = 6770, mean = 122 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 47, 54, 678, 7731, 232448, 232448 ns/op
# Warmup Iteration   3: n = 3735, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 48, 51, 75, 142, 142 ns/op
# Warmup Iteration   4: n = 3435, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 60, 105, 110, 110 ns/op
# Warmup Iteration   5: n = 3391, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 55, 104, 197, 7184, 7184 ns/op
# Warmup Iteration   6: n = 3443, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 54, 55, 106, 7384, 7384 ns/op
# Warmup Iteration   7: n = 3434, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 74, 112, 7176, 7176 ns/op
# Warmup Iteration   8: n = 3391, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 103, 111, 280, 280 ns/op
Iteration   1: n = 3407, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 52, 55, 108, 176, 176 ns/op
Iteration   2: n = 3438, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 57, 60, 107, 7248, 7248 ns/op
Iteration   3: n = 3497, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 53, 102, 122, 170, 170 ns/op
Iteration   4: n = 3450, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 54, 89, 133, 191, 191 ns/op
Iteration   5: n = 3417, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 54, 95, 177, 221, 221 ns/op
Iteration   6: n = 3407, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 54, 104, 118, 7248, 7248 ns/op
Iteration   7: n = 3361, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 54, 58, 102, 118, 40960, 40960 ns/op
Iteration   8: n = 3438, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 54, 56, 104, 7288, 7288 ns/op
Iteration   9: n = 3101, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 53, 72, 130, 7184, 7184 ns/op
Iteration  10: n = 2982, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 43, 45, 53, 92, 120, 204, 255, 255 ns/op
Iteration  11: n = 3043, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 52, 59, 112, 242, 265, 265 ns/op
Iteration  12: n = 3135, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 54, 103, 105, 105 ns/op
Iteration  13: n = 3016, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 53, 100, 144, 7216, 7216 ns/op
Iteration  14: n = 3147, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 54, 107, 109, 109 ns/op
Iteration  15: n = 3419, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 53, 116, 7264, 7264 ns/op
Iteration  16: n = 3438, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 114, 196, 196 ns/op
Iteration  17: n = 3348, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 100, 104, 117, 117 ns/op
Iteration  18: n = 3303, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 72, 100, 128, 7152, 7152 ns/op
Iteration  19: n = 3387, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 99, 180, 232, 232 ns/op
Iteration  20: n = 3394, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 54, 115, 136, 136 ns/op


Result: 48,306 ±(99.9%) 2,277 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 48,306, 40960,000), stdev = 177,917
  Confidence interval (99.9%): [46,029, 50,583]
  Samples, N = 66128
        mean =     48,306 ±(99.9%) 2,277 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     45,000 ns/op
  p(90,0000) =     51,000 ns/op
  p(95,0000) =     53,000 ns/op
  p(99,0000) =     99,000 ns/op
  p(99,9000) =    137,000 ns/op
  p(99,9900) =   7228,387 ns/op
  p(99,9990) =  40960,000 ns/op
  p(99,9999) =  40960,000 ns/op
         max =  40960,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 100)

# Run progress: 39,58% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 441450496 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496 ns/op
# Warmup Iteration   2: n = 6884, mean = 140 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 43, 51, 574, 986, 7487, 243712, 243712 ns/op
# Warmup Iteration   3: n = 3601, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 47, 51, 57, 153, 153 ns/op
# Warmup Iteration   4: n = 3476, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 50, 53, 103, 135, 135 ns/op
# Warmup Iteration   5: n = 3374, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 111, 167, 167 ns/op
# Warmup Iteration   6: n = 3414, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 97, 109, 7176, 7176 ns/op
# Warmup Iteration   7: n = 3391, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 218, 7376, 7376 ns/op
# Warmup Iteration   8: n = 3452, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 71, 100, 100, 100 ns/op
Iteration   1: n = 3404, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 107, 116, 116 ns/op
Iteration   2: n = 3466, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 46, 52, 53, 105, 116, 116 ns/op
Iteration   3: n = 3440, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 53, 133, 7112, 7112 ns/op
Iteration   4: n = 3383, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 99, 156, 3604, 3604 ns/op
Iteration   5: n = 3475, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 95, 297, 735, 735 ns/op
Iteration   6: n = 3413, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 92, 182, 257, 257 ns/op
Iteration   7: n = 3388, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 51, 53, 71, 91, 107, 107 ns/op
Iteration   8: n = 3388, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 51, 53, 100, 144, 251, 251 ns/op
Iteration   9: n = 3316, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 51, 53, 102, 166, 236, 236 ns/op
Iteration  10: n = 3312, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 52, 54, 111, 220, 294, 294 ns/op
Iteration  11: n = 3408, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 77, 138, 7048, 7048 ns/op
Iteration  12: n = 3386, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 53, 99, 105, 7232, 7232 ns/op
Iteration  13: n = 3418, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 54, 102, 107, 107 ns/op
Iteration  14: n = 3433, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 54, 100, 107, 107 ns/op
Iteration  15: n = 3387, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 54, 111, 7384, 7384 ns/op
Iteration  16: n = 3342, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 99, 112, 126, 126 ns/op
Iteration  17: n = 3391, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 51, 53, 54, 102, 108, 108 ns/op
Iteration  18: n = 3399, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 99, 107, 146, 146 ns/op
Iteration  19: n = 3389, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 54, 100, 138, 138 ns/op
Iteration  20: n = 3304, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 51, 53, 102, 164, 227, 227 ns/op


Result: 46,452 ±(99.9%) 0,723 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,452, 7384,000), stdev = 57,238
  Confidence interval (99.9%): [45,729, 47,175]
  Samples, N = 67842
        mean =     46,452 ±(99.9%) 0,723 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     50,000 ns/op
  p(95,0000) =     53,000 ns/op
  p(99,0000) =     93,000 ns/op
  p(99,9000) =    138,157 ns/op
  p(99,9900) =    668,335 ns/op
  p(99,9990) =   7384,000 ns/op
  p(99,9999) =   7384,000 ns/op
         max =   7384,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 1000)

# Run progress: 41,67% complete, ETA 00:02:52
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 438304768 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768 ns/op
# Warmup Iteration   2: n = 6794, mean = 139 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 49, 171, 1087, 8026, 273408, 273408 ns/op
# Warmup Iteration   3: n = 3596, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 47, 51, 103, 172, 172 ns/op
# Warmup Iteration   4: n = 3487, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 50, 53, 100, 7248, 7248 ns/op
# Warmup Iteration   5: n = 3374, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 97, 102, 112, 112 ns/op
# Warmup Iteration   6: n = 3467, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 56, 107, 7392, 7392 ns/op
# Warmup Iteration   7: n = 3479, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 53, 64, 93, 106, 106 ns/op
# Warmup Iteration   8: n = 3443, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 131, 314, 314 ns/op
Iteration   1: n = 3509, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 46, 50, 53, 105, 7088, 7088 ns/op
Iteration   2: n = 3428, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 74, 146, 146 ns/op
Iteration   3: n = 3388, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 111, 7384, 7384 ns/op
Iteration   4: n = 3454, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 53, 92, 105, 105 ns/op
Iteration   5: n = 3372, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 98, 120, 180, 180 ns/op
Iteration   6: n = 3424, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 97, 128, 7200, 7200 ns/op
Iteration   7: n = 3451, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 107, 124, 124 ns/op
Iteration   8: n = 3455, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 53, 104, 128, 128 ns/op
Iteration   9: n = 3019, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 53, 100, 108, 1376, 1376 ns/op
Iteration  10: n = 3029, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 50, 52, 99, 176, 7392, 7392 ns/op
Iteration  11: n = 3052, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 45, 50, 53, 99, 217, 319, 319 ns/op
Iteration  12: n = 3062, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 50, 52, 94, 192, 7408, 7408 ns/op
Iteration  13: n = 3088, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 51, 52, 54, 93, 98, 98 ns/op
Iteration  14: n = 3136, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 48, 51, 53, 99, 7288, 7288 ns/op
Iteration  15: n = 3473, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 43, 46, 50, 53, 132, 7144, 7144 ns/op
Iteration  16: n = 3465, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 95, 117, 117 ns/op
Iteration  17: n = 3332, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 53, 99, 113, 7016, 7016 ns/op
Iteration  18: n = 3449, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 105, 7272, 7272 ns/op
Iteration  19: n = 3461, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 50, 52, 83, 106, 106 ns/op
Iteration  20: n = 3444, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 52, 60, 111, 111 ns/op


Result: 46,054 ±(99.9%) 1,127 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,054, 7408,000), stdev = 88,337
  Confidence interval (99.9%): [44,927, 47,182]
  Samples, N = 66491
        mean =     46,054 ±(99.9%) 1,127 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     86,000 ns/op
  p(99,9000) =    115,508 ns/op
  p(99,9900) =   7163,645 ns/op
  p(99,9990) =   7408,000 ns/op
  p(99,9999) =   7408,000 ns/op
         max =   7408,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 1000000)

# Run progress: 43,75% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 440926208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 440926208, 440926208, 440926208, 440926208, 440926208, 440926208, 440926208, 440926208 ns/op
# Warmup Iteration   2: n = 6644, mean = 116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 183, 683, 7427, 229888, 229888 ns/op
# Warmup Iteration   3: n = 3811, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 45, 51, 58, 144, 144 ns/op
# Warmup Iteration   4: n = 3446, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 101, 103, 103 ns/op
# Warmup Iteration   5: n = 3410, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 98, 104, 257, 257 ns/op
# Warmup Iteration   6: n = 3459, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 51, 53, 105, 7584, 7584 ns/op
# Warmup Iteration   7: n = 3475, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 113, 145, 145 ns/op
# Warmup Iteration   8: n = 3457, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 47, 51, 53, 176, 7520, 7520 ns/op
Iteration   1: n = 3423, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 107, 127, 127 ns/op
Iteration   2: n = 3411, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 51, 97, 107, 114, 114 ns/op
Iteration   3: n = 3464, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 127, 185, 185 ns/op
Iteration   4: n = 3455, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 81, 289, 7192, 7192 ns/op
Iteration   5: n = 3421, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 125, 157, 157 ns/op
Iteration   6: n = 3426, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 208, 331, 331 ns/op
Iteration   7: n = 3484, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 53, 106, 176, 176 ns/op
Iteration   8: n = 3424, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 53, 95, 164, 164 ns/op
Iteration   9: n = 3416, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 52, 98, 139, 7232, 7232 ns/op
Iteration  10: n = 3326, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 44, 52, 81, 109, 213, 236, 236 ns/op
Iteration  11: n = 3331, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 52, 79, 119, 290, 7040, 7040 ns/op
Iteration  12: n = 3433, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 50, 53, 101, 7120, 7120 ns/op
Iteration  13: n = 3402, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 53, 70, 106, 121, 121 ns/op
Iteration  14: n = 3487, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 51, 53, 97, 102, 102 ns/op
Iteration  15: n = 3282, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 52, 99, 139, 7168, 7168 ns/op
Iteration  16: n = 3373, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 113, 3596, 3596 ns/op
Iteration  17: n = 3433, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 50, 55, 120, 7824, 7824 ns/op
Iteration  18: n = 3387, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 126, 468, 468 ns/op
Iteration  19: n = 3423, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 52, 97, 105, 145, 145 ns/op
Iteration  20: n = 3387, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 51, 97, 103, 236, 236 ns/op


Result: 46,300 ±(99.9%) 1,006 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,300, 7824,000), stdev = 79,821
  Confidence interval (99.9%): [45,294, 47,306]
  Samples, N = 68188
        mean =     46,300 ±(99.9%) 1,006 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     97,000 ns/op
  p(99,9000) =    143,811 ns/op
  p(99,9900) =   7128,693 ns/op
  p(99,9990) =   7824,000 ns/op
  p(99,9999) =   7824,000 ns/op
         max =   7824,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 1000000000)

# Run progress: 45,83% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 432537600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 432537600, 432537600, 432537600, 432537600, 432537600, 432537600, 432537600, 432537600 ns/op
# Warmup Iteration   2: n = 6646, mean = 132 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 187, 763, 8434, 218880, 218880 ns/op
# Warmup Iteration   3: n = 3746, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 48, 51, 244, 7120, 7120 ns/op
# Warmup Iteration   4: n = 3488, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 52, 103, 133, 133 ns/op
# Warmup Iteration   5: n = 3469, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 50, 52, 101, 106, 106 ns/op
# Warmup Iteration   6: n = 3418, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 53, 57, 84, 93, 93 ns/op
# Warmup Iteration   7: n = 3472, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 49, 53, 205, 360, 360 ns/op
# Warmup Iteration   8: n = 3333, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 52, 97, 108, 130, 130 ns/op
Iteration   1: n = 3400, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 51, 97, 240, 7344, 7344 ns/op
Iteration   2: n = 3436, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 52, 56, 94, 117, 117 ns/op
Iteration   3: n = 3394, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 98, 156, 202, 202 ns/op
Iteration   4: n = 3426, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 51, 60, 236, 7280, 7280 ns/op
Iteration   5: n = 3425, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 90, 136, 170, 170 ns/op
Iteration   6: n = 3329, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 49, 53, 101, 307, 7248, 7248 ns/op
Iteration   7: n = 3441, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 65, 114, 183, 183 ns/op
Iteration   8: n = 3431, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 48, 50, 54, 259, 7216, 7216 ns/op
Iteration   9: n = 3296, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 52, 59, 109, 264, 340, 340 ns/op
Iteration  10: n = 3139, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 53, 95, 131, 240, 8288, 8288 ns/op
Iteration  11: n = 3262, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 42, 46, 51, 54, 113, 210, 222, 222 ns/op
Iteration  12: n = 3430, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 52, 88, 236, 446, 446 ns/op
Iteration  13: n = 3448, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 52, 53, 54, 94, 104, 104 ns/op
Iteration  14: n = 3452, mean = 48 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 50, 53, 54, 119, 7232, 7232 ns/op
Iteration  15: n = 3410, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 49, 52, 99, 7192, 7192 ns/op
Iteration  16: n = 3350, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 51, 97, 107, 115, 115 ns/op
Iteration  17: n = 3460, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 48, 50, 52, 112, 7200, 7200 ns/op
Iteration  18: n = 3439, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 45, 49, 53, 105, 134, 134 ns/op
Iteration  19: n = 3458, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 46, 49, 52, 79, 110, 110 ns/op
Iteration  20: n = 3427, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 47, 50, 52, 59, 109, 109 ns/op


Result: 46,267 ±(99.9%) 1,014 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,267, 8288,000), stdev = 80,272
  Confidence interval (99.9%): [45,253, 47,281]
  Samples, N = 67853
        mean =     46,267 ±(99.9%) 1,014 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     50,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     97,000 ns/op
  p(99,9000) =    168,292 ns/op
  p(99,9900) =   7203,434 ns/op
  p(99,9990) =   8288,000 ns/op
  p(99,9999) =   8288,000 ns/op
         max =   8288,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafama
# Parameters: (x = 1000000000000)

# Run progress: 47,92% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 440401920 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 440401920, 440401920, 440401920, 440401920, 440401920, 440401920, 440401920, 440401920 ns/op
# Warmup Iteration   2: n = 6816, mean = 131 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 50, 398, 768, 7529, 226560, 226560 ns/op
# Warmup Iteration   3: n = 3676, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 42, 44, 47, 51, 75, 7368, 7368 ns/op
# Warmup Iteration   4: n = 3334, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 53, 58, 111, 171, 171 ns/op
# Warmup Iteration   5: n = 3413, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 53, 100, 127, 127 ns/op
# Warmup Iteration   6: n = 3355, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 98, 100, 130, 130 ns/op
# Warmup Iteration   7: n = 3437, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 63, 97, 97 ns/op
# Warmup Iteration   8: n = 3375, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 95, 3304, 3304 ns/op
Iteration   1: n = 3399, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 101, 7288, 7288 ns/op
Iteration   2: n = 3420, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 62, 4304, 4304 ns/op
Iteration   3: n = 3378, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 52, 97, 103, 115, 115 ns/op
Iteration   4: n = 3435, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 84, 7216, 7216 ns/op
Iteration   5: n = 3356, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 51, 53, 97, 101, 222, 222 ns/op
Iteration   6: n = 3434, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 59, 92, 92 ns/op
Iteration   7: n = 3379, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 85, 108, 108 ns/op
Iteration   8: n = 3451, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 46, 50, 53, 71, 100, 100 ns/op
Iteration   9: n = 3461, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 98, 7248, 7248 ns/op
Iteration  10: n = 3444, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 45, 53, 92, 131, 302, 340, 340 ns/op
Iteration  11: n = 3427, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 53, 106, 191, 454, 454 ns/op
Iteration  12: n = 3427, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 53, 57, 90, 118, 118 ns/op
Iteration  13: n = 3438, mean = 47 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 53, 100, 7272, 7272 ns/op
Iteration  14: n = 3459, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 43, 46, 51, 53, 4040, 7504, 7504 ns/op
Iteration  15: n = 3424, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 83, 111, 1009, 1009 ns/op
Iteration  16: n = 3461, mean = 46 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 53, 62, 7392, 7392 ns/op
Iteration  17: n = 3445, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 50, 52, 83, 10416, 10416 ns/op
Iteration  18: n = 3392, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 88, 182, 182 ns/op
Iteration  19: n = 3442, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41, 44, 49, 51, 53, 57, 90, 90 ns/op
Iteration  20: n = 3387, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 49, 51, 53, 154, 537, 537 ns/op


Result: 46,290 ±(99.9%) 1,185 ns/op [Average]
  Statistics: (min, avg, max) = (40,000, 46,290, 10416,000), stdev = 94,259
  Confidence interval (99.9%): [45,105, 47,476]
  Samples, N = 68459
        mean =     46,290 ±(99.9%) 1,185 ns/op
         min =     40,000 ns/op
  p( 0,0000) =     40,000 ns/op
  p(50,0000) =     44,000 ns/op
  p(90,0000) =     49,000 ns/op
  p(95,0000) =     52,000 ns/op
  p(99,0000) =     59,000 ns/op
  p(99,9000) =    135,080 ns/op
  p(99,9900) =   7274,464 ns/op
  p(99,9990) =  10416,000 ns/op
  p(99,9999) =  10416,000 ns/op
         max =  10416,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 0.000000000001)

# Run progress: 50,00% complete, ETA 00:02:28
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 443547648 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 443547648, 443547648, 443547648, 443547648, 443547648, 443547648, 443547648, 443547648 ns/op
# Warmup Iteration   2: n = 4752, mean = 166 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 193, 812, 12161, 224768, 224768 ns/op
# Warmup Iteration   3: n = 2561, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 36, 37, 80, 10992, 10992 ns/op
# Warmup Iteration   4: n = 2595, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 42, 92, 110, 110 ns/op
# Warmup Iteration   5: n = 2392, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 75, 82, 105, 105 ns/op
# Warmup Iteration   6: n = 2402, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 37, 75, 133, 172, 172 ns/op
# Warmup Iteration   7: n = 2458, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 36, 37, 38, 95, 122, 122 ns/op
# Warmup Iteration   8: n = 2439, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 74, 89, 117, 117 ns/op
Iteration   1: n = 2412, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 40, 48, 108, 118, 118 ns/op
Iteration   2: n = 2421, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 41, 43, 91, 98, 98 ns/op
Iteration   3: n = 2476, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 36, 42, 85, 92, 92 ns/op
Iteration   4: n = 2476, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 37, 80, 134, 201, 201 ns/op
Iteration   5: n = 2502, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 81, 116, 158, 158 ns/op
Iteration   6: n = 2489, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 91, 284, 467, 467 ns/op
Iteration   7: n = 2481, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 37, 38, 45, 60, 99, 99 ns/op
Iteration   8: n = 2442, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 66, 93, 140, 140 ns/op
Iteration   9: n = 2391, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 43, 57, 102, 7184, 7184 ns/op
Iteration  10: n = 2431, mean = 43 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 39, 82, 128, 379, 8688, 8688 ns/op
Iteration  11: n = 2465, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 41, 100, 223, 309, 309 ns/op
Iteration  12: n = 2472, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 44, 89, 162, 162 ns/op
Iteration  13: n = 2490, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 108, 132, 132 ns/op
Iteration  14: n = 2454, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 88, 89, 89 ns/op
Iteration  15: n = 2475, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 39, 60, 94, 94 ns/op
Iteration  16: n = 2385, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 38, 77, 137, 157, 157 ns/op
Iteration  17: n = 2371, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 91, 132, 146, 146 ns/op
Iteration  18: n = 2439, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 45, 112, 179, 179 ns/op
Iteration  19: n = 2416, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 4123, 10256, 10256 ns/op
Iteration  20: n = 2319, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 42, 82, 132, 147, 147 ns/op


Result: 35,795 ±(99.9%) 1,133 ns/op [Average]
  Statistics: (min, avg, max) = (26,000, 35,795, 10256,000), stdev = 76,079
  Confidence interval (99.9%): [34,662, 36,928]
  Samples, N = 48807
        mean =     35,795 ±(99.9%) 1,133 ns/op
         min =     26,000 ns/op
  p( 0,0000) =     26,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     79,000 ns/op
  p(99,9000) =    137,192 ns/op
  p(99,9900) =   1246,396 ns/op
  p(99,9990) =  10256,000 ns/op
  p(99,9999) =  10256,000 ns/op
         max =  10256,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 0.000000001)

# Run progress: 52,08% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 438304768 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768, 438304768 ns/op
# Warmup Iteration   2: n = 4841, mean = 127 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 282, 534, 7549, 232448, 232448 ns/op
# Warmup Iteration   3: n = 2497, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 36, 37, 206, 7224, 7224 ns/op
# Warmup Iteration   4: n = 2432, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 82, 146, 241, 241 ns/op
# Warmup Iteration   5: n = 2427, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 83, 153, 186, 186 ns/op
# Warmup Iteration   6: n = 2478, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 36, 36, 39, 93, 99, 99 ns/op
# Warmup Iteration   7: n = 2458, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 54, 120, 7376, 7376 ns/op
# Warmup Iteration   8: n = 2396, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 50, 75, 127, 7064, 7064 ns/op
Iteration   1: n = 2384, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 78, 129, 212, 212 ns/op
Iteration   2: n = 2471, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 38, 86, 88, 88 ns/op
Iteration   3: n = 2442, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 37, 113, 412, 1186, 1186 ns/op
Iteration   4: n = 2482, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 39, 88, 95, 95 ns/op
Iteration   5: n = 2377, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 60, 84, 185, 210, 210 ns/op
Iteration   6: n = 2412, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 40, 99, 432, 7112, 7112 ns/op
Iteration   7: n = 2511, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 44, 128, 299, 299 ns/op
Iteration   8: n = 2483, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 38, 98, 100, 100 ns/op
Iteration   9: n = 2360, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 39, 91, 179, 227, 227 ns/op
Iteration  10: n = 2413, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 77, 99, 174, 206, 206 ns/op
Iteration  11: n = 2440, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 88, 1402, 5264, 5264 ns/op
Iteration  12: n = 2385, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 101, 139, 139 ns/op
Iteration  13: n = 2436, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 96, 125, 125 ns/op
Iteration  14: n = 2430, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 42, 97, 147, 147 ns/op
Iteration  15: n = 2441, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 43, 7276, 7360, 7360 ns/op
Iteration  16: n = 2448, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 40, 99, 104, 104 ns/op
Iteration  17: n = 2419, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 83, 244, 340, 340 ns/op
Iteration  18: n = 2434, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 76, 107, 168, 168 ns/op
Iteration  19: n = 2469, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 39, 129, 172, 172 ns/op
Iteration  20: n = 2448, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 48, 101, 106, 106 ns/op


Result: 35,889 ±(99.9%) 1,062 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 35,889, 7360,000), stdev = 71,235
  Confidence interval (99.9%): [34,827, 36,952]
  Samples, N = 48685
        mean =     35,889 ±(99.9%) 1,062 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     82,000 ns/op
  p(99,9000) =    152,000 ns/op
  p(99,9900) =   5506,827 ns/op
  p(99,9990) =   7360,000 ns/op
  p(99,9999) =   7360,000 ns/op
         max =   7360,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 0.000001)

# Run progress: 54,17% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 438829056 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 438829056, 438829056, 438829056, 438829056, 438829056, 438829056, 438829056, 438829056 ns/op
# Warmup Iteration   2: n = 4846, mean = 134 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 258, 659, 7756, 225024, 225024 ns/op
# Warmup Iteration   3: n = 2533, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 36, 37, 99, 7376, 7376 ns/op
# Warmup Iteration   4: n = 2444, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 67, 93, 93 ns/op
# Warmup Iteration   5: n = 2258, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 48, 81, 450, 7400, 7400 ns/op
# Warmup Iteration   6: n = 2380, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 48, 129, 140, 140 ns/op
# Warmup Iteration   7: n = 2433, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 55, 99, 104, 104 ns/op
# Warmup Iteration   8: n = 2452, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 40, 80, 110, 110 ns/op
Iteration   1: n = 2485, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 39, 72, 169, 169 ns/op
Iteration   2: n = 2407, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 37, 66, 142, 177, 177 ns/op
Iteration   3: n = 2544, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 83, 114, 114 ns/op
Iteration   4: n = 2440, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 81, 148, 219, 219 ns/op
Iteration   5: n = 2434, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 37, 80, 120, 131, 131 ns/op
Iteration   6: n = 2426, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 80, 127, 151, 151 ns/op
Iteration   7: n = 2512, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 36, 38, 40, 88, 110, 110 ns/op
Iteration   8: n = 2403, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 77, 100, 7352, 7352 ns/op
Iteration   9: n = 2357, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 39, 75, 97, 98, 98 ns/op
Iteration  10: n = 2387, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 38, 87, 135, 13520, 13520 ns/op
Iteration  11: n = 2453, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 81, 132, 147, 147 ns/op
Iteration  12: n = 2476, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 90, 101, 101 ns/op
Iteration  13: n = 2433, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 84, 168, 181, 181 ns/op
Iteration  14: n = 2429, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 43, 102, 140, 140 ns/op
Iteration  15: n = 2486, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 61, 111, 111 ns/op
Iteration  16: n = 2483, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 39, 71, 79, 79 ns/op
Iteration  17: n = 2394, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 37, 75, 96, 105, 105 ns/op
Iteration  18: n = 2425, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 40, 132, 248, 248 ns/op
Iteration  19: n = 2402, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 73, 78, 78, 78 ns/op
Iteration  20: n = 2364, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 75, 79, 105, 105 ns/op


Result: 35,143 ±(99.9%) 1,040 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 35,143, 13520,000), stdev = 69,795
  Confidence interval (99.9%): [34,103, 36,183]
  Samples, N = 48740
        mean =     35,143 ±(99.9%) 1,040 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     75,000 ns/op
  p(99,9000) =    105,259 ns/op
  p(99,9900) =    185,784 ns/op
  p(99,9990) =  13520,000 ns/op
  p(99,9999) =  13520,000 ns/op
         max =  13520,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 0.001)

# Run progress: 56,25% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 441974784 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441974784, 441974784, 441974784, 441974784, 441974784, 441974784, 441974784, 441974784 ns/op
# Warmup Iteration   2: n = 4869, mean = 148 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 39, 519, 811, 7898, 252928, 252928 ns/op
# Warmup Iteration   3: n = 2501, mean = 33 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 36, 37, 77, 135, 135 ns/op
# Warmup Iteration   4: n = 2421, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 80, 113, 173, 173 ns/op
# Warmup Iteration   5: n = 2429, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 39, 82, 137, 7288, 7288 ns/op
# Warmup Iteration   6: n = 2422, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 82, 97, 98, 98 ns/op
# Warmup Iteration   7: n = 2419, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 82, 102, 115, 115 ns/op
# Warmup Iteration   8: n = 2443, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 82, 101, 7376, 7376 ns/op
Iteration   1: n = 2468, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 41, 110, 136, 136 ns/op
Iteration   2: n = 2405, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 39, 80, 159, 7224, 7224 ns/op
Iteration   3: n = 2360, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 85, 191, 248, 248 ns/op
Iteration   4: n = 2448, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 83, 145, 200, 200 ns/op
Iteration   5: n = 2310, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 39, 79, 86, 161, 232, 232 ns/op
Iteration   6: n = 2461, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 39, 81, 103, 104, 104 ns/op
Iteration   7: n = 2484, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 40, 58, 124, 141, 141 ns/op
Iteration   8: n = 2444, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 38, 80, 103, 122, 122 ns/op
Iteration   9: n = 2450, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 245, 7288, 7288 ns/op
Iteration  10: n = 2479, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 91, 96, 96 ns/op
Iteration  11: n = 2479, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 93, 119, 119 ns/op
Iteration  12: n = 2454, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 37, 87, 123, 132, 132 ns/op
Iteration  13: n = 2448, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 37, 38, 46, 139, 211, 211 ns/op
Iteration  14: n = 2375, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 114, 7112, 7112 ns/op
Iteration  15: n = 2369, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 42, 81, 150, 198, 198 ns/op
Iteration  16: n = 2261, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 43, 103, 407, 499, 499 ns/op
Iteration  17: n = 2385, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 83, 202, 322, 322 ns/op
Iteration  18: n = 2419, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 77, 97, 103, 103 ns/op
Iteration  19: n = 2441, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 161, 314, 314 ns/op
Iteration  20: n = 2410, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 77, 102, 132, 132 ns/op


Result: 36,434 ±(99.9%) 0,856 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 36,434, 7288,000), stdev = 57,220
  Confidence interval (99.9%): [35,577, 37,290]
  Samples, N = 48350
        mean =     36,434 ±(99.9%) 0,856 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     81,000 ns/op
  p(99,9000) =    130,000 ns/op
  p(99,9900) =    464,761 ns/op
  p(99,9990) =   7288,000 ns/op
  p(99,9999) =   7288,000 ns/op
         max =   7288,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 0.1)

# Run progress: 58,33% complete, ETA 00:02:03
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 436207616 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 436207616, 436207616, 436207616, 436207616, 436207616, 436207616, 436207616, 436207616 ns/op
# Warmup Iteration   2: n = 4852, mean = 117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 32, 36, 328, 563, 5717, 230656, 230656 ns/op
# Warmup Iteration   3: n = 2543, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 35, 39, 202, 7216, 7216 ns/op
# Warmup Iteration   4: n = 2424, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 36, 39, 80, 91, 91 ns/op
# Warmup Iteration   5: n = 2486, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 75, 270, 7200, 7200 ns/op
# Warmup Iteration   6: n = 2443, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 80, 6984, 6984 ns/op
# Warmup Iteration   7: n = 2434, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 82, 97, 97 ns/op
# Warmup Iteration   8: n = 2454, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 91, 196, 196 ns/op
Iteration   1: n = 2489, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 53, 82, 82 ns/op
Iteration   2: n = 2406, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 39, 46, 57, 73, 73 ns/op
Iteration   3: n = 2479, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 65, 78, 98, 98 ns/op
Iteration   4: n = 2426, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 40, 84, 139, 210, 210 ns/op
Iteration   5: n = 2376, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 37, 85, 125, 147, 147 ns/op
Iteration   6: n = 2473, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 36, 38, 46, 55, 55 ns/op
Iteration   7: n = 2321, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 39, 57, 59, 59, 59 ns/op
Iteration   8: n = 2360, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 40, 42, 53, 60, 60 ns/op
Iteration   9: n = 2309, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 80, 96, 102, 102 ns/op
Iteration  10: n = 2312, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 37, 38, 74, 109, 231, 252, 252 ns/op
Iteration  11: n = 2302, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 38, 39, 91, 190, 252, 252 ns/op
Iteration  12: n = 2376, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 38, 39, 81, 88, 88 ns/op
Iteration  13: n = 2361, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 38, 40, 41, 57, 82, 82 ns/op
Iteration  14: n = 2338, mean = 42 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 38, 77, 4770, 7352, 7352 ns/op
Iteration  15: n = 2039, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 39, 45, 104, 799, 855, 855 ns/op
Iteration  16: n = 1992, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 37, 38, 45, 103, 256, 326, 326 ns/op
Iteration  17: n = 2374, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 40, 74, 138, 138 ns/op
Iteration  18: n = 2371, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 39, 58, 87, 87 ns/op
Iteration  19: n = 2369, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 39, 40, 81, 7224, 7224 ns/op
Iteration  20: n = 2352, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 39, 40, 182, 7160, 7160 ns/op


Result: 36,427 ±(99.9%) 1,021 ns/op [Average]
  Statistics: (min, avg, max) = (26,000, 36,427, 7352,000), stdev = 67,109
  Confidence interval (99.9%): [35,407, 37,448]
  Samples, N = 46825
        mean =     36,427 ±(99.9%) 1,021 ns/op
         min =     26,000 ns/op
  p( 0,0000) =     26,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     38,000 ns/op
  p(99,0000) =     77,000 ns/op
  p(99,9000) =    141,174 ns/op
  p(99,9900) =   2856,207 ns/op
  p(99,9990) =   7352,000 ns/op
  p(99,9999) =   7352,000 ns/op
         max =   7352,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 1)

# Run progress: 60,42% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 432537600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 432537600, 432537600, 432537600, 432537600, 432537600, 432537600, 432537600, 432537600 ns/op
# Warmup Iteration   2: n = 5382, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24, 31, 35, 131, 423, 7409, 14416, 14416 ns/op
# Warmup Iteration   3: n = 2916, mean = 31 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24, 32, 34, 35, 36, 54, 119, 119 ns/op
# Warmup Iteration   4: n = 2785, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 40, 89, 7384, 7384 ns/op
# Warmup Iteration   5: n = 2741, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 36, 49, 90, 7072, 7072 ns/op
# Warmup Iteration   6: n = 2689, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 54, 57, 62, 62 ns/op
# Warmup Iteration   7: n = 2665, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 75, 85, 7336, 7336 ns/op
# Warmup Iteration   8: n = 2622, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 75, 82, 94, 94 ns/op
Iteration   1: n = 2685, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 41, 44, 79, 91, 91 ns/op
Iteration   2: n = 2688, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 39, 48, 244, 253, 253 ns/op
Iteration   3: n = 2719, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 80, 158, 7152, 7152 ns/op
Iteration   4: n = 2667, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 41, 77, 175, 202, 202 ns/op
Iteration   5: n = 2717, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 37, 69, 228, 7224, 7224 ns/op
Iteration   6: n = 2709, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 104, 7120, 7120 ns/op
Iteration   7: n = 2722, mean = 33 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 69, 95, 95 ns/op
Iteration   8: n = 2628, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 92, 99, 99 ns/op
Iteration   9: n = 2739, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 36, 39, 75, 85, 85 ns/op
Iteration  10: n = 2670, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 39, 82, 168, 246, 246 ns/op
Iteration  11: n = 2712, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 39, 109, 139, 139 ns/op
Iteration  12: n = 2682, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 37, 75, 90, 98, 98 ns/op
Iteration  13: n = 2720, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 37, 42, 158, 260, 260 ns/op
Iteration  14: n = 2689, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 37, 82, 170, 205, 205 ns/op
Iteration  15: n = 2652, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 81, 340, 7152, 7152 ns/op
Iteration  16: n = 2623, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 65, 231, 7256, 7256 ns/op
Iteration  17: n = 2720, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 39, 67, 88, 88 ns/op
Iteration  18: n = 2631, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 89, 98, 98 ns/op
Iteration  19: n = 2682, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 36, 37, 39, 53, 7344, 7344 ns/op
Iteration  20: n = 2681, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 38, 50, 80, 80 ns/op


Result: 35,196 ±(99.9%) 1,081 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 35,196, 7344,000), stdev = 76,170
  Confidence interval (99.9%): [34,115, 36,277]
  Samples, N = 53736
        mean =     35,196 ±(99.9%) 1,081 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     34,000 ns/op
  p(90,0000) =     36,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     74,000 ns/op
  p(99,9000) =    119,000 ns/op
  p(99,9900) =   7140,042 ns/op
  p(99,9990) =   7344,000 ns/op
  p(99,9999) =   7344,000 ns/op
         max =   7344,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 10)

# Run progress: 62,50% complete, ETA 00:01:51
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 441974784 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441974784, 441974784, 441974784, 441974784, 441974784, 441974784, 441974784, 441974784 ns/op
# Warmup Iteration   2: n = 4639, mean = 128 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 178, 555, 7755, 230656, 230656 ns/op
# Warmup Iteration   3: n = 2537, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 38, 115, 7328, 7328 ns/op
# Warmup Iteration   4: n = 2490, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 38, 108, 134, 134 ns/op
# Warmup Iteration   5: n = 2443, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 43, 99, 190, 190 ns/op
# Warmup Iteration   6: n = 2450, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 37, 40, 41, 107, 7384, 7384 ns/op
# Warmup Iteration   7: n = 2412, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 52, 133, 203, 203 ns/op
# Warmup Iteration   8: n = 2313, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 39, 83, 162, 201, 201 ns/op
Iteration   1: n = 2289, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 90, 288, 451, 451 ns/op
Iteration   2: n = 2122, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 38, 57, 97, 187, 399, 399 ns/op
Iteration   3: n = 2295, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 38, 97, 176, 7440, 7440 ns/op
Iteration   4: n = 2400, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 41, 81, 111, 140, 140 ns/op
Iteration   5: n = 2365, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 41, 88, 419, 7232, 7232 ns/op
Iteration   6: n = 2434, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 54, 117, 193, 193 ns/op
Iteration   7: n = 2455, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 50, 95, 100, 100 ns/op
Iteration   8: n = 2428, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 36, 75, 111, 7240, 7240 ns/op
Iteration   9: n = 2411, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 38, 39, 93, 253, 274, 274 ns/op
Iteration  10: n = 2419, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 96, 162, 220, 220 ns/op
Iteration  11: n = 2201, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 36, 38, 49, 105, 228, 276, 276 ns/op
Iteration  12: n = 2293, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 96, 139, 277, 277 ns/op
Iteration  13: n = 2381, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 82, 127, 253, 253 ns/op
Iteration  14: n = 2483, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 37, 37, 39, 82, 91, 91 ns/op
Iteration  15: n = 2487, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 91, 105, 105 ns/op
Iteration  16: n = 2451, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 59, 106, 405, 405 ns/op
Iteration  17: n = 2432, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 86, 190, 7312, 7312 ns/op
Iteration  18: n = 2441, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 37, 37, 38, 93, 216, 216 ns/op
Iteration  19: n = 2387, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 91, 133, 133 ns/op
Iteration  20: n = 2396, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 95, 120, 120 ns/op


Result: 36,034 ±(99.9%) 1,017 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 36,034, 7440,000), stdev = 67,394
  Confidence interval (99.9%): [35,017, 37,051]
  Samples, N = 47570
        mean =     36,034 ±(99.9%) 1,017 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     38,000 ns/op
  p(99,0000) =     82,000 ns/op
  p(99,9000) =    148,429 ns/op
  p(99,9900) =   2164,730 ns/op
  p(99,9990) =   7440,000 ns/op
  p(99,9999) =   7440,000 ns/op
         max =   7440,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 100)

# Run progress: 64,58% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 444071936 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 444071936, 444071936, 444071936, 444071936, 444071936, 444071936, 444071936, 444071936 ns/op
# Warmup Iteration   2: n = 4860, mean = 174 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 40, 321, 783, 15961, 249856, 249856 ns/op
# Warmup Iteration   3: n = 2614, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 35, 37, 173, 7400, 7400 ns/op
# Warmup Iteration   4: n = 2518, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 36, 37, 38, 94, 215, 215 ns/op
# Warmup Iteration   5: n = 2442, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 84, 88, 88 ns/op
# Warmup Iteration   6: n = 2431, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 37, 77, 158, 231, 231 ns/op
# Warmup Iteration   7: n = 2473, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 39, 96, 7208, 7208 ns/op
# Warmup Iteration   8: n = 2357, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 38, 82, 407, 7304, 7304 ns/op
Iteration   1: n = 2465, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 87, 104, 104 ns/op
Iteration   2: n = 2415, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 43, 51, 124, 7280, 7280 ns/op
Iteration   3: n = 2416, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 81, 131, 230, 230 ns/op
Iteration   4: n = 2437, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 82, 136, 157, 157 ns/op
Iteration   5: n = 2460, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 36, 37, 80, 148, 191, 191 ns/op
Iteration   6: n = 2464, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 36, 37, 89, 149, 242, 242 ns/op
Iteration   7: n = 2354, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 44, 158, 409, 409 ns/op
Iteration   8: n = 2339, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 79, 119, 225, 225 ns/op
Iteration   9: n = 2293, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 89, 144, 210, 210 ns/op
Iteration  10: n = 2366, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 39, 101, 152, 374, 374 ns/op
Iteration  11: n = 2347, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 85, 145, 173, 173 ns/op
Iteration  12: n = 2316, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 39, 95, 7176, 7176 ns/op
Iteration  13: n = 2369, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 38, 39, 131, 170, 170 ns/op
Iteration  14: n = 2385, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 38, 88, 93, 93 ns/op
Iteration  15: n = 2305, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 39, 68, 279, 7304, 7304 ns/op
Iteration  16: n = 2345, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 39, 40, 101, 139, 139 ns/op
Iteration  17: n = 2351, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 40, 101, 124, 124 ns/op
Iteration  18: n = 2350, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 40, 99, 115, 115 ns/op
Iteration  19: n = 2303, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 78, 141, 316, 316 ns/op
Iteration  20: n = 2297, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 38, 80, 167, 184, 184 ns/op


Result: 36,152 ±(99.9%) 0,877 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 36,152, 7304,000), stdev = 57,977
  Confidence interval (99.9%): [35,275, 37,028]
  Samples, N = 47377
        mean =     36,152 ±(99.9%) 0,877 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     38,000 ns/op
  p(99,0000) =     78,000 ns/op
  p(99,9000) =    135,622 ns/op
  p(99,9900) =    383,177 ns/op
  p(99,9990) =   7304,000 ns/op
  p(99,9999) =   7304,000 ns/op
         max =   7304,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 1000)

# Run progress: 66,67% complete, ETA 00:01:39
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 441450496 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496, 441450496 ns/op
# Warmup Iteration   2: n = 4734, mean = 135 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 33, 36, 293, 599, 8388, 214016, 214016 ns/op
# Warmup Iteration   3: n = 2619, mean = 32 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 36, 36, 101, 135, 135 ns/op
# Warmup Iteration   4: n = 2518, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 41, 85, 93, 93 ns/op
# Warmup Iteration   5: n = 2501, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 35, 36, 41, 100, 153, 153 ns/op
# Warmup Iteration   6: n = 2513, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 35, 36, 38, 152, 285, 285 ns/op
# Warmup Iteration   7: n = 2480, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 39, 123, 152, 152 ns/op
# Warmup Iteration   8: n = 2430, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 48, 164, 546, 546 ns/op
Iteration   1: n = 2393, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 75, 115, 137, 137 ns/op
Iteration   2: n = 2501, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 39, 81, 110, 110 ns/op
Iteration   3: n = 2456, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 56, 84, 122, 122 ns/op
Iteration   4: n = 2489, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 40, 88, 90, 90 ns/op
Iteration   5: n = 2424, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 84, 179, 284, 284 ns/op
Iteration   6: n = 2405, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 38, 39, 87, 201, 260, 260 ns/op
Iteration   7: n = 2531, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 83, 144, 493, 493 ns/op
Iteration   8: n = 2436, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 99, 127, 127 ns/op
Iteration   9: n = 2466, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 46, 89, 143, 143 ns/op
Iteration  10: n = 2364, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 47, 83, 137, 238, 267, 267 ns/op
Iteration  11: n = 2430, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 43, 109, 244, 7392, 7392 ns/op
Iteration  12: n = 2475, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 43, 112, 185, 185 ns/op
Iteration  13: n = 2472, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 41, 99, 113, 113 ns/op
Iteration  14: n = 2440, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 41, 94, 147, 147 ns/op
Iteration  15: n = 2453, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 43, 187, 7224, 7224 ns/op
Iteration  16: n = 2460, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 55, 118, 152, 152 ns/op
Iteration  17: n = 2462, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 94, 101, 101 ns/op
Iteration  18: n = 2471, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 89, 95, 95 ns/op
Iteration  19: n = 2413, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 110, 205, 205 ns/op
Iteration  20: n = 2435, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 44, 168, 189, 189 ns/op


Result: 35,112 ±(99.9%) 0,704 ns/op [Average]
  Statistics: (min, avg, max) = (26,000, 35,112, 7392,000), stdev = 47,323
  Confidence interval (99.9%): [34,409, 35,816]
  Samples, N = 48976
        mean =     35,112 ±(99.9%) 0,704 ns/op
         min =     26,000 ns/op
  p( 0,0000) =     26,000 ns/op
  p(50,0000) =     34,000 ns/op
  p(90,0000) =     36,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     80,000 ns/op
  p(99,9000) =    148,046 ns/op
  p(99,9900) =    268,739 ns/op
  p(99,9990) =   7392,000 ns/op
  p(99,9999) =   7392,000 ns/op
         max =   7392,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 1000000)

# Run progress: 68,75% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 431489024 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 431489024, 431489024, 431489024, 431489024, 431489024, 431489024, 431489024, 431489024 ns/op
# Warmup Iteration   2: n = 4898, mean = 120 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 36, 266, 498, 7703, 221440, 221440 ns/op
# Warmup Iteration   3: n = 2514, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 37, 44, 81, 7112, 7112 ns/op
# Warmup Iteration   4: n = 2549, mean = 33 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 103, 105, 105 ns/op
# Warmup Iteration   5: n = 2471, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 93, 150, 150 ns/op
# Warmup Iteration   6: n = 2493, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 96, 108, 108 ns/op
# Warmup Iteration   7: n = 2488, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 56, 98, 129, 129 ns/op
# Warmup Iteration   8: n = 2493, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 96, 230, 230 ns/op
Iteration   1: n = 2466, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 82, 89, 89 ns/op
Iteration   2: n = 2484, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 34, 36, 41, 43, 92, 121, 121 ns/op
Iteration   3: n = 2518, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 74, 137, 264, 264 ns/op
Iteration   4: n = 2476, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 40, 109, 251, 251 ns/op
Iteration   5: n = 2438, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 106, 7192, 7192 ns/op
Iteration   6: n = 2510, mean = 33 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 72, 82, 82 ns/op
Iteration   7: n = 2497, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 41, 42, 87, 89, 89 ns/op
Iteration   8: n = 2488, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 91, 98, 98 ns/op
Iteration   9: n = 2446, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 4034, 7208, 7208 ns/op
Iteration  10: n = 2484, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 96, 134, 134 ns/op
Iteration  11: n = 2276, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 39, 80, 104, 206, 267, 267 ns/op
Iteration  12: n = 2431, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 63, 118, 297, 7272, 7272 ns/op
Iteration  13: n = 2410, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 86, 92, 92 ns/op
Iteration  14: n = 2486, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 98, 100, 100 ns/op
Iteration  15: n = 2505, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 76, 84, 84 ns/op
Iteration  16: n = 2514, mean = 33 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 38, 65, 84, 84 ns/op
Iteration  17: n = 2507, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 274, 551, 551 ns/op
Iteration  18: n = 2492, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 38, 112, 129, 129 ns/op
Iteration  19: n = 2453, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 75, 86, 99, 99 ns/op
Iteration  20: n = 2457, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 37, 75, 126, 278, 278 ns/op


Result: 34,982 ±(99.9%) 0,964 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 34,982, 7272,000), stdev = 65,038
  Confidence interval (99.9%): [34,018, 35,945]
  Samples, N = 49338
        mean =     34,982 ±(99.9%) 0,964 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     34,000 ns/op
  p(90,0000) =     36,000 ns/op
  p(95,0000) =     37,000 ns/op
  p(99,0000) =     75,000 ns/op
  p(99,9000) =    119,661 ns/op
  p(99,9900) =    986,797 ns/op
  p(99,9990) =   7272,000 ns/op
  p(99,9999) =   7272,000 ns/op
         max =   7272,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 1000000000)

# Run progress: 70,83% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 428343296 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 428343296, 428343296, 428343296, 428343296, 428343296, 428343296, 428343296, 428343296 ns/op
# Warmup Iteration   2: n = 5068, mean = 139 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 32, 39, 394, 671, 7741, 268288, 268288 ns/op
# Warmup Iteration   3: n = 2512, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 33, 35, 36, 37, 176, 7272, 7272 ns/op
# Warmup Iteration   4: n = 2558, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 36, 37, 140, 229, 229 ns/op
# Warmup Iteration   5: n = 2521, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 36, 48, 59, 85, 85 ns/op
# Warmup Iteration   6: n = 2509, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 39, 40, 45, 62, 62 ns/op
# Warmup Iteration   7: n = 2448, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 40, 75, 89, 97, 97 ns/op
# Warmup Iteration   8: n = 2477, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 36, 75, 121, 8352, 8352 ns/op
Iteration   1: n = 2483, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 35, 36, 75, 102, 152, 152 ns/op
Iteration   2: n = 2492, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 35, 36, 40, 110, 7152, 7152 ns/op
Iteration   3: n = 2511, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 39, 40, 74, 2156, 2156 ns/op
Iteration   4: n = 2492, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 36, 38, 40, 134, 327, 327 ns/op
Iteration   5: n = 2465, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 37, 77, 103, 229, 229 ns/op
Iteration   6: n = 2506, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 34, 36, 36, 81, 127, 159, 159 ns/op
Iteration   7: n = 2313, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 41, 74, 141, 242, 242 ns/op
Iteration   8: n = 2390, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 37, 39, 89, 107, 107 ns/op
Iteration   9: n = 2333, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 38, 82, 98, 125, 125 ns/op
Iteration  10: n = 2280, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 39, 39, 83, 180, 250, 250 ns/op
Iteration  11: n = 2303, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 94, 265, 511, 511 ns/op
Iteration  12: n = 2368, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 37, 38, 39, 82, 85, 94, 94 ns/op
Iteration  13: n = 2412, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29, 36, 38, 38, 40, 56, 87, 87 ns/op
Iteration  14: n = 2347, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 28, 38, 39, 39, 86, 123, 147, 147 ns/op
Iteration  15: n = 2397, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 37, 38, 40, 176, 7160, 7160 ns/op
Iteration  16: n = 2363, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 35, 38, 40, 45, 105, 128, 128 ns/op
Iteration  17: n = 2330, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 77, 142, 183, 183 ns/op
Iteration  18: n = 2277, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 37, 38, 39, 83, 103, 111, 111 ns/op
Iteration  19: n = 2312, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 38, 41, 205, 7336, 7336 ns/op
Iteration  20: n = 2323, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 39, 42, 148, 221, 221 ns/op


Result: 36,427 ±(99.9%) 0,878 ns/op [Average]
  Statistics: (min, avg, max) = (26,000, 36,427, 7336,000), stdev = 58,263
  Confidence interval (99.9%): [35,549, 37,305]
  Samples, N = 47697
        mean =     36,427 ±(99.9%) 0,878 ns/op
         min =     26,000 ns/op
  p( 0,0000) =     26,000 ns/op
  p(50,0000) =     36,000 ns/op
  p(90,0000) =     38,000 ns/op
  p(95,0000) =     39,000 ns/op
  p(99,0000) =     75,000 ns/op
  p(99,9000) =    124,000 ns/op
  p(99,9900) =    889,679 ns/op
  p(99,9990) =   7336,000 ns/op
  p(99,9999) =   7336,000 ns/op
         max =   7336,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJafamaLogQuick
# Parameters: (x = 1000000000000)

# Run progress: 72,92% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 442499072 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 442499072, 442499072, 442499072, 442499072, 442499072, 442499072, 442499072, 442499072 ns/op
# Warmup Iteration   2: n = 4693, mean = 117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 34, 37, 241, 507, 7434, 242688, 242688 ns/op
# Warmup Iteration   3: n = 2490, mean = 34 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 36, 37, 38, 94, 100, 100 ns/op
# Warmup Iteration   4: n = 2401, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 37, 41, 111, 232, 260, 260 ns/op
# Warmup Iteration   5: n = 2388, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 27, 36, 38, 82, 117, 215, 229, 229 ns/op
# Warmup Iteration   6: n = 2425, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 80, 185, 245, 245 ns/op
# Warmup Iteration   7: n = 2425, mean = 35 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 82, 123, 243, 243 ns/op
# Warmup Iteration   8: n = 2403, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 72, 107, 213, 1270, 1270 ns/op
Iteration   1: n = 2408, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 36, 37, 52, 98, 182, 218, 218 ns/op
Iteration   2: n = 2394, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 38, 96, 175, 232, 232 ns/op
Iteration   3: n = 2422, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 43, 121, 313, 7192, 7192 ns/op
Iteration   4: n = 2422, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 84, 207, 307, 307 ns/op
Iteration   5: n = 2385, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 80, 125, 278, 7240, 7240 ns/op
Iteration   6: n = 2426, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 39, 105, 219, 250, 250 ns/op
Iteration   7: n = 2417, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 80, 115, 231, 265, 265 ns/op
Iteration   8: n = 2413, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 54, 108, 221, 225, 225 ns/op
Iteration   9: n = 2322, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 38, 81, 122, 209, 221, 221 ns/op
Iteration  10: n = 1713, mean = 40 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 38, 86, 137, 335, 386, 386 ns/op
Iteration  11: n = 2426, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 38, 90, 156, 218, 218 ns/op
Iteration  12: n = 2411, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 36, 37, 80, 105, 249, 7216, 7216 ns/op
Iteration  13: n = 2427, mean = 38 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 49, 110, 164, 247, 247 ns/op
Iteration  14: n = 2429, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 53, 96, 150, 245, 245 ns/op
Iteration  15: n = 2427, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25, 35, 37, 59, 103, 139, 144, 144 ns/op
Iteration  16: n = 2421, mean = 37 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 39, 96, 173, 452, 452 ns/op
Iteration  17: n = 2430, mean = 39 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 53, 141, 295, 334, 334 ns/op
Iteration  18: n = 2448, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 48, 103, 227, 7424, 7424 ns/op
Iteration  19: n = 2429, mean = 36 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 37, 88, 178, 239, 239 ns/op
Iteration  20: n = 2402, mean = 41 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26, 35, 37, 71, 117, 214, 7152, 7152 ns/op


Result: 38,374 ±(99.9%) 1,138 ns/op [Average]
  Statistics: (min, avg, max) = (25,000, 38,374, 7424,000), stdev = 75,457
  Confidence interval (99.9%): [37,235, 39,512]
  Samples, N = 47572
        mean =     38,374 ±(99.9%) 1,138 ns/op
         min =     25,000 ns/op
  p( 0,0000) =     25,000 ns/op
  p(50,0000) =     35,000 ns/op
  p(90,0000) =     37,000 ns/op
  p(95,0000) =     44,000 ns/op
  p(99,0000) =    105,000 ns/op
  p(99,9000) =    211,427 ns/op
  p(99,9900) =   7161,708 ns/op
  p(99,9990) =   7424,000 ns/op
  p(99,9999) =   7424,000 ns/op
         max =   7424,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 0.000000000001)

# Run progress: 75,00% complete, ETA 00:01:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 7220, mean = 180 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 59, 128, 923, 11221, 591872, 591872 ns/op
# Warmup Iteration   2: n = 4018, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 59, 103, 193, 300, 300 ns/op
# Warmup Iteration   3: n = 2026, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 115, 182, 245, 245 ns/op
# Warmup Iteration   4: n = 2003, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 55, 61, 94, 124, 296, 467, 467 ns/op
# Warmup Iteration   5: n = 2018, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 91, 121, 225, 225 ns/op
# Warmup Iteration   6: n = 1998, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 60, 61, 87, 206, 320, 320 ns/op
# Warmup Iteration   7: n = 2018, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 64, 121, 160, 160 ns/op
# Warmup Iteration   8: n = 2003, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 61, 131, 2304, 2304 ns/op
Iteration   1: n = 2003, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 61, 118, 272, 272 ns/op
Iteration   2: n = 2000, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 60, 61, 96, 96, 96 ns/op
Iteration   3: n = 2017, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 61, 61, 95, 309, 309 ns/op
Iteration   4: n = 2007, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 68, 107, 114, 114 ns/op
Iteration   5: n = 2016, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 120, 273, 7240, 7240 ns/op
Iteration   6: n = 2056, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 111, 141, 141 ns/op
Iteration   7: n = 2037, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 108, 192, 239, 239 ns/op
Iteration   8: n = 2045, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 98, 162, 196, 196 ns/op
Iteration   9: n = 1997, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 61, 96, 145, 356, 7376, 7376 ns/op
Iteration  10: n = 2002, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 94, 131, 262, 343, 343 ns/op
Iteration  11: n = 2063, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 114, 118, 118 ns/op
Iteration  12: n = 2063, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 127, 146, 146 ns/op
Iteration  13: n = 2071, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 99, 108, 108 ns/op
Iteration  14: n = 2023, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 145, 170, 170 ns/op
Iteration  15: n = 2005, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 122, 123, 123 ns/op
Iteration  16: n = 2058, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 139, 153, 153 ns/op
Iteration  17: n = 2050, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 95, 98, 98 ns/op
Iteration  18: n = 2015, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 84, 190, 7272, 7272 ns/op
Iteration  19: n = 1981, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 120, 327, 7208, 7208 ns/op
Iteration  20: n = 2059, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 224, 7200, 7200 ns/op


Result: 56,027 ±(99.9%) 1,316 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 56,027, 7376,000), stdev = 80,550
  Confidence interval (99.9%): [54,711, 57,343]
  Samples, N = 40568
        mean =     56,027 ±(99.9%) 1,316 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =    102,000 ns/op
  p(99,9000) =    168,862 ns/op
  p(99,9900) =   7207,545 ns/op
  p(99,9990) =   7376,000 ns/op
  p(99,9999) =   7376,000 ns/op
         max =   7376,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 0.000000001)

# Run progress: 77,08% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: n = 7585, mean = 68 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 50, 58, 58, 209, 7221, 21056, 21056 ns/op
# Warmup Iteration   2: n = 4206, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 57, 58, 59, 104, 134, 134 ns/op
# Warmup Iteration   3: n = 2036, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 127, 142, 142 ns/op
# Warmup Iteration   4: n = 2017, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 96, 381, 570, 570 ns/op
# Warmup Iteration   5: n = 2031, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 99, 111, 111 ns/op
# Warmup Iteration   6: n = 2043, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 97, 122, 7832, 7832 ns/op
# Warmup Iteration   7: n = 1977, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 81, 98, 110, 110 ns/op
# Warmup Iteration   8: n = 1950, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 120, 123, 123, 123 ns/op
Iteration   1: n = 2031, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 73, 195, 7080, 7080 ns/op
Iteration   2: n = 2021, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 95, 191, 253, 253 ns/op
Iteration   3: n = 1996, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 64, 132, 7208, 7208 ns/op
Iteration   4: n = 1991, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 66, 90, 98, 98 ns/op
Iteration   5: n = 2082, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 90, 122, 122, 122 ns/op
Iteration   6: n = 2058, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 59, 61, 93, 118, 118 ns/op
Iteration   7: n = 2030, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 61, 101, 106, 106 ns/op
Iteration   8: n = 2015, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 68, 158, 7336, 7336 ns/op
Iteration   9: n = 2016, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 62, 132, 159, 159 ns/op
Iteration  10: n = 2050, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 63, 120, 233, 233 ns/op
Iteration  11: n = 1941, mean = 74 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 87, 119, 2160, 31776, 31776 ns/op
Iteration  12: n = 1917, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 94, 134, 246, 393, 393 ns/op
Iteration  13: n = 1942, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 57, 60, 86, 116, 188, 227, 227 ns/op
Iteration  14: n = 1978, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 55, 59, 60, 61, 95, 102, 102 ns/op
Iteration  15: n = 1989, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 83, 114, 224, 224 ns/op
Iteration  16: n = 1973, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 60, 97, 1158, 7432, 7432 ns/op
Iteration  17: n = 1987, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 60, 93, 229, 382, 382 ns/op
Iteration  18: n = 1971, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 55, 60, 60, 90, 144, 198, 198 ns/op
Iteration  19: n = 1969, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 105, 221, 289, 289 ns/op
Iteration  20: n = 1968, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 108, 230, 353, 353 ns/op


Result: 56,796 ±(99.9%) 2,877 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 56,796, 31776,000), stdev = 174,674
  Confidence interval (99.9%): [53,919, 59,672]
  Samples, N = 39925
        mean =     56,796 ±(99.9%) 2,877 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =     97,000 ns/op
  p(99,9000) =    168,148 ns/op
  p(99,9900) =   7208,947 ns/op
  p(99,9990) =  31776,000 ns/op
  p(99,9999) =  31776,000 ns/op
         max =  31776,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 0.000001)

# Run progress: 79,17% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 7217, mean = 77 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 58, 64, 243, 7367, 31104, 31104 ns/op
# Warmup Iteration   2: n = 4119, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 54, 57, 58, 104, 186, 258, 258 ns/op
# Warmup Iteration   3: n = 2082, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 252, 344, 344 ns/op
# Warmup Iteration   4: n = 1966, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 120, 129, 137, 137 ns/op
# Warmup Iteration   5: n = 2012, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 119, 122, 7216, 7216 ns/op
# Warmup Iteration   6: n = 2095, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 119, 123, 7408, 7408 ns/op
# Warmup Iteration   7: n = 2114, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 61, 113, 135, 135 ns/op
# Warmup Iteration   8: n = 2007, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 60, 60, 122, 187, 190, 190 ns/op
Iteration   1: n = 2065, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 100, 114, 114 ns/op
Iteration   2: n = 2006, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 66, 155, 7104, 7104 ns/op
Iteration   3: n = 2029, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 65, 122, 135, 135 ns/op
Iteration   4: n = 2044, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 117, 155, 325, 325 ns/op
Iteration   5: n = 1963, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 66, 152, 312, 861, 861 ns/op
Iteration   6: n = 1964, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 66, 137, 220, 282, 282 ns/op
Iteration   7: n = 2070, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 65, 74, 201, 7120, 7120 ns/op
Iteration   8: n = 2008, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 61, 117, 173, 273, 273 ns/op
Iteration   9: n = 1971, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 83, 98, 146, 185, 185 ns/op
Iteration  10: n = 1999, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 80, 105, 161, 268, 317, 317 ns/op
Iteration  11: n = 2011, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 86, 124, 210, 303, 303 ns/op
Iteration  12: n = 2061, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 70, 106, 113, 113 ns/op
Iteration  13: n = 2058, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 63, 117, 7216, 7216 ns/op
Iteration  14: n = 2067, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 59, 60, 61, 961, 7200, 7200 ns/op
Iteration  15: n = 1974, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 114, 296, 7064, 7064 ns/op
Iteration  16: n = 2033, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 116, 124, 139, 139 ns/op
Iteration  17: n = 2069, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 120, 138, 7232, 7232 ns/op
Iteration  18: n = 2050, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 122, 132, 132 ns/op
Iteration  19: n = 2059, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 181, 7392, 7392 ns/op
Iteration  20: n = 2073, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 90, 159, 187, 187 ns/op


Result: 56,655 ±(99.9%) 1,544 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 56,655, 7392,000), stdev = 94,505
  Confidence interval (99.9%): [55,111, 58,199]
  Samples, N = 40574
        mean =     56,655 ±(99.9%) 1,544 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     61,000 ns/op
  p(99,0000) =    111,000 ns/op
  p(99,9000) =    183,000 ns/op
  p(99,9900) =   7195,400 ns/op
  p(99,9990) =   7392,000 ns/op
  p(99,9999) =   7392,000 ns/op
         max =   7392,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 0.001)

# Run progress: 81,25% complete, ETA 00:00:55
# Fork: 1 of 1
# Warmup Iteration   1: n = 7564, mean = 89 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 50, 58, 63, 341, 8434, 28960, 28960 ns/op
# Warmup Iteration   2: n = 4063, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 58, 59, 73, 106, 7240, 7240 ns/op
# Warmup Iteration   3: n = 3935, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 78, 83, 88, 88 ns/op
# Warmup Iteration   4: n = 3871, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 61, 105, 9904, 9904 ns/op
# Warmup Iteration   5: n = 3931, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 122, 177, 177 ns/op
# Warmup Iteration   6: n = 2018, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 64, 108, 7128, 7128 ns/op
# Warmup Iteration   7: n = 2066, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 61, 122, 7080, 7080 ns/op
# Warmup Iteration   8: n = 2063, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 61, 122, 127, 127 ns/op
Iteration   1: n = 2055, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 96, 115, 115 ns/op
Iteration   2: n = 1987, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 69, 85, 107, 107 ns/op
Iteration   3: n = 2056, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 69, 98, 98 ns/op
Iteration   4: n = 2047, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 71, 97, 97 ns/op
Iteration   5: n = 2010, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 60, 61, 120, 134, 446, 446 ns/op
Iteration   6: n = 2021, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 119, 176, 7584, 7584 ns/op
Iteration   7: n = 2030, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 69, 196, 251, 251 ns/op
Iteration   8: n = 2061, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 61, 77, 105, 115, 115 ns/op
Iteration   9: n = 2042, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 99, 223, 2776, 2776 ns/op
Iteration  10: n = 1929, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 90, 108, 170, 1122, 2720, 2720 ns/op
Iteration  11: n = 1907, mean = 157 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 91, 112, 213, 22565, 170496, 170496 ns/op
Iteration  12: n = 1913, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 98, 164, 325, 327, 327 ns/op
Iteration  13: n = 1959, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 127, 780, 7336, 7336 ns/op
Iteration  14: n = 1951, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 120, 125, 189, 189 ns/op
Iteration  15: n = 2000, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 98, 103, 103 ns/op
Iteration  16: n = 1964, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 119, 374, 7272, 7272 ns/op
Iteration  17: n = 2015, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 91, 98, 98 ns/op
Iteration  18: n = 2053, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 60, 64, 65, 65 ns/op
Iteration  19: n = 1984, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 117, 338, 7384, 7384 ns/op
Iteration  20: n = 1979, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 60, 60, 119, 122, 122, 122 ns/op


Result: 60,862 ±(99.9%) 14,106 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 60,862, 170496,000), stdev = 856,886
  Confidence interval (99.9%): [46,757, 74,968]
  Samples, N = 39963
        mean =     60,862 ±(99.9%) 14,106 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =    117,000 ns/op
  p(99,9000) =    215,072 ns/op
  p(99,9900) =   7384,691 ns/op
  p(99,9990) = 170496,000 ns/op
  p(99,9999) = 170496,000 ns/op
         max = 170496,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 0.1)

# Run progress: 83,33% complete, ETA 00:00:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 7870, mean = 71 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 55, 58, 228, 7316, 19840, 19840 ns/op
# Warmup Iteration   2: n = 4141, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 50, 56, 58, 114, 120, 7224, 7224 ns/op
# Warmup Iteration   3: n = 3923, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 118, 120, 7200, 7200 ns/op
# Warmup Iteration   4: n = 3996, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 68, 68, 111, 111 ns/op
# Warmup Iteration   5: n = 3870, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 60, 101, 7296, 7296 ns/op
# Warmup Iteration   6: n = 2030, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 64, 72, 7232, 7232 ns/op
# Warmup Iteration   7: n = 2020, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 119, 120, 127, 127 ns/op
# Warmup Iteration   8: n = 2023, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 85, 120, 7288, 7288 ns/op
Iteration   1: n = 2013, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 74, 120, 120, 120 ns/op
Iteration   2: n = 2044, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 59, 62, 65, 241, 2480, 2480 ns/op
Iteration   3: n = 1992, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 60, 180, 7352, 7352 ns/op
Iteration   4: n = 2012, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 83, 157, 7280, 7280 ns/op
Iteration   5: n = 2061, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 60, 60, 63, 90, 7224, 7224 ns/op
Iteration   6: n = 1956, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 119, 120, 122, 122 ns/op
Iteration   7: n = 2033, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 60, 97, 101, 101 ns/op
Iteration   8: n = 1976, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 63, 285, 7296, 7296 ns/op
Iteration   9: n = 1972, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 117, 121, 142, 142 ns/op
Iteration  10: n = 2026, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 60, 120, 7304, 7304 ns/op
Iteration  11: n = 1978, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 119, 164, 171, 171 ns/op
Iteration  12: n = 2019, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 61, 115, 260, 301, 301 ns/op
Iteration  13: n = 2033, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 104, 193, 221, 221 ns/op
Iteration  14: n = 1961, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 61, 65, 236, 345, 345 ns/op
Iteration  15: n = 2020, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 60, 61, 71, 71 ns/op
Iteration  16: n = 2053, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 61, 120, 142, 142 ns/op
Iteration  17: n = 1980, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 59, 60, 120, 123, 161, 161 ns/op
Iteration  18: n = 2058, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 60, 247, 777, 777 ns/op
Iteration  19: n = 2024, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 60, 91, 100, 100 ns/op
Iteration  20: n = 1917, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 120, 132, 164, 164 ns/op


Result: 55,406 ±(99.9%) 1,350 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 55,406, 7352,000), stdev = 82,155
  Confidence interval (99.9%): [54,057, 56,756]
  Samples, N = 40128
        mean =     55,406 ±(99.9%) 1,350 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     52,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =     94,710 ns/op
  p(99,9000) =    134,355 ns/op
  p(99,9900) =   7279,278 ns/op
  p(99,9990) =   7352,000 ns/op
  p(99,9999) =   7352,000 ns/op
         max =   7352,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1)

# Run progress: 85,42% complete, ETA 00:00:43
# Fork: 1 of 1
# Warmup Iteration   1: n = 5622, mean = 97 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 145, 478, 7694, 38400, 38400 ns/op
# Warmup Iteration   2: n = 3067, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 82, 114, 7232, 7232 ns/op
# Warmup Iteration   3: n = 2915, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 67, 106, 7096, 7096 ns/op
# Warmup Iteration   4: n = 2822, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 66, 68, 70, 141, 161, 161 ns/op
# Warmup Iteration   5: n = 2910, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 105, 157, 7224, 7224 ns/op
# Warmup Iteration   6: n = 2960, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 66, 69, 98, 98 ns/op
# Warmup Iteration   7: n = 2885, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 134, 136, 137, 137 ns/op
# Warmup Iteration   8: n = 2867, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 64, 65, 134, 135, 145, 145 ns/op
Iteration   1: n = 2904, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 134, 139, 7696, 7696 ns/op
Iteration   2: n = 2931, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 134, 745, 7240, 7240 ns/op
Iteration   3: n = 2890, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 70, 73, 144, 477, 477 ns/op
Iteration   4: n = 2926, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 64, 65, 92, 809, 7256, 7256 ns/op
Iteration   5: n = 2812, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 53, 60, 65, 66, 135, 184, 308, 308 ns/op
Iteration   6: n = 2958, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 65, 66, 79, 135, 137, 137 ns/op
Iteration   7: n = 2908, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 64, 65, 134, 135, 139, 139 ns/op
Iteration   8: n = 2944, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 76, 80, 141, 194, 194 ns/op
Iteration   9: n = 2958, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 59, 65, 65, 128, 441, 7336, 7336 ns/op
Iteration  10: n = 2801, mean = 66 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 67, 99, 151, 282, 482, 482 ns/op
Iteration  11: n = 2748, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 62, 66, 89, 126, 282, 293, 293 ns/op
Iteration  12: n = 2926, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 116, 257, 262, 262 ns/op
Iteration  13: n = 2973, mean = 65 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 65, 67, 438, 7856, 7856 ns/op
Iteration  14: n = 2961, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 67, 109, 124, 124 ns/op
Iteration  15: n = 2857, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 134, 273, 351, 351 ns/op
Iteration  16: n = 2861, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 66, 67, 120, 267, 1032, 1032 ns/op
Iteration  17: n = 2825, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 103, 214, 7328, 7328 ns/op
Iteration  18: n = 2908, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 132, 218, 7240, 7240 ns/op
Iteration  19: n = 2912, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 52, 60, 65, 66, 132, 147, 249, 249 ns/op
Iteration  20: n = 2882, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54, 60, 65, 66, 72, 135, 1898, 1898 ns/op


Result: 62,716 ±(99.9%) 1,378 ns/op [Average]
  Statistics: (min, avg, max) = (52,000, 62,716, 7856,000), stdev = 100,753
  Confidence interval (99.9%): [61,338, 64,094]
  Samples, N = 57885
        mean =     62,716 ±(99.9%) 1,378 ns/op
         min =     52,000 ns/op
  p( 0,0000) =     52,000 ns/op
  p(50,0000) =     60,000 ns/op
  p(90,0000) =     65,000 ns/op
  p(95,0000) =     66,000 ns/op
  p(99,0000) =    129,000 ns/op
  p(99,9000) =    207,228 ns/op
  p(99,9900) =   7243,382 ns/op
  p(99,9990) =   7856,000 ns/op
  p(99,9999) =   7856,000 ns/op
         max =   7856,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 10)

# Run progress: 87,50% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 7694, mean = 77 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 58, 61, 510, 7249, 23072, 23072 ns/op
# Warmup Iteration   2: n = 4101, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 51, 57, 58, 60, 119, 7264, 7264 ns/op
# Warmup Iteration   3: n = 2015, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 61, 61, 104, 106, 106 ns/op
# Warmup Iteration   4: n = 2051, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 77, 96, 105, 105 ns/op
# Warmup Iteration   5: n = 2059, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 116, 7792, 7792 ns/op
# Warmup Iteration   6: n = 1978, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 61, 63, 114, 155, 220, 220 ns/op
# Warmup Iteration   7: n = 2036, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 61, 77, 96, 96 ns/op
# Warmup Iteration   8: n = 2026, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 67, 129, 137, 137 ns/op
Iteration   1: n = 2018, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 64, 70, 99, 7248, 7248 ns/op
Iteration   2: n = 2044, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 64, 68, 68 ns/op
Iteration   3: n = 2045, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 61, 63, 66, 90, 105, 105 ns/op
Iteration   4: n = 2036, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 61, 63, 66, 91, 108, 108 ns/op
Iteration   5: n = 1980, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 122, 263, 7160, 7160 ns/op
Iteration   6: n = 2003, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 122, 123, 7144, 7144 ns/op
Iteration   7: n = 2060, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 61, 6780, 7224, 7224 ns/op
Iteration   8: n = 2007, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 61, 61, 109, 122, 122 ns/op
Iteration   9: n = 2004, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 117, 140, 147, 147 ns/op
Iteration  10: n = 2016, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 63, 7079, 10976, 10976 ns/op
Iteration  11: n = 1983, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 61, 123, 238, 263, 263 ns/op
Iteration  12: n = 1960, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50, 57, 61, 98, 146, 211, 327, 327 ns/op
Iteration  13: n = 1993, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 127, 291, 311, 311 ns/op
Iteration  14: n = 2020, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 76, 109, 109 ns/op
Iteration  15: n = 2030, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 60, 120, 7256, 7256 ns/op
Iteration  16: n = 2001, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 63, 146, 184, 184 ns/op
Iteration  17: n = 1994, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 59, 60, 88, 130, 1092, 1092 ns/op
Iteration  18: n = 2037, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 60, 86, 88, 88 ns/op
Iteration  19: n = 2039, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 60, 60, 90, 92, 92 ns/op
Iteration  20: n = 2028, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 61, 86, 7360, 7360 ns/op


Result: 56,621 ±(99.9%) 1,888 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 56,621, 10976,000), stdev = 115,164
  Confidence interval (99.9%): [54,734, 58,509]
  Samples, N = 40298
        mean =     56,621 ±(99.9%) 1,888 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     61,000 ns/op
  p(99,0000) =     96,000 ns/op
  p(99,9000) =    164,000 ns/op
  p(99,9900) =   7247,282 ns/op
  p(99,9990) =  10976,000 ns/op
  p(99,9999) =  10976,000 ns/op
         max =  10976,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 100)

# Run progress: 89,58% complete, ETA 00:00:30
# Fork: 1 of 1
# Warmup Iteration   1: n = 7847, mean = 69 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 57, 58, 225, 7356, 22240, 22240 ns/op
# Warmup Iteration   2: n = 4269, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 57, 57, 59, 95, 7080, 7080 ns/op
# Warmup Iteration   3: n = 3985, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 70, 78, 122, 7296, 7296 ns/op
# Warmup Iteration   4: n = 2055, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 108, 8560, 8560 ns/op
# Warmup Iteration   5: n = 2034, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 65, 97, 247, 247 ns/op
# Warmup Iteration   6: n = 2016, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 120, 125, 7984, 7984 ns/op
# Warmup Iteration   7: n = 2016, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 119, 475, 7224, 7224 ns/op
# Warmup Iteration   8: n = 2035, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 59, 60, 97, 122, 123, 123 ns/op
Iteration   1: n = 2020, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 59, 60, 64, 122, 122, 122 ns/op
Iteration   2: n = 2010, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 74, 109, 247, 247 ns/op
Iteration   3: n = 1972, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 133, 160, 160 ns/op
Iteration   4: n = 2042, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 89, 91, 91 ns/op
Iteration   5: n = 2033, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 97, 321, 678, 678 ns/op
Iteration   6: n = 2026, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 123, 130, 130 ns/op
Iteration   7: n = 1983, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 91, 129, 204, 228, 228 ns/op
Iteration   8: n = 2027, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 106, 173, 7424, 7424 ns/op
Iteration   9: n = 1988, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 55, 60, 84, 112, 165, 177, 177 ns/op
Iteration  10: n = 1991, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 61, 100, 137, 220, 283, 283 ns/op
Iteration  11: n = 1977, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 56, 62, 102, 156, 325, 444, 444 ns/op
Iteration  12: n = 1849, mean = 64 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 96, 108, 166, 327, 361, 361 ns/op
Iteration  13: n = 1980, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 61, 102, 175, 295, 417, 417 ns/op
Iteration  14: n = 1999, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 61, 106, 239, 316, 316 ns/op
Iteration  15: n = 2000, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 93, 131, 255, 258, 258 ns/op
Iteration  16: n = 2019, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 108, 7263, 7568, 7568 ns/op
Iteration  17: n = 2029, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 61, 103, 917, 917 ns/op
Iteration  18: n = 2028, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 62, 211, 285, 285 ns/op
Iteration  19: n = 1977, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 60, 78, 134, 241, 241 ns/op
Iteration  20: n = 1982, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 90, 120, 122, 122 ns/op


Result: 57,308 ±(99.9%) 1,085 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 57,308, 7568,000), stdev = 65,894
  Confidence interval (99.9%): [56,223, 58,393]
  Samples, N = 39932
        mean =     57,308 ±(99.9%) 1,085 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     54,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     61,000 ns/op
  p(99,0000) =    118,000 ns/op
  p(99,9000) =    219,067 ns/op
  p(99,9900) =    960,490 ns/op
  p(99,9990) =   7568,000 ns/op
  p(99,9999) =   7568,000 ns/op
         max =   7568,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000)

# Run progress: 91,67% complete, ETA 00:00:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 4202, mean = 81 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 48, 55, 124, 298, 8731, 25248, 25248 ns/op
# Warmup Iteration   2: n = 2267, mean = 49 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 47, 54, 55, 96, 247, 262, 262 ns/op
# Warmup Iteration   3: n = 2161, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 51, 57, 82, 136, 272, 619, 619 ns/op
# Warmup Iteration   4: n = 2304, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 50, 56, 57, 89, 113, 181, 181 ns/op
# Warmup Iteration   5: n = 2221, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 67, 107, 109, 109 ns/op
# Warmup Iteration   6: n = 2232, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 54, 55, 55, 86, 112, 160, 160 ns/op
# Warmup Iteration   7: n = 2288, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 98, 211, 242, 242 ns/op
# Warmup Iteration   8: n = 2200, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 90, 130, 7304, 7304 ns/op
Iteration   1: n = 2259, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 50, 56, 57, 58, 75, 114, 114 ns/op
Iteration   2: n = 2231, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 91, 144, 162, 162 ns/op
Iteration   3: n = 2256, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 58, 145, 7368, 7368 ns/op
Iteration   4: n = 2258, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 66, 5390, 7216, 7216 ns/op
Iteration   5: n = 2208, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 58, 304, 7392, 7392 ns/op
Iteration   6: n = 2158, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 57, 57, 112, 218, 273, 273 ns/op
Iteration   7: n = 2267, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 55, 57, 57, 92, 7120, 7120 ns/op
Iteration   8: n = 2204, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 57, 58, 72, 112, 7272, 7272 ns/op
Iteration   9: n = 2199, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 78, 221, 7040, 7040 ns/op
Iteration  10: n = 2165, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 49, 57, 90, 131, 230, 243, 243 ns/op
Iteration  11: n = 2124, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 53, 57, 97, 142, 340, 346, 346 ns/op
Iteration  12: n = 2214, mean = 52 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 57, 57, 106, 161, 170, 170 ns/op
Iteration  13: n = 2232, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 45, 49, 56, 57, 58, 109, 161, 161 ns/op
Iteration  14: n = 2261, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 55, 57, 59, 65, 100, 100 ns/op
Iteration  15: n = 2266, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 54, 56, 57, 104, 114, 114 ns/op
Iteration  16: n = 2261, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 56, 57, 58, 110, 127, 127 ns/op
Iteration  17: n = 2285, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 56, 57, 57, 123, 7248, 7248 ns/op
Iteration  18: n = 2255, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 54, 56, 57, 1020, 8136, 8136 ns/op
Iteration  19: n = 2255, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 54, 56, 57, 65, 100, 100 ns/op
Iteration  20: n = 2244, mean = 50 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 44, 49, 56, 57, 57, 71, 111, 111 ns/op


Result: 52,617 ±(99.9%) 1,621 ns/op [Average]
  Statistics: (min, avg, max) = (44,000, 52,617, 8136,000), stdev = 104,038
  Confidence interval (99.9%): [50,996, 54,238]
  Samples, N = 44602
        mean =     52,617 ±(99.9%) 1,621 ns/op
         min =     44,000 ns/op
  p( 0,0000) =     44,000 ns/op
  p(50,0000) =     49,000 ns/op
  p(90,0000) =     56,000 ns/op
  p(95,0000) =     57,000 ns/op
  p(99,0000) =     93,000 ns/op
  p(99,9000) =    160,000 ns/op
  p(99,9900) =   7260,953 ns/op
  p(99,9990) =   8136,000 ns/op
  p(99,9999) =   8136,000 ns/op
         max =   8136,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000000)

# Run progress: 93,75% complete, ETA 00:00:18
# Fork: 1 of 1
# Warmup Iteration   1: n = 7550, mean = 107 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 63, 491, 8958, 93568, 93568 ns/op
# Warmup Iteration   2: n = 4099, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 51, 58, 58, 93, 150, 347, 347 ns/op
# Warmup Iteration   3: n = 2051, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 60, 136, 7264, 7264 ns/op
# Warmup Iteration   4: n = 2038, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 59, 60, 66, 120, 137, 137 ns/op
# Warmup Iteration   5: n = 2018, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 59, 60, 65, 116, 135, 135 ns/op
# Warmup Iteration   6: n = 2029, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 59, 60, 61, 120, 127, 127 ns/op
# Warmup Iteration   7: n = 2015, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 53, 60, 60, 84, 163, 7248, 7248 ns/op
# Warmup Iteration   8: n = 2030, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 60, 60, 61, 104, 112, 112 ns/op
Iteration   1: n = 2020, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 104, 198, 310, 310 ns/op
Iteration   2: n = 2042, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 65, 122, 141, 141 ns/op
Iteration   3: n = 2056, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 63, 65, 145, 6096, 6096 ns/op
Iteration   4: n = 2023, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 119, 120, 7112, 7112 ns/op
Iteration   5: n = 2030, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 60, 110, 7208, 7208 ns/op
Iteration   6: n = 2048, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 117, 120, 120, 120 ns/op
Iteration   7: n = 2049, mean = 61 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 116, 6704, 7360, 7360 ns/op
Iteration   8: n = 2049, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 61, 65, 114, 232, 232 ns/op
Iteration   9: n = 2032, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 120, 122, 123, 123 ns/op
Iteration  10: n = 2006, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 55, 60, 95, 121, 228, 316, 316 ns/op
Iteration  11: n = 2042, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 95, 174, 324, 324 ns/op
Iteration  12: n = 1996, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 63, 119, 122, 135, 135 ns/op
Iteration  13: n = 2034, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 119, 153, 212, 212 ns/op
Iteration  14: n = 2052, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 60, 99, 240, 443, 443 ns/op
Iteration  15: n = 2040, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 60, 60, 81, 109, 116, 116 ns/op
Iteration  16: n = 2060, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 60, 163, 1614, 1614 ns/op
Iteration  17: n = 2043, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 56, 59, 116, 129, 147, 147 ns/op
Iteration  18: n = 2042, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 60, 145, 7192, 7192 ns/op
Iteration  19: n = 2005, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 59, 73, 119, 129, 149, 149 ns/op
Iteration  20: n = 2050, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 57, 60, 115, 129, 7112, 7112 ns/op


Result: 55,363 ±(99.9%) 1,503 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 55,363, 7360,000), stdev = 92,180
  Confidence interval (99.9%): [53,859, 56,866]
  Samples, N = 40719
        mean =     55,363 ±(99.9%) 1,503 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     52,000 ns/op
  p(90,0000) =     59,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =    101,000 ns/op
  p(99,9000) =    148,000 ns/op
  p(99,9900) =   7112,000 ns/op
  p(99,9990) =   7360,000 ns/op
  p(99,9999) =   7360,000 ns/op
         max =   7360,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000000000)

# Run progress: 95,83% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 7670, mean = 85 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 56, 60, 474, 7755, 40704, 40704 ns/op
# Warmup Iteration   2: n = 4150, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 46, 50, 57, 58, 79, 92, 7040, 7040 ns/op
# Warmup Iteration   3: n = 2026, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 60, 60, 118, 125, 7232, 7232 ns/op
# Warmup Iteration   4: n = 2022, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 78, 123, 148, 148 ns/op
# Warmup Iteration   5: n = 2061, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 58, 60, 61, 260, 286, 286 ns/op
# Warmup Iteration   6: n = 2012, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 120, 137, 139, 139 ns/op
# Warmup Iteration   7: n = 2056, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 57, 59, 65, 122, 137, 137 ns/op
# Warmup Iteration   8: n = 2059, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 61, 90, 93, 93 ns/op
Iteration   1: n = 2045, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 119, 199, 7720, 7720 ns/op
Iteration   2: n = 2044, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 70, 114, 250, 250 ns/op
Iteration   3: n = 2015, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 119, 275, 7128, 7128 ns/op
Iteration   4: n = 2023, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 64, 106, 222, 222 ns/op
Iteration   5: n = 1991, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 68, 89, 179, 7136, 7136 ns/op
Iteration   6: n = 2036, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 103, 122, 125, 125 ns/op
Iteration   7: n = 2046, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 66, 321, 368, 368 ns/op
Iteration   8: n = 2022, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 83, 102, 104, 104 ns/op
Iteration   9: n = 1971, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 60, 60, 120, 146, 284, 284 ns/op
Iteration  10: n = 1993, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 61, 107, 179, 231, 231 ns/op
Iteration  11: n = 1984, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 94, 128, 475, 7392, 7392 ns/op
Iteration  12: n = 2007, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 101, 179, 197, 197 ns/op
Iteration  13: n = 2015, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 98, 167, 195, 195 ns/op
Iteration  14: n = 1968, mean = 62 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 79, 104, 552, 12016, 12016 ns/op
Iteration  15: n = 1985, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 91, 319, 7208, 7208 ns/op
Iteration  16: n = 2006, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 62, 181, 183, 183 ns/op
Iteration  17: n = 2023, mean = 59 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 52, 59, 60, 120, 275, 7240, 7240 ns/op
Iteration  18: n = 2078, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 61, 209, 224, 224 ns/op
Iteration  19: n = 2061, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 61, 99, 121, 121 ns/op
Iteration  20: n = 2058, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 53, 58, 60, 61, 187, 239, 239 ns/op


Result: 56,226 ±(99.9%) 1,752 ns/op [Average]
  Statistics: (min, avg, max) = (47,000, 56,226, 12016,000), stdev = 106,995
  Confidence interval (99.9%): [54,473, 57,978]
  Samples, N = 40371
        mean =     56,226 ±(99.9%) 1,752 ns/op
         min =     47,000 ns/op
  p( 0,0000) =     47,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     60,000 ns/op
  p(99,0000) =    100,000 ns/op
  p(99,9000) =    178,628 ns/op
  p(99,9900) =   7238,810 ns/op
  p(99,9990) =  12016,000 ns/op
  p(99,9999) =  12016,000 ns/op
         max =  12016,000 ns/op


# JMH 1.5.2 (released 15 days ago)
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 8 iterations, 200 ms each
# Measurement: 20 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: fr.soat.MyBenchmark.benchmarkLogarithmJdk
# Parameters: (x = 1000000000000)

# Run progress: 97,92% complete, ETA 00:00:06
# Fork: 1 of 1
# Warmup Iteration   1: n = 7851, mean = 82 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 50, 57, 62, 407, 7622, 29376, 29376 ns/op
# Warmup Iteration   2: n = 4275, mean = 51 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 47, 50, 55, 57, 59, 123, 416, 416 ns/op
# Warmup Iteration   3: n = 2022, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 78, 122, 123, 123 ns/op
# Warmup Iteration   4: n = 2068, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 61, 89, 103, 103 ns/op
# Warmup Iteration   5: n = 2038, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 61, 183, 7248, 7248 ns/op
# Warmup Iteration   6: n = 2028, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 63, 116, 142, 142 ns/op
# Warmup Iteration   7: n = 2014, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 120, 122, 123, 123 ns/op
# Warmup Iteration   8: n = 2012, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 120, 123, 7152, 7152 ns/op
Iteration   1: n = 2029, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 59, 60, 83, 155, 189, 189 ns/op
Iteration   2: n = 2064, mean = 53 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 97, 118, 118 ns/op
Iteration   3: n = 2023, mean = 54 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 58, 60, 120, 123, 145, 145 ns/op
Iteration   4: n = 2045, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 52, 57, 60, 120, 122, 7248, 7248 ns/op
Iteration   5: n = 1968, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 58, 60, 120, 122, 122, 122 ns/op
Iteration   6: n = 1856, mean = 63 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 61, 110, 141, 1237, 7224, 7224 ns/op
Iteration   7: n = 1985, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 63, 67, 115, 145, 145 ns/op
Iteration   8: n = 2013, mean = 55 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 61, 77, 131, 195, 195 ns/op
Iteration   9: n = 2022, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 205, 7272, 7272 ns/op
Iteration  10: n = 2037, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 101, 140, 250, 306, 306 ns/op
Iteration  11: n = 2005, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 93, 128, 241, 241, 241 ns/op
Iteration  12: n = 2030, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 53, 60, 60, 61, 98, 7240, 7240 ns/op
Iteration  13: n = 2003, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 60, 112, 259, 294, 294 ns/op
Iteration  14: n = 1988, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 90, 138, 320, 359, 359 ns/op
Iteration  15: n = 1989, mean = 56 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 48, 54, 60, 60, 97, 161, 189, 189 ns/op
Iteration  16: n = 1981, mean = 60 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 57, 60, 101, 151, 288, 334, 334 ns/op
Iteration  17: n = 1983, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 61, 117, 277, 322, 322 ns/op
Iteration  18: n = 1985, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 69, 116, 228, 287, 287 ns/op
Iteration  19: n = 1974, mean = 58 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 54, 60, 90, 132, 221, 267, 267 ns/op
Iteration  20: n = 1978, mean = 57 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 49, 55, 60, 61, 114, 195, 224, 224 ns/op


Result: 57,039 ±(99.9%) 1,203 ns/op [Average]
  Statistics: (min, avg, max) = (48,000, 57,039, 7272,000), stdev = 73,046
  Confidence interval (99.9%): [55,836, 58,242]
  Samples, N = 39958
        mean =     57,039 ±(99.9%) 1,203 ns/op
         min =     48,000 ns/op
  p( 0,0000) =     48,000 ns/op
  p(50,0000) =     53,000 ns/op
  p(90,0000) =     60,000 ns/op
  p(95,0000) =     61,000 ns/op
  p(99,0000) =    119,000 ns/op
  p(99,9000) =    206,041 ns/op
  p(99,9900) =   7224,066 ns/op
  p(99,9990) =   7272,000 ns/op
  p(99,9999) =   7272,000 ns/op
         max =   7272,000 ns/op


# Run complete. Total time: 00:04:56

Benchmark                                                (x)    Mode    Cnt    Score    Error  Units
MyBenchmark.benchmarkLogarithmApacheCommon    0.000000000001  sample  63599   66,590 ±  1,210  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon       0.000000001  sample  64811   66,391 ±  1,535  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon          0.000001  sample  64574   66,993 ±  1,350  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon             0.001  sample  63812   66,640 ±  1,535  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon               0.1  sample  64829   65,529 ±  1,170  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon                 1  sample  47987  120,315 ± 14,745  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon                10  sample  69898   62,285 ±  1,321  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon               100  sample  69356   62,359 ±  1,229  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon              1000  sample  70830   61,544 ±  1,589  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon           1000000  sample  65185   65,067 ±  1,637  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon        1000000000  sample  65108   64,872 ±  1,196  ns/op
MyBenchmark.benchmarkLogarithmApacheCommon     1000000000000  sample  64627   66,602 ±  2,330  ns/op
MyBenchmark.benchmarkLogarithmJafama          0.000000000001  sample  68365   47,537 ±  1,249  ns/op
MyBenchmark.benchmarkLogarithmJafama             0.000000001  sample  68387   46,047 ±  1,152  ns/op
MyBenchmark.benchmarkLogarithmJafama                0.000001  sample  68573   45,233 ±  0,855  ns/op
MyBenchmark.benchmarkLogarithmJafama                   0.001  sample  66241   46,043 ±  1,085  ns/op
MyBenchmark.benchmarkLogarithmJafama                     0.1  sample  68341   46,401 ±  1,043  ns/op
MyBenchmark.benchmarkLogarithmJafama                       1  sample  69990   49,435 ±  0,858  ns/op
MyBenchmark.benchmarkLogarithmJafama                      10  sample  66128   48,306 ±  2,277  ns/op
MyBenchmark.benchmarkLogarithmJafama                     100  sample  67842   46,452 ±  0,723  ns/op
MyBenchmark.benchmarkLogarithmJafama                    1000  sample  66491   46,054 ±  1,127  ns/op
MyBenchmark.benchmarkLogarithmJafama                 1000000  sample  68188   46,300 ±  1,006  ns/op
MyBenchmark.benchmarkLogarithmJafama              1000000000  sample  67853   46,267 ±  1,014  ns/op
MyBenchmark.benchmarkLogarithmJafama           1000000000000  sample  68459   46,290 ±  1,185  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick  0.000000000001  sample  48807   35,795 ±  1,133  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick     0.000000001  sample  48685   35,889 ±  1,062  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick        0.000001  sample  48740   35,143 ±  1,040  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick           0.001  sample  48350   36,434 ±  0,856  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick             0.1  sample  46825   36,427 ±  1,021  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick               1  sample  53736   35,196 ±  1,081  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick              10  sample  47570   36,034 ±  1,017  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick             100  sample  47377   36,152 ±  0,877  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick            1000  sample  48976   35,112 ±  0,704  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick         1000000  sample  49338   34,982 ±  0,964  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick      1000000000  sample  47697   36,427 ±  0,878  ns/op
MyBenchmark.benchmarkLogarithmJafamaLogQuick   1000000000000  sample  47572   38,374 ±  1,138  ns/op
MyBenchmark.benchmarkLogarithmJdk             0.000000000001  sample  40568   56,027 ±  1,316  ns/op
MyBenchmark.benchmarkLogarithmJdk                0.000000001  sample  39925   56,796 ±  2,877  ns/op
MyBenchmark.benchmarkLogarithmJdk                   0.000001  sample  40574   56,655 ±  1,544  ns/op
MyBenchmark.benchmarkLogarithmJdk                      0.001  sample  39963   60,862 ± 14,106  ns/op
MyBenchmark.benchmarkLogarithmJdk                        0.1  sample  40128   55,406 ±  1,350  ns/op
MyBenchmark.benchmarkLogarithmJdk                          1  sample  57885   62,716 ±  1,378  ns/op
MyBenchmark.benchmarkLogarithmJdk                         10  sample  40298   56,621 ±  1,888  ns/op
MyBenchmark.benchmarkLogarithmJdk                        100  sample  39932   57,308 ±  1,085  ns/op
MyBenchmark.benchmarkLogarithmJdk                       1000  sample  44602   52,617 ±  1,621  ns/op
MyBenchmark.benchmarkLogarithmJdk                    1000000  sample  40719   55,363 ±  1,503  ns/op
MyBenchmark.benchmarkLogarithmJdk                 1000000000  sample  40371   56,226 ±  1,752  ns/op
MyBenchmark.benchmarkLogarithmJdk              1000000000000  sample  39958   57,039 ±  1,203  ns/op
